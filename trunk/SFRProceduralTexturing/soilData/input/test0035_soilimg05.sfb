
BitmapTexture01 = SFBitmapTextureData{
	bitmap = SFFunction2DBitmapData{
		width = 16 \\ height = 16
		function as SFFunctionRandomizerData{
			seed = 3
		}
	}
	textureModel = linearTextureModel
}

BasicMatColours as SFStructureArrayDataUnit8{
	structure = Mat01
	values = (0.83,0.83,0.83) (0.9,0.9,0.9)(1,1,1)
}


StoneSurface01 as SFSurfaceData{
	valuesData = SFVertexListDataUnit8{
		vertices = (0.6,0.4,0.0) (0.0,0.4,0.0) (0.1,0.0,0.0) (0.7,0.0,0.0) (0.3,0.0,+0.1) (0.7,0.0,+0.1)
	}
	surfaceFunction as SFRadialSurfaceFunctionData{
		firstCurve as SFBasisSpline2Data{
			vertices = (0,1,2,3)
			closed = 1
		}
		secondCurve as SFBasisSpline2Data{
			vertices = (4,5,3)
		}
	}
}

StoneSurface02 as SFSurfaceData{
	valuesData = SFVertexListDataUnit8{
		vertices = (0.3,0.1,0.0) (0.6,0.0,0.0) (0.45,0.3,0.0) (0.3,0.6,0.0) (0.15,0.4,0.0) (0.0,0.2,0.0)
					(0.4,0.2,0.08)(0.2,0.4,0.08)
	}
	surfaceFunction as SFRadialSurfaceFunctionData{
		firstCurve as SFBasisSpline2Data{
			vertices = (0,1,2,3,4,5)
			closed = 1
		}
		secondCurve as SFBasisSpline2Data{
			vertices = (6,7,4)
		}
	}
}

StoneSurface03 as SFSurfaceData{
	valuesData = SFVertexListDataUnit8{
		vertices = (0.0,0.0,0.0) (0.5,0.0,0.0) (0.6,0.3,0.0) (0.3,0.35,0.0) (0.0,0.5,0.0)
					(0.45,0.15,0.08)(0.1,0.1,0.08)(0.05,0.05,0.0)
	}
	surfaceFunction as SFRadialSurfaceFunctionData{
		firstCurve as SFBasisSpline2Data{
			vertices = (0,1,2,3,4)
			closed = 1
		}
		secondCurve as SFBasisSpline2Data{
			vertices = (5,6,7)
		}
	}
}

			
Stone01 as SFObjectModelData{
	transform = SFTranslateAndScaleFixed16Data{
		y = -0.5
		scale = 2.5
	}
	geometry = SFQuadsSurfaceGeometryData{
		NuNv = (6,6)
		primitive = Triangle2PNTxO
		surface == StoneSurface01
	}
	transformComponent as SFProgramAssetData{
		program = BasicPNTx0Transform
	}
	materialComponent as SFProgramAssetData{
		program = Turbulence
		structures = (16)(1)(0.6)(0.8,0.8,0.8)(1,1,1)
		textures = BitmapTexture01
	}
}	

Stone02 as Stone01{
	geometry = SFQuadsSurfaceGeometryData{
		NuNv = (6,6)
		primitive = Triangle2PNTxO
		surface == StoneSurface02
	}
	materialComponent as SFProgramAssetData{
		program = Turbulence
		structures = (16)(1)(0.6)(0.9,0.9,0.9)(1,1,1)
		textures = BitmapTexture01
	}
}

Stone03 as Stone01{
	geometry = SFQuadsSurfaceGeometryData{
		NuNv = (6,6)
		primitive = Triangle2PNTxO
		surface == StoneSurface03
	}
	materialComponent as SFProgramAssetData{
		program = Turbulence
		structures = (16)(1)(0.6)(0.85,0.85,0.85)(1,1,1)
		textures = BitmapTexture01
	}
}

RectangleObjectRepeater as SFRandomTransform2DRepeaterData{
	minX=-0.55 \\ maxX=0.55
	minY=-0.55 \\ maxY=0.55
	minScale=0.1 \\ maxScale=0.2
	minRot=-0.707 \\ maxRot=0.707
	seed=30 \\ count=1700
}


Renderer00002 as SFRendererData{
	light as SFProgramAssetData{
		program = BasicLSPN2
		structures= (0.8,0.8,0.8)(0,0,-2)
		viewSize = 512
	}
}


RenderedTexture0001 as SFRenderingAlgorithmData{
	stack = SFRenderedTextureStackData{
		textures = SFRenderedTextureData{
			size = (512,512)
			useDepth = false
			textureModel = linearTextureModel
		}
	}
	process = SFRenderingProcessData{
		drawables as SFRenderedTextureStackPushData 
		drawables += SFRenderingProcessData{
			drawables = SFStateDrawableData{
				state = MainViewerSetup
			}
			drawables += SFRepeatingDrawableArrayData{
				renderer == Renderer00002
				nodes == Stone01,Stone02,Stone03
				repeater == RectangleObjectRepeater
			}
		}
		drawables += SFRenderedTextureStackPopData 
	}
}

RenderedTexture0002 as SFRenderingAlgorithmData{
	stack = SFRenderedTextureStackData{
		textures = SFRenderedTextureData{
			size = (800,800)
			useDepth = false
			textureModel = linearTextureModel
		}
	}
	process = SFRenderingProcessData{
		drawables as SFRenderedTextureStackPushData 
		drawables += SFRenderingProcessData{
			drawables = SFStateDrawableData{
				state = BlendModeAdd
			}
			drawables += SFImageModelData{
				materialComponent = SFProgramAssetData{
					program = GaussianFilterHorizontal
					textures = RenderedTexture0001
				}
				lightComponent = SFProgramAssetData{
					program = BasicColor
					
				}
			}
		}
		drawables += SFRenderedTextureStackPopData 
	}
}

RenderedTexture0003 as SFRenderingAlgorithmData{
	stack = SFRenderedTextureStackData{
		textures = SFRenderedTextureData{
			size = (800,800)
			useDepth = false
			textureModel = linearTextureModel
		}
	}
	process = SFRenderingProcessData{
		drawables as SFRenderedTextureStackPushData 
		drawables += SFRenderingProcessData{
			drawables = SFStateDrawableData{
				state = BlendModeAdd
			}
			drawables += SFImageModelData{
				materialComponent = SFProgramAssetData{
					program = GaussianFilterVertical
					textures = RenderedTexture0002
				}
				lightComponent = SFProgramAssetData{
					program = BasicColor
					
				}
			}
		}
		drawables += SFRenderedTextureStackPopData 
	}
}




RenderedTextureViewer0002 as SFImageModelData{
	materialComponent = SFProgramAssetData{
		program = TexturedMat
		textures = RenderedTexture0003
	}
	lightComponent = SFProgramAssetData{
		program = BasicColor
	}
}