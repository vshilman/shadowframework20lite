materialComponent CubicOctaveFilterSnow(ImageOctave octave,Texture texture0){
	vec2 multTexCoord = texCoord0*vec2(octave_octave);
	vec2 uvcoord = floor(vec2(octave_bitmapSize)*multTexCoord);
	vec2 uvcoordBase = vec2(octave_bitmapSize)*multTexCoord-uvcoord;
	vec2 uvcoordEff = uvcoord/vec2(octave_bitmapSize);
	float delta = 1.0/octave_bitmapSize;
	
	vec3 zImm00=texture2D(texture0_texture,uvcoordEff).xyz;
	vec3 zImm10=texture2D(texture0_texture,uvcoordEff+vec2(delta,0.0)).xyz;
	vec3 zImm01=texture2D(texture0_texture,uvcoordEff+vec2(0.0,delta)).xyz;
	vec3 zImm11=texture2D(texture0_texture,uvcoordEff+vec2(delta,delta)).xyz;
	
	vec3 zImm20=texture2D(texture0_texture,uvcoordEff+vec2(delta*2.0,0.0)).xyz;
	vec3 zImm21=texture2D(texture0_texture,uvcoordEff+vec2(delta*2.0,delta)).xyz;
	vec3 zImm02=texture2D(texture0_texture,uvcoordEff+vec2(0.0,delta*2.0)).xyz;
	vec3 zImm12=texture2D(texture0_texture,uvcoordEff+vec2(delta,delta*2.0)).xyz;
	vec3 zImml0=texture2D(texture0_texture,uvcoordEff+vec2(-delta,0.0)).xyz;
	vec3 zImml1=texture2D(texture0_texture,uvcoordEff+vec2(-delta,delta)).xyz;
	vec3 zImm0l=texture2D(texture0_texture,uvcoordEff+vec2(0.0,-delta)).xyz;
	vec3 zImm1l=texture2D(texture0_texture,uvcoordEff+vec2(delta,-delta)).xyz;
	
	vec3 t=vec3(uvcoordBase.x);
	vec3 s=vec3(uvcoordBase.y);
	vec3 tm=vec3(1.0)-t;
	vec3 sm=vec3(1.0)-s;
	
	vec3 vf6=vec3(0.1666);
	
	vec3 b00 = zImm00;
	vec3 b01 = zImm00+(zImm10-zImml0)*vf6;
	vec3 b02 = zImm10+(zImm00-zImm20)*vf6;
	vec3 b03 = zImm10;
	
	vec3 b10 = zImm00+(zImm01-zImm0l)*vf6;
	vec3 b11 = zImm00+(zImm01-zImm0l+zImm10-zImml0)*vf6;
	vec3 b12 = zImm10+(zImm11-zImm1l+zImm00-zImm20)*vf6;
	vec3 b13 = zImm10+(zImm11-zImm1l)*vf6;
	
	vec3 b20 = zImm01+(zImm00-zImm02)*vf6;
	vec3 b21 = zImm01+(zImm00-zImm02+zImm11-zImml1)*vf6;
	vec3 b22 = zImm11+(zImm10-zImm12+zImm01-zImm21)*vf6;
	vec3 b23 = zImm11+(zImm10-zImm12)*vf6;
	
	vec3 b30 = zImm01;
	vec3 b31 = zImm01+(zImm11-zImml1)*vf6;
	vec3 b32 = zImm11+(zImm01-zImm21)*vf6;
	vec3 b33 = zImm11;
	
	vec3 v3 = vec3(3.0);
	vec3 val3 = sm*sm*sm*(b00*tm*tm*tm+b01*v3*t*tm*tm+b02*v3*t*t*tm+b03*t*t*t)
	            +v3*s*sm*sm*(b10*tm*tm*tm+b11*v3*t*tm*tm+b12*v3*t*t*tm+b13*t*t*t)
	            +v3*s*s*sm*(b20*tm*tm*tm+b21*v3*t*tm*tm+b22*v3*t*t*tm+b23*t*t*t)
	            +s*s*s*(b30*tm*tm*tm+b31*v3*t*tm*tm+b32*v3*t*t*tm+b33*t*t*t);
	
	vec3 perlinColor = vec3(octave_intensity)*val3;
	perlinColor = perlinColor - perlinColor*0.1;
	vec3 color=perlinColor;
	vec3 matnormal = normal;
}



materialComponent GaussianFilterHorizontal(Texture texture0){
	
	float blur_size = 1/800;
	
	vec2 gaussCoord1 = vec2(texCoord0.x - 4.0*blur_size,texCoord0.y);
	vec3 sum = texture2D(texture0_texture,gaussCoord1).xyz * vec3(0.05);
	
	vec2 gaussCoord2 = vec2(texCoord0.x - 3.0*blur_size,texCoord0.y);
	sum = sum + texture2D(texture0_texture,gaussCoord2).xyz * vec3(0.09);
	
	vec2 gaussCoord3 = vec2(texCoord0.x - 2.0*blur_size,texCoord0.y);
	sum = sum + texture2D(texture0_texture,gaussCoord3).xyz * vec3(0.12);
	
	vec2 gaussCoord4 = vec2(texCoord0.x - blur_size,texCoord0.y);
	sum = sum + texture2D(texture0_texture,gaussCoord4).xyz * vec3(0.15);
	
	sum = sum + texture2D(texture0_texture,texCoord0).xyz * vec3(0.16);
	
	vec2 gaussCoord6 = vec2(texCoord0.x + blur_size,texCoord0.y);
	sum = sum + texture2D(texture0_texture,gaussCoord6).xyz * vec3(0.15);
	
	vec2 gaussCoord7 = vec2(texCoord0.x + 2.0*blur_size,texCoord0.y);
	sum = sum + texture2D(texture0_texture,gaussCoord7).xyz * vec3(0.12);
	
	vec2 gaussCoord8 = vec2(texCoord0.x + 3.0*blur_size,texCoord0.y);
	sum = sum + texture2D(texture0_texture,gaussCoord8).xyz * vec3(0.09);
	
	vec2 gaussCoord9 = vec2(texCoord0.x + 4.0*blur_size,texCoord0.y);
	sum = sum + texture2D(texture0_texture,gaussCoord9).xyz * vec3(0.05);
	
	vec3 color= vec3(texture2D(texture0_texture,texCoord0).xyz*sum);
	vec3 matnormal = normal;
}

materialComponent GaussianFilterVertical(Texture texture0){
	
	float blur_size = 1/800;
	
	vec2 gaussCoord1 = vec2(texCoord0.x,texCoord0.y- 4.0*blur_size);
	vec3 sum = texture2D(texture0_texture,gaussCoord1).xyz * vec3(0.05);
	
	vec2 gaussCoord2 = vec2(texCoord0.x,texCoord0.y - 3.0*blur_size);
	sum = sum + texture2D(texture0_texture,gaussCoord2).xyz * vec3(0.09);
	
	vec2 gaussCoord3 = vec2(texCoord0.x,texCoord0.y - 2.0*blur_size);
	sum = sum + texture2D(texture0_texture,gaussCoord3).xyz * vec3(0.12);
	
	vec2 gaussCoord4 = vec2(texCoord0.x,texCoord0.y - blur_size);
	sum = sum + texture2D(texture0_texture,gaussCoord4).xyz * vec3(0.15);
	
	sum = sum + texture2D(texture0_texture,texCoord0).xyz * vec3(0.16);
	
	vec2 gaussCoord6 = vec2(texCoord0.x,texCoord0.y + blur_size);
	sum = sum + texture2D(texture0_texture,gaussCoord6).xyz * vec3(0.15);
	
	vec2 gaussCoord7 = vec2(texCoord0.x,texCoord0.y + 2.0*blur_size);
	sum = sum + texture2D(texture0_texture,gaussCoord7).xyz * vec3(0.12);
	
	vec2 gaussCoord8 = vec2(texCoord0.x,texCoord0.y + 3.0*blur_size);
	sum = sum + texture2D(texture0_texture,gaussCoord8).xyz * vec3(0.09);
	
	vec2 gaussCoord9 = vec2(texCoord0.x,texCoord0.y + 4.0*blur_size);
	sum = sum + texture2D(texture0_texture,gaussCoord9).xyz * vec3(0.05);
	
	vec3 color= vec3(texture2D(texture0_texture,texCoord0).xyz*sum);
	vec3 matnormal = normal;
}