
test_sv1Drawer.js
[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var vertexPositionAttribute 
VARIABLE:var vertexPositionAttribute 
		KEYWORD:var
		NAME:vertexPositionAttribute 
				NAME:vertexPositionAttribute
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var vertexColorAttribute 
VARIABLE:var vertexColorAttribute 
		KEYWORD:var
		NAME:vertexColorAttribute 
				NAME:vertexColorAttribute
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var pMatrixUniform 
VARIABLE:var pMatrixUniform 
		KEYWORD:var
		NAME:pMatrixUniform 
				NAME:pMatrixUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var mvMatrixUniform 
VARIABLE:var mvMatrixUniform 
		KEYWORD:var
		NAME:mvMatrixUniform 
				NAME:mvMatrixUniform
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var triangleVertexPositionBuffer  = new  Array  (  )
VARIABLE:var triangleVertexPositionBuffer 
		KEYWORD:var
		NAME:triangleVertexPositionBuffer 
				NAME:triangleVertexPositionBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var triangleVertexColorBuffer  = new  Array  (  )
VARIABLE:var triangleVertexColorBuffer 
		KEYWORD:var
		NAME:triangleVertexColorBuffer 
				NAME:triangleVertexColorBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var squareVertexPositionBuffer  = new  Array  (  )
VARIABLE:var squareVertexPositionBuffer 
		KEYWORD:var
		NAME:squareVertexPositionBuffer 
				NAME:squareVertexPositionBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var squareVertexColorBuffer  = new  Array  (  )
VARIABLE:var squareVertexColorBuffer 
		KEYWORD:var
		NAME:squareVertexColorBuffer 
				NAME:squareVertexColorBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var pMatrix 
VARIABLE:var pMatrix 
		KEYWORD:var
		NAME:pMatrix 
				NAME:pMatrix
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var mvMatrix 
VARIABLE:var mvMatrix 
		KEYWORD:var
		NAME:mvMatrix 
				NAME:mvMatrix
				IGNORED:


[CONSTRUCTOR_DECLARATION] -------> function Test_sv1Drawer  (  )
KEYWORD:function
NAME:Test_sv1Drawer 
		NAME:Test_sv1Drawer
		IGNORED:
KEYWORD:(
METHOD_VARIABLES:
KEYWORD:)


[CLASS_DECLARATION] -------> Test_sv1Drawer . prototype =
NAME:Test_sv1Drawer
KEYWORD:.
KEYWORD:prototype
KEYWORD:=


[METHOD_DECLARATION] ------->  initShaders : function ( gl  )
IGNORED:
NAME:initShaders
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var shaderProgram  =  getShaderProgram  ( gl , "shaders /shader1.fs" , "shaders /shader1.vs"  )
VARIABLE:var shaderProgram 
		KEYWORD:var
		NAME:shaderProgram 
				NAME:shaderProgram
				IGNORED:
KEYWORD:=
CALL: getShaderProgram  ( gl , "shaders /shader1.fs" , "shaders /shader1.vs"  )
		IGNORED:
		SEQUENCE:getShaderProgram  ( gl , "shaders /shader1.fs" , "shaders /shader1.vs"  )
				COMPOSITE:getShaderProgram  ( gl , "shaders /shader1.fs" , "shaders /shader1.vs"  )
						COMPOSITE:getShaderProgram 
								NAME:getShaderProgram
								IGNORED:
						KEYWORD:(
						SEQUENCE:gl , "shaders /shader1.fs" , "shaders /shader1.vs" 
								EXPRESSION:gl 
										VARIABLE:gl 
												NAME:gl
												IGNORED:
								KEYWORD:, 
								EXPRESSION:"shaders /shader1.fs" 
										VARIABLE:"shaders 
												NAME:"shaders
												IGNORED:
										OPERATOR:/
										VARIABLE:shader1.fs" 
												NAME:shader1.fs"
												IGNORED:
								KEYWORD:, 
								EXPRESSION:"shaders /shader1.vs" 
										VARIABLE:"shaders 
												NAME:"shaders
												IGNORED:
										OPERATOR:/
										VARIABLE:shader1.vs" 
												NAME:shader1.vs"
												IGNORED:
						KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> vertexPositionAttribute   = gl. getAttribLocation ( shaderProgram , "aVertexPosition"  )
NAME:vertexPositionAttribute 
		NAME:vertexPositionAttribute
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getAttribLocation ( shaderProgram , "aVertexPosition"  )
		OPENGL_CALL:gl. getAttribLocation ( shaderProgram , "aVertexPosition"  )
				KEYWORD:gl.
				NAME:getAttribLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "aVertexPosition" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"aVertexPosition" 
								VARIABLE:"aVertexPosition" 
										NAME:"aVertexPosition"
										IGNORED:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enableVertexAttribArray ( vertexPositionAttribute  )
OPENGL_CALL:gl. enableVertexAttribArray ( vertexPositionAttribute  )
		KEYWORD:gl.
		NAME:enableVertexAttribArray
		KEYWORD:(
		SEQUENCE:vertexPositionAttribute 
				EXPRESSION:vertexPositionAttribute 
						VARIABLE:vertexPositionAttribute 
								NAME:vertexPositionAttribute
								IGNORED:
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> vertexColorAttribute   = gl. getAttribLocation ( shaderProgram , "aVertexColor"  )
NAME:vertexColorAttribute 
		NAME:vertexColorAttribute
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getAttribLocation ( shaderProgram , "aVertexColor"  )
		OPENGL_CALL:gl. getAttribLocation ( shaderProgram , "aVertexColor"  )
				KEYWORD:gl.
				NAME:getAttribLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "aVertexColor" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"aVertexColor" 
								VARIABLE:"aVertexColor" 
										NAME:"aVertexColor"
										IGNORED:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enableVertexAttribArray ( vertexColorAttribute  )
OPENGL_CALL:gl. enableVertexAttribArray ( vertexColorAttribute  )
		KEYWORD:gl.
		NAME:enableVertexAttribArray
		KEYWORD:(
		SEQUENCE:vertexColorAttribute 
				EXPRESSION:vertexColorAttribute 
						VARIABLE:vertexColorAttribute 
								NAME:vertexColorAttribute
								IGNORED:
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pMatrixUniform   = gl. getUniformLocation ( shaderProgram , "uPMatrix"  )
NAME:pMatrixUniform 
		NAME:pMatrixUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uPMatrix"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uPMatrix"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uPMatrix" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uPMatrix" 
								VARIABLE:"uPMatrix" 
										NAME:"uPMatrix"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrixUniform   = gl. getUniformLocation ( shaderProgram , "uMVMatrix"  )
NAME:mvMatrixUniform 
		NAME:mvMatrixUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uMVMatrix"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uMVMatrix"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uMVMatrix" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uMVMatrix" 
								VARIABLE:"uMVMatrix" 
										NAME:"uMVMatrix"
										IGNORED:
				KEYWORD:)


[METHOD_DECLARATION] -------> , setMatrixUniforms : function ( gl  )
KEYWORD:,
NAME:setMatrixUniforms
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniformMatrix4fv ( pMatrixUniform , false , pMatrix  )
OPENGL_CALL:gl. uniformMatrix4fv ( pMatrixUniform , false , pMatrix  )
		KEYWORD:gl.
		NAME:uniformMatrix4fv
		KEYWORD:(
		SEQUENCE:pMatrixUniform , false , pMatrix 
				EXPRESSION:pMatrixUniform 
						VARIABLE:pMatrixUniform 
								NAME:pMatrixUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:pMatrix 
						VARIABLE:pMatrix 
								NAME:pMatrix
								IGNORED:
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniformMatrix4fv ( mvMatrixUniform , false , mvMatrix  )
OPENGL_CALL:gl. uniformMatrix4fv ( mvMatrixUniform , false , mvMatrix  )
		KEYWORD:gl.
		NAME:uniformMatrix4fv
		KEYWORD:(
		SEQUENCE:mvMatrixUniform , false , mvMatrix 
				EXPRESSION:mvMatrixUniform 
						VARIABLE:mvMatrixUniform 
								NAME:mvMatrixUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:mvMatrix 
						VARIABLE:mvMatrix 
								NAME:mvMatrix
								IGNORED:
		KEYWORD:)


[METHOD_DECLARATION] -------> , initBuffers : function ( gl  )
KEYWORD:,
NAME:initBuffers
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> triangleVertexPositionBuffer [ 0 ]  = gl. createBuffer (  )
NAME:triangleVertexPositionBuffer [ 0 ]
		NAME:triangleVertexPositionBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, triangleVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, triangleVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, triangleVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:triangleVertexPositionBuffer [ 0 ]
						VARIABLE:triangleVertexPositionBuffer [ 0 ]
								NAME:triangleVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var vertices  = [ 0.0,1.0,0.0,-1.0,-1.0,0.0,1.0,-1.0,0.0 ]
VARIABLE:var vertices 
		KEYWORD:var
		NAME:vertices 
				NAME:vertices
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ 0.0,1.0,0.0,-1.0,-1.0,0.0,1.0,-1.0,0.0 ]
		KEYWORD:[
		SEQUENCE:0.0,1.0,0.0,-1.0,-1.0,0.0,1.0,-1.0,0.0
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( vertices  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( vertices  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( vertices  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( vertices  )
						NEW_STATEMENT:new  Float32Array  ( vertices  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( vertices  )
										KEYWORD:(
										SEQUENCE:vertices 
												EXPRESSION:vertices 
														VARIABLE:vertices 
																NAME:vertices
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> triangleVertexPositionBuffer [ 1 ]  = 3
NAME:triangleVertexPositionBuffer [ 1 ]
		NAME:triangleVertexPositionBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:3
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> triangleVertexPositionBuffer [ 2 ]  = 3
NAME:triangleVertexPositionBuffer [ 2 ]
		NAME:triangleVertexPositionBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:3
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> triangleVertexColorBuffer [ 0 ]  = gl. createBuffer (  )
NAME:triangleVertexColorBuffer [ 0 ]
		NAME:triangleVertexColorBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, triangleVertexColorBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, triangleVertexColorBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, triangleVertexColorBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:triangleVertexColorBuffer [ 0 ]
						VARIABLE:triangleVertexColorBuffer [ 0 ]
								NAME:triangleVertexColorBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var colors  = [ 1.0,0.0,0.0,1.0,0.0,1.0,0.0,1.0,0.0,0.0,1.0,1.0 ]
VARIABLE:var colors 
		KEYWORD:var
		NAME:colors 
				NAME:colors
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ 1.0,0.0,0.0,1.0,0.0,1.0,0.0,1.0,0.0,0.0,1.0,1.0 ]
		KEYWORD:[
		SEQUENCE:1.0,0.0,0.0,1.0,0.0,1.0,0.0,1.0,0.0,0.0,1.0,1.0
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( colors  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( colors  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( colors  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( colors  )
						NEW_STATEMENT:new  Float32Array  ( colors  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( colors  )
										KEYWORD:(
										SEQUENCE:colors 
												EXPRESSION:colors 
														VARIABLE:colors 
																NAME:colors
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> triangleVertexColorBuffer [ 1 ]  = 4
NAME:triangleVertexColorBuffer [ 1 ]
		NAME:triangleVertexColorBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:4
		VALUE:4


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> triangleVertexColorBuffer [ 2 ]  = 3
NAME:triangleVertexColorBuffer [ 2 ]
		NAME:triangleVertexColorBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:3
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> squareVertexPositionBuffer [ 0 ]  = gl. createBuffer (  )
NAME:squareVertexPositionBuffer [ 0 ]
		NAME:squareVertexPositionBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, squareVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, squareVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, squareVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:squareVertexPositionBuffer [ 0 ]
						VARIABLE:squareVertexPositionBuffer [ 0 ]
								NAME:squareVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var vertices2  = [ 1.0,1.0,0.0,-1.0,1.0,0.0,1.0,-1.0,0.0,-1.0,-1.0,0.0 ]
VARIABLE:var vertices2 
		KEYWORD:var
		NAME:vertices2 
				NAME:vertices2
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ 1.0,1.0,0.0,-1.0,1.0,0.0,1.0,-1.0,0.0,-1.0,-1.0,0.0 ]
		KEYWORD:[
		SEQUENCE:1.0,1.0,0.0,-1.0,1.0,0.0,1.0,-1.0,0.0,-1.0,-1.0,0.0
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( vertices2  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( vertices2  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( vertices2  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( vertices2  )
						NEW_STATEMENT:new  Float32Array  ( vertices2  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( vertices2  )
										KEYWORD:(
										SEQUENCE:vertices2 
												EXPRESSION:vertices2 
														VARIABLE:vertices2 
																NAME:vertices2
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> squareVertexPositionBuffer [ 1 ]  = 3
NAME:squareVertexPositionBuffer [ 1 ]
		NAME:squareVertexPositionBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:3
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> squareVertexPositionBuffer [ 2 ]  = 4
NAME:squareVertexPositionBuffer [ 2 ]
		NAME:squareVertexPositionBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:4
		VALUE:4


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> squareVertexColorBuffer [ 0 ]  = gl. createBuffer (  )
NAME:squareVertexColorBuffer [ 0 ]
		NAME:squareVertexColorBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, squareVertexColorBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, squareVertexColorBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, squareVertexColorBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:squareVertexColorBuffer [ 0 ]
						VARIABLE:squareVertexColorBuffer [ 0 ]
								NAME:squareVertexColorBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var colors2  = new  Array  (  )
VARIABLE:var colors2 
		KEYWORD:var
		NAME:colors2 
				NAME:colors2
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[FOR, ASSIGNMENT, LINE_OF_CODE] -------> for ( var i  = 0 ; i  < 4 ; i  ++  )
KEYWORD:for
KEYWORD:(
COMPOSITE:var i  = 0
		VARIABLE:var i 
				KEYWORD:var
				NAME:i 
						NAME:i
						IGNORED:
		KEYWORD:=
		EXPRESSION:0
				VALUE:0
KEYWORD:;
VALUE:i 
		VALUE:i
		IGNORED:
KEYWORD:<
EXPRESSION:4
		VALUE:4
KEYWORD:;
SEQUENCE:i  ++ 
		COMPOSITE:i  ++ 
				VARIABLE:i 
						VARIABLE:i
						IGNORED:
				KEYWORD:++
				EXPRESSION:
						IGNORED:
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var c  = i <<2
VARIABLE:var c 
		KEYWORD:var
		NAME:c 
				NAME:c
				IGNORED:
KEYWORD:=
EXPRESSION:i <<2
		VARIABLE:i 
				NAME:i
				IGNORED:
		OPERATOR:<<
		VALUE:2


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> colors2 [ c  ]  = 1
NAME:colors2 [ c  ]
		NAME:colors2
		COMPOSITE:[ c  ]
				KEYWORD:[
				EXPRESSION:c 
						NAME:c 
								NAME:c
								IGNORED:
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:1
		VALUE:1


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> colors2 [ c +1 ]  = 0.75
NAME:colors2 [ c +1 ]
		NAME:colors2
		COMPOSITE:[ c +1 ]
				KEYWORD:[
				EXPRESSION:c +1
						NAME:c 
								NAME:c
								IGNORED:
						OPERATOR:+
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:0.75
		VALUE:0.75


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> colors2 [ c +2 ]  = 0.8
NAME:colors2 [ c +2 ]
		NAME:colors2
		COMPOSITE:[ c +2 ]
				KEYWORD:[
				EXPRESSION:c +2
						NAME:c 
								NAME:c
								IGNORED:
						OPERATOR:+
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:0.8
		VALUE:0.8


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> colors2 [ c +3 ]  = 1
NAME:colors2 [ c +3 ]
		NAME:colors2
		COMPOSITE:[ c +3 ]
				KEYWORD:[
				EXPRESSION:c +3
						NAME:c 
								NAME:c
								IGNORED:
						OPERATOR:+
						VALUE:3
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:1
		VALUE:1


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( colors2  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( colors2  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( colors2  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( colors2  )
						NEW_STATEMENT:new  Float32Array  ( colors2  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( colors2  )
										KEYWORD:(
										SEQUENCE:colors2 
												EXPRESSION:colors2 
														VARIABLE:colors2 
																NAME:colors2
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> squareVertexColorBuffer [ 1 ]  = 4
NAME:squareVertexColorBuffer [ 1 ]
		NAME:squareVertexColorBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:4
		VALUE:4


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> squareVertexColorBuffer [ 2 ]  = 4
NAME:squareVertexColorBuffer [ 2 ]
		NAME:squareVertexColorBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:4
		VALUE:4


[METHOD_DECLARATION] -------> , drawScene : function ( gl  )
KEYWORD:,
NAME:drawScene
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. clearColor ( 0.0, 0.0, 0.0, 1.0 )
OPENGL_CALL:gl. clearColor ( 0.0, 0.0, 0.0, 1.0 )
		KEYWORD:gl.
		NAME:clearColor
		KEYWORD:(
		SEQUENCE:0.0, 0.0, 0.0, 1.0
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:, 
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:, 
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:, 
				EXPRESSION:1.0
						VALUE:1.0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enable ( gl. DEPTH_TEST )
OPENGL_CALL:gl. enable ( gl. DEPTH_TEST )
		KEYWORD:gl.
		NAME:enable
		KEYWORD:(
		SEQUENCE:gl. DEPTH_TEST
				EXPRESSION:gl. DEPTH_TEST
						OPENGL_CONSTANT:gl. DEPTH_TEST
								KEYWORD:gl.
								NAME:DEPTH_TEST
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. viewport ( 0, 0, 500, 500 )
OPENGL_CALL:gl. viewport ( 0, 0, 500, 500 )
		KEYWORD:gl.
		NAME:viewport
		KEYWORD:(
		SEQUENCE:0, 0, 500, 500
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:500
						VALUE:500
				KEYWORD:, 
				EXPRESSION:500
						VALUE:500
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. clear ( gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT )
OPENGL_CALL:gl. clear ( gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT )
		KEYWORD:gl.
		NAME:clear
		KEYWORD:(
		SEQUENCE:gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT
				EXPRESSION:gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT
						OPENGL_CONSTANT:gl. COLOR_BUFFER_BIT
								KEYWORD:gl.
								NAME:COLOR_BUFFER_BIT
						OPERATOR:|
						OPENGL_CONSTANT:gl. DEPTH_BUFFER_BIT
								KEYWORD:gl.
								NAME:DEPTH_BUFFER_BIT
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pMatrix   = new  Float32Array  ( [ 1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4 ] )
NAME:pMatrix 
		NAME:pMatrix
		IGNORED:
IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Float32Array  ( [ 1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4 ] )
		KEYWORD:new 
		TYPE:Float32Array 
				TYPE:Float32Array
				IGNORED:
		COMPOSITE:( [ 1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4 ] )
				KEYWORD:(
				SEQUENCE:[ 1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4 ]
						ARRAY_CONTENT:[ 1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4 ]
								KEYWORD:[
								SEQUENCE:1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4
										EXPRESSION:1
												VALUE:1
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:1
												VALUE:1
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:1
												VALUE:1
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:4
												VALUE:4
								KEYWORD:]
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix   = new  Float32Array  ( [ 1,0,0,0,0,1,0,0,0,0,1,0,-1.5,0,0,1 ] )
NAME:mvMatrix 
		NAME:mvMatrix
		IGNORED:
IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Float32Array  ( [ 1,0,0,0,0,1,0,0,0,0,1,0,-1.5,0,0,1 ] )
		KEYWORD:new 
		TYPE:Float32Array 
				TYPE:Float32Array
				IGNORED:
		COMPOSITE:( [ 1,0,0,0,0,1,0,0,0,0,1,0,-1.5,0,0,1 ] )
				KEYWORD:(
				SEQUENCE:[ 1,0,0,0,0,1,0,0,0,0,1,0,-1.5,0,0,1 ]
						ARRAY_CONTENT:[ 1,0,0,0,0,1,0,0,0,0,1,0,-1.5,0,0,1 ]
								KEYWORD:[
								SEQUENCE:1,0,0,0,0,1,0,0,0,0,1,0,-1.5,0,0,1
										EXPRESSION:1
												VALUE:1
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:1
												VALUE:1
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:1
												VALUE:1
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:-1.5
												VALUE:-1.5
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:1
												VALUE:1
								KEYWORD:]
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, triangleVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, triangleVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, triangleVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:triangleVertexPositionBuffer [ 0 ]
						VARIABLE:triangleVertexPositionBuffer [ 0 ]
								NAME:triangleVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( vertexPositionAttribute , triangleVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( vertexPositionAttribute , triangleVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:vertexPositionAttribute , triangleVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:vertexPositionAttribute 
						VARIABLE:vertexPositionAttribute 
								NAME:vertexPositionAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:triangleVertexPositionBuffer [ 1 ]
						VARIABLE:triangleVertexPositionBuffer [ 1 ]
								NAME:triangleVertexPositionBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, triangleVertexColorBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, triangleVertexColorBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, triangleVertexColorBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:triangleVertexColorBuffer [ 0 ]
						VARIABLE:triangleVertexColorBuffer [ 0 ]
								NAME:triangleVertexColorBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( vertexColorAttribute , triangleVertexColorBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( vertexColorAttribute , triangleVertexColorBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:vertexColorAttribute , triangleVertexColorBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:vertexColorAttribute 
						VARIABLE:vertexColorAttribute 
								NAME:vertexColorAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:triangleVertexColorBuffer [ 1 ]
						VARIABLE:triangleVertexColorBuffer [ 1 ]
								NAME:triangleVertexColorBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.setMatrixUniforms  ( gl  )
CALL: this.setMatrixUniforms  ( gl  )
		IGNORED:
		SEQUENCE:this.setMatrixUniforms  ( gl  )
				COMPOSITE:this.setMatrixUniforms  ( gl  )
						COMPOSITE:this.setMatrixUniforms 
								NAME:this.setMatrixUniforms
								IGNORED:
						KEYWORD:(
						SEQUENCE:gl 
								EXPRESSION:gl 
										VARIABLE:gl 
												NAME:gl
												IGNORED:
						KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. drawArrays ( gl. TRIANGLES, 0, triangleVertexPositionBuffer [ 2 ] )
OPENGL_CALL:gl. drawArrays ( gl. TRIANGLES, 0, triangleVertexPositionBuffer [ 2 ] )
		KEYWORD:gl.
		NAME:drawArrays
		KEYWORD:(
		SEQUENCE:gl. TRIANGLES, 0, triangleVertexPositionBuffer [ 2 ]
				EXPRESSION:gl. TRIANGLES
						OPENGL_CONSTANT:gl. TRIANGLES
								KEYWORD:gl.
								NAME:TRIANGLES
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:triangleVertexPositionBuffer [ 2 ]
						VARIABLE:triangleVertexPositionBuffer [ 2 ]
								NAME:triangleVertexPositionBuffer
								COMPOSITE:[ 2 ]
										KEYWORD:[
										EXPRESSION:2
												VALUE:2
										KEYWORD:]
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix   = new  Float32Array  ( [ 1,0,0,0,0,1,0,0,0,0,1,0,1.5,0,0,1 ] )
NAME:mvMatrix 
		NAME:mvMatrix
		IGNORED:
IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Float32Array  ( [ 1,0,0,0,0,1,0,0,0,0,1,0,1.5,0,0,1 ] )
		KEYWORD:new 
		TYPE:Float32Array 
				TYPE:Float32Array
				IGNORED:
		COMPOSITE:( [ 1,0,0,0,0,1,0,0,0,0,1,0,1.5,0,0,1 ] )
				KEYWORD:(
				SEQUENCE:[ 1,0,0,0,0,1,0,0,0,0,1,0,1.5,0,0,1 ]
						ARRAY_CONTENT:[ 1,0,0,0,0,1,0,0,0,0,1,0,1.5,0,0,1 ]
								KEYWORD:[
								SEQUENCE:1,0,0,0,0,1,0,0,0,0,1,0,1.5,0,0,1
										EXPRESSION:1
												VALUE:1
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:1
												VALUE:1
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:1
												VALUE:1
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:1.5
												VALUE:1.5
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:1
												VALUE:1
								KEYWORD:]
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, squareVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, squareVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, squareVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:squareVertexPositionBuffer [ 0 ]
						VARIABLE:squareVertexPositionBuffer [ 0 ]
								NAME:squareVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( vertexPositionAttribute , squareVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( vertexPositionAttribute , squareVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:vertexPositionAttribute , squareVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:vertexPositionAttribute 
						VARIABLE:vertexPositionAttribute 
								NAME:vertexPositionAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:squareVertexPositionBuffer [ 1 ]
						VARIABLE:squareVertexPositionBuffer [ 1 ]
								NAME:squareVertexPositionBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, squareVertexColorBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, squareVertexColorBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, squareVertexColorBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:squareVertexColorBuffer [ 0 ]
						VARIABLE:squareVertexColorBuffer [ 0 ]
								NAME:squareVertexColorBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( vertexColorAttribute , squareVertexColorBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( vertexColorAttribute , squareVertexColorBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:vertexColorAttribute , squareVertexColorBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:vertexColorAttribute 
						VARIABLE:vertexColorAttribute 
								NAME:vertexColorAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:squareVertexColorBuffer [ 1 ]
						VARIABLE:squareVertexColorBuffer [ 1 ]
								NAME:squareVertexColorBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.setMatrixUniforms  ( gl  )
CALL: this.setMatrixUniforms  ( gl  )
		IGNORED:
		SEQUENCE:this.setMatrixUniforms  ( gl  )
				COMPOSITE:this.setMatrixUniforms  ( gl  )
						COMPOSITE:this.setMatrixUniforms 
								NAME:this.setMatrixUniforms
								IGNORED:
						KEYWORD:(
						SEQUENCE:gl 
								EXPRESSION:gl 
										VARIABLE:gl 
												NAME:gl
												IGNORED:
						KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. drawArrays ( gl. TRIANGLE_STRIP, 0, squareVertexPositionBuffer [ 2 ] )
OPENGL_CALL:gl. drawArrays ( gl. TRIANGLE_STRIP, 0, squareVertexPositionBuffer [ 2 ] )
		KEYWORD:gl.
		NAME:drawArrays
		KEYWORD:(
		SEQUENCE:gl. TRIANGLE_STRIP, 0, squareVertexPositionBuffer [ 2 ]
				EXPRESSION:gl. TRIANGLE_STRIP
						OPENGL_CONSTANT:gl. TRIANGLE_STRIP
								KEYWORD:gl.
								NAME:TRIANGLE_STRIP
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:squareVertexPositionBuffer [ 2 ]
						VARIABLE:squareVertexPositionBuffer [ 2 ]
								NAME:squareVertexPositionBuffer
								COMPOSITE:[ 2 ]
										KEYWORD:[
										EXPRESSION:2
												VALUE:2
										KEYWORD:]
		KEYWORD:)



test_sv2Drawer.js
[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var vertexPositionAttribute 
VARIABLE:var vertexPositionAttribute 
		KEYWORD:var
		NAME:vertexPositionAttribute 
				NAME:vertexPositionAttribute
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var vertexColorAttribute 
VARIABLE:var vertexColorAttribute 
		KEYWORD:var
		NAME:vertexColorAttribute 
				NAME:vertexColorAttribute
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var pMatrixUniform 
VARIABLE:var pMatrixUniform 
		KEYWORD:var
		NAME:pMatrixUniform 
				NAME:pMatrixUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var mvMatrixUniform 
VARIABLE:var mvMatrixUniform 
		KEYWORD:var
		NAME:mvMatrixUniform 
				NAME:mvMatrixUniform
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var pyramidVertexPositionBuffer  = new  Array  (  )
VARIABLE:var pyramidVertexPositionBuffer 
		KEYWORD:var
		NAME:pyramidVertexPositionBuffer 
				NAME:pyramidVertexPositionBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var pyramidVertexColorBuffer  = new  Array  (  )
VARIABLE:var pyramidVertexColorBuffer 
		KEYWORD:var
		NAME:pyramidVertexColorBuffer 
				NAME:pyramidVertexColorBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var baseVertexPositionBuffer  = new  Array  (  )
VARIABLE:var baseVertexPositionBuffer 
		KEYWORD:var
		NAME:baseVertexPositionBuffer 
				NAME:baseVertexPositionBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var baseVertexColorBuffer  = new  Array  (  )
VARIABLE:var baseVertexColorBuffer 
		KEYWORD:var
		NAME:baseVertexColorBuffer 
				NAME:baseVertexColorBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var pMatrix 
VARIABLE:var pMatrix 
		KEYWORD:var
		NAME:pMatrix 
				NAME:pMatrix
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var mvMatrix 
VARIABLE:var mvMatrix 
		KEYWORD:var
		NAME:mvMatrix 
				NAME:mvMatrix
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var rAngle  = 0
VARIABLE:var rAngle 
		KEYWORD:var
		NAME:rAngle 
				NAME:rAngle
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var lastTime  = 0
VARIABLE:var lastTime 
		KEYWORD:var
		NAME:lastTime 
				NAME:lastTime
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[CONSTRUCTOR_DECLARATION] -------> function Test_sv2Drawer  (  )
KEYWORD:function
NAME:Test_sv2Drawer 
		NAME:Test_sv2Drawer
		IGNORED:
KEYWORD:(
METHOD_VARIABLES:
KEYWORD:)


[CLASS_DECLARATION] -------> Test_sv2Drawer . prototype =
NAME:Test_sv2Drawer
KEYWORD:.
KEYWORD:prototype
KEYWORD:=


[METHOD_DECLARATION] ------->  initShaders : function ( gl  )
IGNORED:
NAME:initShaders
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var shaderProgram  =  getShaderProgram  ( gl , "shaders /shader1.fs" , "shaders /shader1.vs"  )
VARIABLE:var shaderProgram 
		KEYWORD:var
		NAME:shaderProgram 
				NAME:shaderProgram
				IGNORED:
KEYWORD:=
CALL: getShaderProgram  ( gl , "shaders /shader1.fs" , "shaders /shader1.vs"  )
		IGNORED:
		SEQUENCE:getShaderProgram  ( gl , "shaders /shader1.fs" , "shaders /shader1.vs"  )
				COMPOSITE:getShaderProgram  ( gl , "shaders /shader1.fs" , "shaders /shader1.vs"  )
						COMPOSITE:getShaderProgram 
								NAME:getShaderProgram
								IGNORED:
						KEYWORD:(
						SEQUENCE:gl , "shaders /shader1.fs" , "shaders /shader1.vs" 
								EXPRESSION:gl 
										VARIABLE:gl 
												NAME:gl
												IGNORED:
								KEYWORD:, 
								EXPRESSION:"shaders /shader1.fs" 
										VARIABLE:"shaders 
												NAME:"shaders
												IGNORED:
										OPERATOR:/
										VARIABLE:shader1.fs" 
												NAME:shader1.fs"
												IGNORED:
								KEYWORD:, 
								EXPRESSION:"shaders /shader1.vs" 
										VARIABLE:"shaders 
												NAME:"shaders
												IGNORED:
										OPERATOR:/
										VARIABLE:shader1.vs" 
												NAME:shader1.vs"
												IGNORED:
						KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> vertexPositionAttribute   = gl. getAttribLocation ( shaderProgram , "aVertexPosition"  )
NAME:vertexPositionAttribute 
		NAME:vertexPositionAttribute
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getAttribLocation ( shaderProgram , "aVertexPosition"  )
		OPENGL_CALL:gl. getAttribLocation ( shaderProgram , "aVertexPosition"  )
				KEYWORD:gl.
				NAME:getAttribLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "aVertexPosition" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"aVertexPosition" 
								VARIABLE:"aVertexPosition" 
										NAME:"aVertexPosition"
										IGNORED:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enableVertexAttribArray ( vertexPositionAttribute  )
OPENGL_CALL:gl. enableVertexAttribArray ( vertexPositionAttribute  )
		KEYWORD:gl.
		NAME:enableVertexAttribArray
		KEYWORD:(
		SEQUENCE:vertexPositionAttribute 
				EXPRESSION:vertexPositionAttribute 
						VARIABLE:vertexPositionAttribute 
								NAME:vertexPositionAttribute
								IGNORED:
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> vertexColorAttribute   = gl. getAttribLocation ( shaderProgram , "aVertexColor"  )
NAME:vertexColorAttribute 
		NAME:vertexColorAttribute
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getAttribLocation ( shaderProgram , "aVertexColor"  )
		OPENGL_CALL:gl. getAttribLocation ( shaderProgram , "aVertexColor"  )
				KEYWORD:gl.
				NAME:getAttribLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "aVertexColor" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"aVertexColor" 
								VARIABLE:"aVertexColor" 
										NAME:"aVertexColor"
										IGNORED:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enableVertexAttribArray ( vertexColorAttribute  )
OPENGL_CALL:gl. enableVertexAttribArray ( vertexColorAttribute  )
		KEYWORD:gl.
		NAME:enableVertexAttribArray
		KEYWORD:(
		SEQUENCE:vertexColorAttribute 
				EXPRESSION:vertexColorAttribute 
						VARIABLE:vertexColorAttribute 
								NAME:vertexColorAttribute
								IGNORED:
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pMatrixUniform   = gl. getUniformLocation ( shaderProgram , "uPMatrix"  )
NAME:pMatrixUniform 
		NAME:pMatrixUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uPMatrix"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uPMatrix"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uPMatrix" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uPMatrix" 
								VARIABLE:"uPMatrix" 
										NAME:"uPMatrix"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrixUniform   = gl. getUniformLocation ( shaderProgram , "uMVMatrix"  )
NAME:mvMatrixUniform 
		NAME:mvMatrixUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uMVMatrix"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uMVMatrix"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uMVMatrix" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uMVMatrix" 
								VARIABLE:"uMVMatrix" 
										NAME:"uMVMatrix"
										IGNORED:
				KEYWORD:)


[METHOD_DECLARATION] -------> , setMatrixUniforms : function ( gl  )
KEYWORD:,
NAME:setMatrixUniforms
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniformMatrix4fv ( pMatrixUniform , false , pMatrix  )
OPENGL_CALL:gl. uniformMatrix4fv ( pMatrixUniform , false , pMatrix  )
		KEYWORD:gl.
		NAME:uniformMatrix4fv
		KEYWORD:(
		SEQUENCE:pMatrixUniform , false , pMatrix 
				EXPRESSION:pMatrixUniform 
						VARIABLE:pMatrixUniform 
								NAME:pMatrixUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:pMatrix 
						VARIABLE:pMatrix 
								NAME:pMatrix
								IGNORED:
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniformMatrix4fv ( mvMatrixUniform , false , mvMatrix  )
OPENGL_CALL:gl. uniformMatrix4fv ( mvMatrixUniform , false , mvMatrix  )
		KEYWORD:gl.
		NAME:uniformMatrix4fv
		KEYWORD:(
		SEQUENCE:mvMatrixUniform , false , mvMatrix 
				EXPRESSION:mvMatrixUniform 
						VARIABLE:mvMatrixUniform 
								NAME:mvMatrixUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:mvMatrix 
						VARIABLE:mvMatrix 
								NAME:mvMatrix
								IGNORED:
		KEYWORD:)


[METHOD_DECLARATION] -------> , initBuffers : function ( gl  )
KEYWORD:,
NAME:initBuffers
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pyramidVertexPositionBuffer [ 0 ]  = gl. createBuffer (  )
NAME:pyramidVertexPositionBuffer [ 0 ]
		NAME:pyramidVertexPositionBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, pyramidVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, pyramidVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, pyramidVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:pyramidVertexPositionBuffer [ 0 ]
						VARIABLE:pyramidVertexPositionBuffer [ 0 ]
								NAME:pyramidVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var vertices  = [ 0.0,1.0,0.0,-1.0,-1.0,-1.0,-1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,-1.0,-1.0,-1.0,-1.0,-1.0 ]
VARIABLE:var vertices 
		KEYWORD:var
		NAME:vertices 
				NAME:vertices
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ 0.0,1.0,0.0,-1.0,-1.0,-1.0,-1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,-1.0,-1.0,-1.0,-1.0,-1.0 ]
		KEYWORD:[
		SEQUENCE:0.0,1.0,0.0,-1.0,-1.0,-1.0,-1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,-1.0,-1.0,-1.0,-1.0,-1.0
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( vertices  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( vertices  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( vertices  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( vertices  )
						NEW_STATEMENT:new  Float32Array  ( vertices  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( vertices  )
										KEYWORD:(
										SEQUENCE:vertices 
												EXPRESSION:vertices 
														VARIABLE:vertices 
																NAME:vertices
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pyramidVertexPositionBuffer [ 1 ]  = 3
NAME:pyramidVertexPositionBuffer [ 1 ]
		NAME:pyramidVertexPositionBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:3
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pyramidVertexPositionBuffer [ 2 ]  = 6
NAME:pyramidVertexPositionBuffer [ 2 ]
		NAME:pyramidVertexPositionBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:6
		VALUE:6


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pyramidVertexColorBuffer [ 0 ]  = gl. createBuffer (  )
NAME:pyramidVertexColorBuffer [ 0 ]
		NAME:pyramidVertexColorBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, pyramidVertexColorBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, pyramidVertexColorBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, pyramidVertexColorBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:pyramidVertexColorBuffer [ 0 ]
						VARIABLE:pyramidVertexColorBuffer [ 0 ]
								NAME:pyramidVertexColorBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var colors  = [ 1.0,0.0,0.0,1.0,0.0,1.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,1.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,1.0,0.0,1.0 ]
VARIABLE:var colors 
		KEYWORD:var
		NAME:colors 
				NAME:colors
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ 1.0,0.0,0.0,1.0,0.0,1.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,1.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,1.0,0.0,1.0 ]
		KEYWORD:[
		SEQUENCE:1.0,0.0,0.0,1.0,0.0,1.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,1.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,1.0,0.0,1.0
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( colors  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( colors  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( colors  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( colors  )
						NEW_STATEMENT:new  Float32Array  ( colors  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( colors  )
										KEYWORD:(
										SEQUENCE:colors 
												EXPRESSION:colors 
														VARIABLE:colors 
																NAME:colors
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pyramidVertexColorBuffer [ 1 ]  = 4
NAME:pyramidVertexColorBuffer [ 1 ]
		NAME:pyramidVertexColorBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:4
		VALUE:4


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pyramidVertexColorBuffer [ 2 ]  = 6
NAME:pyramidVertexColorBuffer [ 2 ]
		NAME:pyramidVertexColorBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:6
		VALUE:6


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> baseVertexPositionBuffer [ 0 ]  = gl. createBuffer (  )
NAME:baseVertexPositionBuffer [ 0 ]
		NAME:baseVertexPositionBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, baseVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, baseVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, baseVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:baseVertexPositionBuffer [ 0 ]
						VARIABLE:baseVertexPositionBuffer [ 0 ]
								NAME:baseVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var vertices2  = [ -1.0,-1.0,-1.0,-1.0,-1.0,1.0,1.0,-1.0,-1.0,1.0,-1.0,1.0 ]
VARIABLE:var vertices2 
		KEYWORD:var
		NAME:vertices2 
				NAME:vertices2
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ -1.0,-1.0,-1.0,-1.0,-1.0,1.0,1.0,-1.0,-1.0,1.0,-1.0,1.0 ]
		KEYWORD:[
		SEQUENCE:-1.0,-1.0,-1.0,-1.0,-1.0,1.0,1.0,-1.0,-1.0,1.0,-1.0,1.0
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( vertices2  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( vertices2  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( vertices2  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( vertices2  )
						NEW_STATEMENT:new  Float32Array  ( vertices2  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( vertices2  )
										KEYWORD:(
										SEQUENCE:vertices2 
												EXPRESSION:vertices2 
														VARIABLE:vertices2 
																NAME:vertices2
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> baseVertexPositionBuffer [ 1 ]  = 3
NAME:baseVertexPositionBuffer [ 1 ]
		NAME:baseVertexPositionBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:3
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> baseVertexPositionBuffer [ 2 ]  = 4
NAME:baseVertexPositionBuffer [ 2 ]
		NAME:baseVertexPositionBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:4
		VALUE:4


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> baseVertexColorBuffer [ 0 ]  = gl. createBuffer (  )
NAME:baseVertexColorBuffer [ 0 ]
		NAME:baseVertexColorBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, baseVertexColorBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, baseVertexColorBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, baseVertexColorBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:baseVertexColorBuffer [ 0 ]
						VARIABLE:baseVertexColorBuffer [ 0 ]
								NAME:baseVertexColorBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var colors2  = [ 0.0,1.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,1.0,0.0,1.0 ]
VARIABLE:var colors2 
		KEYWORD:var
		NAME:colors2 
				NAME:colors2
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ 0.0,1.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,1.0,0.0,1.0 ]
		KEYWORD:[
		SEQUENCE:0.0,1.0,0.0,1.0,0.0,0.0,1.0,1.0,0.0,0.0,1.0,1.0,0.0,1.0,0.0,1.0
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( colors2  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( colors2  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( colors2  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( colors2  )
						NEW_STATEMENT:new  Float32Array  ( colors2  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( colors2  )
										KEYWORD:(
										SEQUENCE:colors2 
												EXPRESSION:colors2 
														VARIABLE:colors2 
																NAME:colors2
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> baseVertexColorBuffer [ 1 ]  = 4
NAME:baseVertexColorBuffer [ 1 ]
		NAME:baseVertexColorBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:4
		VALUE:4


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> baseVertexColorBuffer [ 2 ]  = 4
NAME:baseVertexColorBuffer [ 2 ]
		NAME:baseVertexColorBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:4
		VALUE:4


[METHOD_DECLARATION] -------> , drawScene : function ( gl  )
KEYWORD:,
NAME:drawScene
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. clearColor ( 0.0, 0.0, 0.0, 1.0 )
OPENGL_CALL:gl. clearColor ( 0.0, 0.0, 0.0, 1.0 )
		KEYWORD:gl.
		NAME:clearColor
		KEYWORD:(
		SEQUENCE:0.0, 0.0, 0.0, 1.0
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:, 
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:, 
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:, 
				EXPRESSION:1.0
						VALUE:1.0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enable ( gl. DEPTH_TEST )
OPENGL_CALL:gl. enable ( gl. DEPTH_TEST )
		KEYWORD:gl.
		NAME:enable
		KEYWORD:(
		SEQUENCE:gl. DEPTH_TEST
				EXPRESSION:gl. DEPTH_TEST
						OPENGL_CONSTANT:gl. DEPTH_TEST
								KEYWORD:gl.
								NAME:DEPTH_TEST
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. cullFace ( gl. BACK )
OPENGL_CALL:gl. cullFace ( gl. BACK )
		KEYWORD:gl.
		NAME:cullFace
		KEYWORD:(
		SEQUENCE:gl. BACK
				EXPRESSION:gl. BACK
						OPENGL_CONSTANT:gl. BACK
								KEYWORD:gl.
								NAME:BACK
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enable ( gl. CULL_FACE )
OPENGL_CALL:gl. enable ( gl. CULL_FACE )
		KEYWORD:gl.
		NAME:enable
		KEYWORD:(
		SEQUENCE:gl. CULL_FACE
				EXPRESSION:gl. CULL_FACE
						OPENGL_CONSTANT:gl. CULL_FACE
								KEYWORD:gl.
								NAME:CULL_FACE
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. viewport ( 0, 0, 500, 500 )
OPENGL_CALL:gl. viewport ( 0, 0, 500, 500 )
		KEYWORD:gl.
		NAME:viewport
		KEYWORD:(
		SEQUENCE:0, 0, 500, 500
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:500
						VALUE:500
				KEYWORD:, 
				EXPRESSION:500
						VALUE:500
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. clear ( gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT )
OPENGL_CALL:gl. clear ( gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT )
		KEYWORD:gl.
		NAME:clear
		KEYWORD:(
		SEQUENCE:gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT
				EXPRESSION:gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT
						OPENGL_CONSTANT:gl. COLOR_BUFFER_BIT
								KEYWORD:gl.
								NAME:COLOR_BUFFER_BIT
						OPERATOR:|
						OPENGL_CONSTANT:gl. DEPTH_BUFFER_BIT
								KEYWORD:gl.
								NAME:DEPTH_BUFFER_BIT
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cx  =  Math.cos  ( rAngle  )
VARIABLE:var cx 
		KEYWORD:var
		NAME:cx 
				NAME:cx
				IGNORED:
KEYWORD:=
CALL: Math.cos  ( rAngle  )
		IGNORED:
		SEQUENCE:Math.cos  ( rAngle  )
				COMPOSITE:Math.cos  ( rAngle  )
						COMPOSITE:Math.cos 
								NAME:Math.cos
								IGNORED:
						KEYWORD:(
						SEQUENCE:rAngle 
								EXPRESSION:rAngle 
										VARIABLE:rAngle 
												NAME:rAngle
												IGNORED:
						KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var sx  =  Math.sin  ( rAngle  )
VARIABLE:var sx 
		KEYWORD:var
		NAME:sx 
				NAME:sx
				IGNORED:
KEYWORD:=
CALL: Math.sin  ( rAngle  )
		IGNORED:
		SEQUENCE:Math.sin  ( rAngle  )
				COMPOSITE:Math.sin  ( rAngle  )
						COMPOSITE:Math.sin 
								NAME:Math.sin
								IGNORED:
						KEYWORD:(
						SEQUENCE:rAngle 
								EXPRESSION:rAngle 
										VARIABLE:rAngle 
												NAME:rAngle
												IGNORED:
						KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pMatrix   = new  Float32Array  ( [ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ] )
NAME:pMatrix 
		NAME:pMatrix
		IGNORED:
IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Float32Array  ( [ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ] )
		KEYWORD:new 
		TYPE:Float32Array 
				TYPE:Float32Array
				IGNORED:
		COMPOSITE:( [ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ] )
				KEYWORD:(
				SEQUENCE:[ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ]
						ARRAY_CONTENT:[ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ]
								KEYWORD:[
								SEQUENCE:2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0
										EXPRESSION:2.4142136573791504
												VALUE:2.4142136573791504
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:2.4142136573791504
												VALUE:2.4142136573791504
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:-1.0020020008087158
												VALUE:-1.0020020008087158
										KEYWORD:,
										EXPRESSION:-1
												VALUE:-1
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:-0.20020020008087158
												VALUE:-0.20020020008087158
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
								KEYWORD:]
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix   = new  Float32Array  ( [ cx ,sx *sx ,-cx*sx ,0,0,cx ,sx ,0,sx ,-cx*sx ,cx *cx ,0,0,0,-8,1 ] )
NAME:mvMatrix 
		NAME:mvMatrix
		IGNORED:
IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Float32Array  ( [ cx ,sx *sx ,-cx*sx ,0,0,cx ,sx ,0,sx ,-cx*sx ,cx *cx ,0,0,0,-8,1 ] )
		KEYWORD:new 
		TYPE:Float32Array 
				TYPE:Float32Array
				IGNORED:
		COMPOSITE:( [ cx ,sx *sx ,-cx*sx ,0,0,cx ,sx ,0,sx ,-cx*sx ,cx *cx ,0,0,0,-8,1 ] )
				KEYWORD:(
				SEQUENCE:[ cx ,sx *sx ,-cx*sx ,0,0,cx ,sx ,0,sx ,-cx*sx ,cx *cx ,0,0,0,-8,1 ]
						ARRAY_CONTENT:[ cx ,sx *sx ,-cx*sx ,0,0,cx ,sx ,0,sx ,-cx*sx ,cx *cx ,0,0,0,-8,1 ]
								KEYWORD:[
								SEQUENCE:cx ,sx *sx ,-cx*sx ,0,0,cx ,sx ,0,sx ,-cx*sx ,cx *cx ,0,0,0,-8,1
										EXPRESSION:cx 
												VARIABLE:cx 
														NAME:cx
														IGNORED:
										KEYWORD:,
										EXPRESSION:sx *sx 
												VARIABLE:sx 
														NAME:sx
														IGNORED:
												OPERATOR:*
												VARIABLE:sx 
														NAME:sx
														IGNORED:
										KEYWORD:,
										EXPRESSION:-cx*sx 
												VALUE:-cx
												OPERATOR:*
												VARIABLE:sx 
														NAME:sx
														IGNORED:
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:cx 
												VARIABLE:cx 
														NAME:cx
														IGNORED:
										KEYWORD:,
										EXPRESSION:sx 
												VARIABLE:sx 
														NAME:sx
														IGNORED:
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:sx 
												VARIABLE:sx 
														NAME:sx
														IGNORED:
										KEYWORD:,
										EXPRESSION:-cx*sx 
												VALUE:-cx
												OPERATOR:*
												VARIABLE:sx 
														NAME:sx
														IGNORED:
										KEYWORD:,
										EXPRESSION:cx *cx 
												VARIABLE:cx 
														NAME:cx
														IGNORED:
												OPERATOR:*
												VARIABLE:cx 
														NAME:cx
														IGNORED:
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:-8
												VALUE:-8
										KEYWORD:,
										EXPRESSION:1
												VALUE:1
								KEYWORD:]
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. frontFace ( gl. CCW )
OPENGL_CALL:gl. frontFace ( gl. CCW )
		KEYWORD:gl.
		NAME:frontFace
		KEYWORD:(
		SEQUENCE:gl. CCW
				EXPRESSION:gl. CCW
						OPENGL_CONSTANT:gl. CCW
								KEYWORD:gl.
								NAME:CCW
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, pyramidVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, pyramidVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, pyramidVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:pyramidVertexPositionBuffer [ 0 ]
						VARIABLE:pyramidVertexPositionBuffer [ 0 ]
								NAME:pyramidVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( vertexPositionAttribute , pyramidVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( vertexPositionAttribute , pyramidVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:vertexPositionAttribute , pyramidVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:vertexPositionAttribute 
						VARIABLE:vertexPositionAttribute 
								NAME:vertexPositionAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:pyramidVertexPositionBuffer [ 1 ]
						VARIABLE:pyramidVertexPositionBuffer [ 1 ]
								NAME:pyramidVertexPositionBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, pyramidVertexColorBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, pyramidVertexColorBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, pyramidVertexColorBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:pyramidVertexColorBuffer [ 0 ]
						VARIABLE:pyramidVertexColorBuffer [ 0 ]
								NAME:pyramidVertexColorBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( vertexColorAttribute , pyramidVertexColorBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( vertexColorAttribute , pyramidVertexColorBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:vertexColorAttribute , pyramidVertexColorBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:vertexColorAttribute 
						VARIABLE:vertexColorAttribute 
								NAME:vertexColorAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:pyramidVertexColorBuffer [ 1 ]
						VARIABLE:pyramidVertexColorBuffer [ 1 ]
								NAME:pyramidVertexColorBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.setMatrixUniforms  ( gl  )
CALL: this.setMatrixUniforms  ( gl  )
		IGNORED:
		SEQUENCE:this.setMatrixUniforms  ( gl  )
				COMPOSITE:this.setMatrixUniforms  ( gl  )
						COMPOSITE:this.setMatrixUniforms 
								NAME:this.setMatrixUniforms
								IGNORED:
						KEYWORD:(
						SEQUENCE:gl 
								EXPRESSION:gl 
										VARIABLE:gl 
												NAME:gl
												IGNORED:
						KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. drawArrays ( gl. TRIANGLE_FAN, 0, pyramidVertexPositionBuffer [ 2 ] )
OPENGL_CALL:gl. drawArrays ( gl. TRIANGLE_FAN, 0, pyramidVertexPositionBuffer [ 2 ] )
		KEYWORD:gl.
		NAME:drawArrays
		KEYWORD:(
		SEQUENCE:gl. TRIANGLE_FAN, 0, pyramidVertexPositionBuffer [ 2 ]
				EXPRESSION:gl. TRIANGLE_FAN
						OPENGL_CONSTANT:gl. TRIANGLE_FAN
								KEYWORD:gl.
								NAME:TRIANGLE_FAN
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:pyramidVertexPositionBuffer [ 2 ]
						VARIABLE:pyramidVertexPositionBuffer [ 2 ]
								NAME:pyramidVertexPositionBuffer
								COMPOSITE:[ 2 ]
										KEYWORD:[
										EXPRESSION:2
												VALUE:2
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. frontFace ( gl. CW )
OPENGL_CALL:gl. frontFace ( gl. CW )
		KEYWORD:gl.
		NAME:frontFace
		KEYWORD:(
		SEQUENCE:gl. CW
				EXPRESSION:gl. CW
						OPENGL_CONSTANT:gl. CW
								KEYWORD:gl.
								NAME:CW
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, baseVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, baseVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, baseVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:baseVertexPositionBuffer [ 0 ]
						VARIABLE:baseVertexPositionBuffer [ 0 ]
								NAME:baseVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( vertexPositionAttribute , baseVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( vertexPositionAttribute , baseVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:vertexPositionAttribute , baseVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:vertexPositionAttribute 
						VARIABLE:vertexPositionAttribute 
								NAME:vertexPositionAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:baseVertexPositionBuffer [ 1 ]
						VARIABLE:baseVertexPositionBuffer [ 1 ]
								NAME:baseVertexPositionBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, baseVertexColorBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, baseVertexColorBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, baseVertexColorBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:baseVertexColorBuffer [ 0 ]
						VARIABLE:baseVertexColorBuffer [ 0 ]
								NAME:baseVertexColorBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( vertexColorAttribute , baseVertexColorBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( vertexColorAttribute , baseVertexColorBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:vertexColorAttribute , baseVertexColorBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:vertexColorAttribute 
						VARIABLE:vertexColorAttribute 
								NAME:vertexColorAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:baseVertexColorBuffer [ 1 ]
						VARIABLE:baseVertexColorBuffer [ 1 ]
								NAME:baseVertexColorBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.setMatrixUniforms  ( gl  )
CALL: this.setMatrixUniforms  ( gl  )
		IGNORED:
		SEQUENCE:this.setMatrixUniforms  ( gl  )
				COMPOSITE:this.setMatrixUniforms  ( gl  )
						COMPOSITE:this.setMatrixUniforms 
								NAME:this.setMatrixUniforms
								IGNORED:
						KEYWORD:(
						SEQUENCE:gl 
								EXPRESSION:gl 
										VARIABLE:gl 
												NAME:gl
												IGNORED:
						KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. drawArrays ( gl. TRIANGLE_STRIP, 0, baseVertexPositionBuffer [ 2 ] )
OPENGL_CALL:gl. drawArrays ( gl. TRIANGLE_STRIP, 0, baseVertexPositionBuffer [ 2 ] )
		KEYWORD:gl.
		NAME:drawArrays
		KEYWORD:(
		SEQUENCE:gl. TRIANGLE_STRIP, 0, baseVertexPositionBuffer [ 2 ]
				EXPRESSION:gl. TRIANGLE_STRIP
						OPENGL_CONSTANT:gl. TRIANGLE_STRIP
								KEYWORD:gl.
								NAME:TRIANGLE_STRIP
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:baseVertexPositionBuffer [ 2 ]
						VARIABLE:baseVertexPositionBuffer [ 2 ]
								NAME:baseVertexPositionBuffer
								COMPOSITE:[ 2 ]
										KEYWORD:[
										EXPRESSION:2
												VALUE:2
										KEYWORD:]
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.animate  (  )
CALL: this.animate  (  )
		IGNORED:
		SEQUENCE:this.animate  (  )
				COMPOSITE:this.animate  (  )
						COMPOSITE:this.animate 
								NAME:this.animate
								IGNORED:
						KEYWORD:(
						SEQUENCE:
						KEYWORD:)


[METHOD_DECLARATION] -------> , animate : function (  )
KEYWORD:,
NAME:animate
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var timeNow  = new  Date  (  ) . getTime  (  )
VARIABLE:var timeNow 
		KEYWORD:var
		NAME:timeNow 
				NAME:timeNow
				IGNORED:
KEYWORD:=
CALL:new  Date  (  ) . getTime  (  )
		COMPOSITE:new  Date  (  ) .
				NEW_STATEMENT:new  Date  (  )
						KEYWORD:new 
						TYPE:Date 
								TYPE:Date
								IGNORED:
						COMPOSITE:(  )
								KEYWORD:(
								SEQUENCE:
								KEYWORD:)
				KEYWORD:.
		SEQUENCE:getTime  (  )
				COMPOSITE:getTime  (  )
						COMPOSITE:getTime 
								NAME:getTime
								IGNORED:
						KEYWORD:(
						SEQUENCE:
						KEYWORD:)


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( lastTime !=0 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:lastTime !=0
		VARIABLE:lastTime 
				NAME:lastTime
				IGNORED:
		OPERATOR:!=
		VALUE:0
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var elapsed  = timeNow -lastTime 
VARIABLE:var elapsed 
		KEYWORD:var
		NAME:elapsed 
				NAME:elapsed
				IGNORED:
KEYWORD:=
EXPRESSION:timeNow -lastTime 
		VARIABLE:timeNow 
				NAME:timeNow
				IGNORED:
		OPERATOR:-
		VARIABLE:lastTime 
				NAME:lastTime
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> rAngle  + = 1.57*elapsed *0.001
NAME:rAngle 
		NAME:rAngle
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION:1.57*elapsed *0.001
		VALUE:1.57
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> lastTime   = timeNow 
NAME:lastTime 
		NAME:lastTime
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:timeNow 
		VARIABLE:timeNow 
				NAME:timeNow
				IGNORED:



test_sv3Drawer.js
[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var vertexPositionAttribute 
VARIABLE:var vertexPositionAttribute 
		KEYWORD:var
		NAME:vertexPositionAttribute 
				NAME:vertexPositionAttribute
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var textureCoordAttribute 
VARIABLE:var textureCoordAttribute 
		KEYWORD:var
		NAME:textureCoordAttribute 
				NAME:textureCoordAttribute
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var pMatrixUniform 
VARIABLE:var pMatrixUniform 
		KEYWORD:var
		NAME:pMatrixUniform 
				NAME:pMatrixUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var mvMatrixUniform 
VARIABLE:var mvMatrixUniform 
		KEYWORD:var
		NAME:mvMatrixUniform 
				NAME:mvMatrixUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var samplerUniform 
VARIABLE:var samplerUniform 
		KEYWORD:var
		NAME:samplerUniform 
				NAME:samplerUniform
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cubeVertexPositionBuffer  = new  Array  (  )
VARIABLE:var cubeVertexPositionBuffer 
		KEYWORD:var
		NAME:cubeVertexPositionBuffer 
				NAME:cubeVertexPositionBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cubeVertexIndexBuffer  = new  Array  (  )
VARIABLE:var cubeVertexIndexBuffer 
		KEYWORD:var
		NAME:cubeVertexIndexBuffer 
				NAME:cubeVertexIndexBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cubeVertexTextureCoordBuffer  = new  Array  (  )
VARIABLE:var cubeVertexTextureCoordBuffer 
		KEYWORD:var
		NAME:cubeVertexTextureCoordBuffer 
				NAME:cubeVertexTextureCoordBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var texture1  = new  Array  (  )
VARIABLE:var texture1 
		KEYWORD:var
		NAME:texture1 
				NAME:texture1
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var pMatrix 
VARIABLE:var pMatrix 
		KEYWORD:var
		NAME:pMatrix 
				NAME:pMatrix
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var mvMatrix 
VARIABLE:var mvMatrix 
		KEYWORD:var
		NAME:mvMatrix 
				NAME:mvMatrix
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var rAngle  = 0
VARIABLE:var rAngle 
		KEYWORD:var
		NAME:rAngle 
				NAME:rAngle
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var lastTime  = 0
VARIABLE:var lastTime 
		KEYWORD:var
		NAME:lastTime 
				NAME:lastTime
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[CONSTRUCTOR_DECLARATION] -------> function Test_sv3Drawer  (  )
KEYWORD:function
NAME:Test_sv3Drawer 
		NAME:Test_sv3Drawer
		IGNORED:
KEYWORD:(
METHOD_VARIABLES:
KEYWORD:)


[CLASS_DECLARATION] -------> Test_sv3Drawer . prototype =
NAME:Test_sv3Drawer
KEYWORD:.
KEYWORD:prototype
KEYWORD:=


[METHOD_DECLARATION] ------->  initShaders : function ( gl  )
IGNORED:
NAME:initShaders
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var shaderProgram  =  getShaderProgram  ( gl , "shaders /shader2.fs" , "shaders /shader2.vs"  )
VARIABLE:var shaderProgram 
		KEYWORD:var
		NAME:shaderProgram 
				NAME:shaderProgram
				IGNORED:
KEYWORD:=
CALL: getShaderProgram  ( gl , "shaders /shader2.fs" , "shaders /shader2.vs"  )
		IGNORED:
		SEQUENCE:getShaderProgram  ( gl , "shaders /shader2.fs" , "shaders /shader2.vs"  )
				COMPOSITE:getShaderProgram  ( gl , "shaders /shader2.fs" , "shaders /shader2.vs"  )
						COMPOSITE:getShaderProgram 
								NAME:getShaderProgram
								IGNORED:
						KEYWORD:(
						SEQUENCE:gl , "shaders /shader2.fs" , "shaders /shader2.vs" 
								EXPRESSION:gl 
										VARIABLE:gl 
												NAME:gl
												IGNORED:
								KEYWORD:, 
								EXPRESSION:"shaders /shader2.fs" 
										VARIABLE:"shaders 
												NAME:"shaders
												IGNORED:
										OPERATOR:/
										VARIABLE:shader2.fs" 
												NAME:shader2.fs"
												IGNORED:
								KEYWORD:, 
								EXPRESSION:"shaders /shader2.vs" 
										VARIABLE:"shaders 
												NAME:"shaders
												IGNORED:
										OPERATOR:/
										VARIABLE:shader2.vs" 
												NAME:shader2.vs"
												IGNORED:
						KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> vertexPositionAttribute   = gl. getAttribLocation ( shaderProgram , "aVertexPosition"  )
NAME:vertexPositionAttribute 
		NAME:vertexPositionAttribute
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getAttribLocation ( shaderProgram , "aVertexPosition"  )
		OPENGL_CALL:gl. getAttribLocation ( shaderProgram , "aVertexPosition"  )
				KEYWORD:gl.
				NAME:getAttribLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "aVertexPosition" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"aVertexPosition" 
								VARIABLE:"aVertexPosition" 
										NAME:"aVertexPosition"
										IGNORED:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enableVertexAttribArray ( vertexPositionAttribute  )
OPENGL_CALL:gl. enableVertexAttribArray ( vertexPositionAttribute  )
		KEYWORD:gl.
		NAME:enableVertexAttribArray
		KEYWORD:(
		SEQUENCE:vertexPositionAttribute 
				EXPRESSION:vertexPositionAttribute 
						VARIABLE:vertexPositionAttribute 
								NAME:vertexPositionAttribute
								IGNORED:
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> shaderProgram.textureCoordAttribute   = gl. getAttribLocation ( shaderProgram , "aTextureCoord"  )
NAME:shaderProgram.textureCoordAttribute 
		NAME:shaderProgram.textureCoordAttribute
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getAttribLocation ( shaderProgram , "aTextureCoord"  )
		OPENGL_CALL:gl. getAttribLocation ( shaderProgram , "aTextureCoord"  )
				KEYWORD:gl.
				NAME:getAttribLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "aTextureCoord" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"aTextureCoord" 
								VARIABLE:"aTextureCoord" 
										NAME:"aTextureCoord"
										IGNORED:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enableVertexAttribArray ( textureCoordAttribute  )
OPENGL_CALL:gl. enableVertexAttribArray ( textureCoordAttribute  )
		KEYWORD:gl.
		NAME:enableVertexAttribArray
		KEYWORD:(
		SEQUENCE:textureCoordAttribute 
				EXPRESSION:textureCoordAttribute 
						VARIABLE:textureCoordAttribute 
								NAME:textureCoordAttribute
								IGNORED:
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pMatrixUniform   = gl. getUniformLocation ( shaderProgram , "uPMatrix"  )
NAME:pMatrixUniform 
		NAME:pMatrixUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uPMatrix"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uPMatrix"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uPMatrix" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uPMatrix" 
								VARIABLE:"uPMatrix" 
										NAME:"uPMatrix"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrixUniform   = gl. getUniformLocation ( shaderProgram , "uMVMatrix"  )
NAME:mvMatrixUniform 
		NAME:mvMatrixUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uMVMatrix"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uMVMatrix"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uMVMatrix" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uMVMatrix" 
								VARIABLE:"uMVMatrix" 
										NAME:"uMVMatrix"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> samplerUniform   = gl. getUniformLocation ( shaderProgram , "uSampler"  )
NAME:samplerUniform 
		NAME:samplerUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uSampler"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uSampler"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uSampler" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uSampler" 
								VARIABLE:"uSampler" 
										NAME:"uSampler"
										IGNORED:
				KEYWORD:)


[METHOD_DECLARATION] -------> , setMatrixUniforms : function ( gl  )
KEYWORD:,
NAME:setMatrixUniforms
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniformMatrix4fv ( pMatrixUniform , false , pMatrix  )
OPENGL_CALL:gl. uniformMatrix4fv ( pMatrixUniform , false , pMatrix  )
		KEYWORD:gl.
		NAME:uniformMatrix4fv
		KEYWORD:(
		SEQUENCE:pMatrixUniform , false , pMatrix 
				EXPRESSION:pMatrixUniform 
						VARIABLE:pMatrixUniform 
								NAME:pMatrixUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:pMatrix 
						VARIABLE:pMatrix 
								NAME:pMatrix
								IGNORED:
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniformMatrix4fv ( mvMatrixUniform , false , mvMatrix  )
OPENGL_CALL:gl. uniformMatrix4fv ( mvMatrixUniform , false , mvMatrix  )
		KEYWORD:gl.
		NAME:uniformMatrix4fv
		KEYWORD:(
		SEQUENCE:mvMatrixUniform , false , mvMatrix 
				EXPRESSION:mvMatrixUniform 
						VARIABLE:mvMatrixUniform 
								NAME:mvMatrixUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:mvMatrix 
						VARIABLE:mvMatrix 
								NAME:mvMatrix
								IGNORED:
		KEYWORD:)


[METHOD_DECLARATION] -------> , initBuffers : function ( gl  )
KEYWORD:,
NAME:initBuffers
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexPositionBuffer [ 0 ]  = gl. createBuffer (  )
NAME:cubeVertexPositionBuffer [ 0 ]
		NAME:cubeVertexPositionBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, cubeVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:cubeVertexPositionBuffer [ 0 ]
						VARIABLE:cubeVertexPositionBuffer [ 0 ]
								NAME:cubeVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> vertices   = [ -1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,1.0,1.0,-1.0,1.0,1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,-1.0,1.0,-1.0,-1.0,-1.0,1.0,-1.0,-1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,-1.0,1.0,-1.0,1.0,-1.0,-1.0,1.0,1.0,-1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,1.0,1.0,-1.0,1.0,-1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,-1.0,1.0,-1.0 ]
NAME:vertices 
		NAME:vertices
		IGNORED:
IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ -1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,1.0,1.0,-1.0,1.0,1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,-1.0,1.0,-1.0,-1.0,-1.0,1.0,-1.0,-1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,-1.0,1.0,-1.0,1.0,-1.0,-1.0,1.0,1.0,-1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,1.0,1.0,-1.0,1.0,-1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,-1.0,1.0,-1.0 ]
		KEYWORD:[
		SEQUENCE:-1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,1.0,1.0,-1.0,1.0,1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,-1.0,1.0,-1.0,-1.0,-1.0,1.0,-1.0,-1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,-1.0,1.0,-1.0,1.0,-1.0,-1.0,1.0,1.0,-1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,1.0,1.0,-1.0,1.0,-1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,-1.0,1.0,-1.0
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( vertices  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( vertices  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( vertices  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( vertices  )
						NEW_STATEMENT:new  Float32Array  ( vertices  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( vertices  )
										KEYWORD:(
										SEQUENCE:vertices 
												EXPRESSION:vertices 
														VARIABLE:vertices 
																NAME:vertices
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexPositionBuffer [ 1 ]  = 3
NAME:cubeVertexPositionBuffer [ 1 ]
		NAME:cubeVertexPositionBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:3
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexPositionBuffer [ 2 ]  = 24
NAME:cubeVertexPositionBuffer [ 2 ]
		NAME:cubeVertexPositionBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:24
		VALUE:24


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexTextureCoordBuffer [ 0 ]  = gl. createBuffer (  )
NAME:cubeVertexTextureCoordBuffer [ 0 ]
		NAME:cubeVertexTextureCoordBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexTextureCoordBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexTextureCoordBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, cubeVertexTextureCoordBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:cubeVertexTextureCoordBuffer [ 0 ]
						VARIABLE:cubeVertexTextureCoordBuffer [ 0 ]
								NAME:cubeVertexTextureCoordBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var textureCoords  = [ 0.0,0.0,1.0,0.0,1.0,1.0,0.0,1.0,1.0,0.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0,1.0,1.0,1.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0,0.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,1.0 ]
VARIABLE:var textureCoords 
		KEYWORD:var
		NAME:textureCoords 
				NAME:textureCoords
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ 0.0,0.0,1.0,0.0,1.0,1.0,0.0,1.0,1.0,0.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0,1.0,1.0,1.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0,0.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,1.0 ]
		KEYWORD:[
		SEQUENCE:0.0,0.0,1.0,0.0,1.0,1.0,0.0,1.0,1.0,0.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0,1.0,1.0,1.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0,0.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,1.0
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( textureCoords  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( textureCoords  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( textureCoords  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( textureCoords  )
						NEW_STATEMENT:new  Float32Array  ( textureCoords  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( textureCoords  )
										KEYWORD:(
										SEQUENCE:textureCoords 
												EXPRESSION:textureCoords 
														VARIABLE:textureCoords 
																NAME:textureCoords
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexTextureCoordBuffer [ 1 ]  = 2
NAME:cubeVertexTextureCoordBuffer [ 1 ]
		NAME:cubeVertexTextureCoordBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:2
		VALUE:2


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexTextureCoordBuffer [ 2 ]  = 24
NAME:cubeVertexTextureCoordBuffer [ 2 ]
		NAME:cubeVertexTextureCoordBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:24
		VALUE:24


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexIndexBuffer [ 0 ]  = gl. createBuffer (  )
NAME:cubeVertexIndexBuffer [ 0 ]
		NAME:cubeVertexIndexBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, cubeVertexIndexBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, cubeVertexIndexBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ELEMENT_ARRAY_BUFFER, cubeVertexIndexBuffer [ 0 ]
				EXPRESSION:gl. ELEMENT_ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ELEMENT_ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ELEMENT_ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:cubeVertexIndexBuffer [ 0 ]
						VARIABLE:cubeVertexIndexBuffer [ 0 ]
								NAME:cubeVertexIndexBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cubeVertexIndices  = [ 0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23 ]
VARIABLE:var cubeVertexIndices 
		KEYWORD:var
		NAME:cubeVertexIndices 
				NAME:cubeVertexIndices
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ 0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23 ]
		KEYWORD:[
		SEQUENCE:0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23
				EXPRESSION:0
						VALUE:0
				KEYWORD:,
				EXPRESSION:1
						VALUE:1
				KEYWORD:,
				EXPRESSION:2
						VALUE:2
				KEYWORD:,
				EXPRESSION:0
						VALUE:0
				KEYWORD:,
				EXPRESSION:2
						VALUE:2
				KEYWORD:,
				EXPRESSION:3
						VALUE:3
				KEYWORD:,
				EXPRESSION:4
						VALUE:4
				KEYWORD:,
				EXPRESSION:5
						VALUE:5
				KEYWORD:,
				EXPRESSION:6
						VALUE:6
				KEYWORD:,
				EXPRESSION:4
						VALUE:4
				KEYWORD:,
				EXPRESSION:6
						VALUE:6
				KEYWORD:,
				EXPRESSION:7
						VALUE:7
				KEYWORD:,
				EXPRESSION:8
						VALUE:8
				KEYWORD:,
				EXPRESSION:9
						VALUE:9
				KEYWORD:,
				EXPRESSION:10
						VALUE:10
				KEYWORD:,
				EXPRESSION:8
						VALUE:8
				KEYWORD:,
				EXPRESSION:10
						VALUE:10
				KEYWORD:,
				EXPRESSION:11
						VALUE:11
				KEYWORD:,
				EXPRESSION:12
						VALUE:12
				KEYWORD:,
				EXPRESSION:13
						VALUE:13
				KEYWORD:,
				EXPRESSION:14
						VALUE:14
				KEYWORD:,
				EXPRESSION:12
						VALUE:12
				KEYWORD:,
				EXPRESSION:14
						VALUE:14
				KEYWORD:,
				EXPRESSION:15
						VALUE:15
				KEYWORD:,
				EXPRESSION:16
						VALUE:16
				KEYWORD:,
				EXPRESSION:17
						VALUE:17
				KEYWORD:,
				EXPRESSION:18
						VALUE:18
				KEYWORD:,
				EXPRESSION:16
						VALUE:16
				KEYWORD:,
				EXPRESSION:18
						VALUE:18
				KEYWORD:,
				EXPRESSION:19
						VALUE:19
				KEYWORD:,
				EXPRESSION:20
						VALUE:20
				KEYWORD:,
				EXPRESSION:21
						VALUE:21
				KEYWORD:,
				EXPRESSION:22
						VALUE:22
				KEYWORD:,
				EXPRESSION:20
						VALUE:20
				KEYWORD:,
				EXPRESSION:22
						VALUE:22
				KEYWORD:,
				EXPRESSION:23
						VALUE:23
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ELEMENT_ARRAY_BUFFER, new  Uint16Array  ( cubeVertexIndices  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ELEMENT_ARRAY_BUFFER, new  Uint16Array  ( cubeVertexIndices  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ELEMENT_ARRAY_BUFFER, new  Uint16Array  ( cubeVertexIndices  ), gl. STATIC_DRAW
				EXPRESSION:gl. ELEMENT_ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ELEMENT_ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ELEMENT_ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Uint16Array  ( cubeVertexIndices  )
						NEW_STATEMENT:new  Uint16Array  ( cubeVertexIndices  )
								KEYWORD:new 
								VARIABLE:Uint16Array 
										NAME:Uint16Array
										IGNORED:
								COMPOSITE:( cubeVertexIndices  )
										KEYWORD:(
										SEQUENCE:cubeVertexIndices 
												EXPRESSION:cubeVertexIndices 
														VARIABLE:cubeVertexIndices 
																NAME:cubeVertexIndices
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexIndexBuffer [ 1 ]  = 1
NAME:cubeVertexIndexBuffer [ 1 ]
		NAME:cubeVertexIndexBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:1
		VALUE:1


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexIndexBuffer [ 2 ]  = 36
NAME:cubeVertexIndexBuffer [ 2 ]
		NAME:cubeVertexIndexBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:36
		VALUE:36


[METHOD_DECLARATION] -------> , initTexture : function ( gl  )
KEYWORD:,
NAME:initTexture
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> texture1 [ 0 ]  = gl. createTexture (  )
NAME:texture1 [ 0 ]
		NAME:texture1
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createTexture (  )
		OPENGL_CALL:gl. createTexture (  )
				KEYWORD:gl.
				NAME:createTexture
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var tex  = new  Image  (  )
VARIABLE:var tex 
		KEYWORD:var
		NAME:tex 
				NAME:tex
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Image  (  )
		KEYWORD:new 
		TYPE:Image 
				TYPE:Image
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tex.onload   =  function  (  )
NAME:tex.onload 
		NAME:tex.onload
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION: function  (  )
		CALL: function  (  )
				IGNORED:
				SEQUENCE:function  (  )
						COMPOSITE:function  (  )
								COMPOSITE:function 
										NAME:function
										IGNORED:
								KEYWORD:(
								SEQUENCE:
								KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindTexture ( gl. TEXTURE_2D, texture1 [ 0 ] )
OPENGL_CALL:gl. bindTexture ( gl. TEXTURE_2D, texture1 [ 0 ] )
		KEYWORD:gl.
		NAME:bindTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, texture1 [ 0 ]
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:texture1 [ 0 ]
						VARIABLE:texture1 [ 0 ]
								NAME:texture1
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texImage2D ( gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex  )
OPENGL_CALL:gl. texImage2D ( gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex  )
		KEYWORD:gl.
		NAME:texImage2D
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex 
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:gl. RGB
						OPENGL_CONSTANT:gl. RGB
								KEYWORD:gl.
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:gl. RGB
						OPENGL_CONSTANT:gl. RGB
								KEYWORD:gl.
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:gl. UNSIGNED_BYTE
						OPENGL_CONSTANT:gl. UNSIGNED_BYTE
								KEYWORD:gl.
								NAME:UNSIGNED_BYTE
				KEYWORD:, 
				EXPRESSION:tex 
						VARIABLE:tex 
								NAME:tex
								IGNORED:
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. NEAREST )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. NEAREST )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. NEAREST
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_MAG_FILTER
						OPENGL_CONSTANT:gl. TEXTURE_MAG_FILTER
								KEYWORD:gl.
								NAME:TEXTURE_MAG_FILTER
				KEYWORD:, 
				EXPRESSION:gl. NEAREST
						OPENGL_CONSTANT:gl. NEAREST
								KEYWORD:gl.
								NAME:NEAREST
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. NEAREST )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. NEAREST )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. NEAREST
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_MIN_FILTER
						OPENGL_CONSTANT:gl. TEXTURE_MIN_FILTER
								KEYWORD:gl.
								NAME:TEXTURE_MIN_FILTER
				KEYWORD:, 
				EXPRESSION:gl. NEAREST
						OPENGL_CONSTANT:gl. NEAREST
								KEYWORD:gl.
								NAME:NEAREST
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindTexture ( gl. TEXTURE_2D, null  )
OPENGL_CALL:gl. bindTexture ( gl. TEXTURE_2D, null  )
		KEYWORD:gl.
		NAME:bindTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, null 
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:null 
						VARIABLE:null 
								NAME:null
								IGNORED:
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tex.src   = "images /crate.gif" 
NAME:tex.src 
		NAME:tex.src
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:"images /crate.gif" 
		VARIABLE:"images 
				NAME:"images
				IGNORED:
		OPERATOR:/
		VARIABLE:crate.gif" 
				NAME:crate.gif"
				IGNORED:


[METHOD_DECLARATION] -------> , drawScene : function ( gl  )
KEYWORD:,
NAME:drawScene
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. clearColor ( 0.0, 0.0, 0.0, 1.0 )
OPENGL_CALL:gl. clearColor ( 0.0, 0.0, 0.0, 1.0 )
		KEYWORD:gl.
		NAME:clearColor
		KEYWORD:(
		SEQUENCE:0.0, 0.0, 0.0, 1.0
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:, 
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:, 
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:, 
				EXPRESSION:1.0
						VALUE:1.0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enable ( gl. DEPTH_TEST )
OPENGL_CALL:gl. enable ( gl. DEPTH_TEST )
		KEYWORD:gl.
		NAME:enable
		KEYWORD:(
		SEQUENCE:gl. DEPTH_TEST
				EXPRESSION:gl. DEPTH_TEST
						OPENGL_CONSTANT:gl. DEPTH_TEST
								KEYWORD:gl.
								NAME:DEPTH_TEST
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. cullFace ( gl. BACK )
OPENGL_CALL:gl. cullFace ( gl. BACK )
		KEYWORD:gl.
		NAME:cullFace
		KEYWORD:(
		SEQUENCE:gl. BACK
				EXPRESSION:gl. BACK
						OPENGL_CONSTANT:gl. BACK
								KEYWORD:gl.
								NAME:BACK
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enable ( gl. CULL_FACE )
OPENGL_CALL:gl. enable ( gl. CULL_FACE )
		KEYWORD:gl.
		NAME:enable
		KEYWORD:(
		SEQUENCE:gl. CULL_FACE
				EXPRESSION:gl. CULL_FACE
						OPENGL_CONSTANT:gl. CULL_FACE
								KEYWORD:gl.
								NAME:CULL_FACE
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. viewport ( 0, 0, 500, 500 )
OPENGL_CALL:gl. viewport ( 0, 0, 500, 500 )
		KEYWORD:gl.
		NAME:viewport
		KEYWORD:(
		SEQUENCE:0, 0, 500, 500
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:500
						VALUE:500
				KEYWORD:, 
				EXPRESSION:500
						VALUE:500
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. clear ( gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT )
OPENGL_CALL:gl. clear ( gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT )
		KEYWORD:gl.
		NAME:clear
		KEYWORD:(
		SEQUENCE:gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT
				EXPRESSION:gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT
						OPENGL_CONSTANT:gl. COLOR_BUFFER_BIT
								KEYWORD:gl.
								NAME:COLOR_BUFFER_BIT
						OPERATOR:|
						OPENGL_CONSTANT:gl. DEPTH_BUFFER_BIT
								KEYWORD:gl.
								NAME:DEPTH_BUFFER_BIT
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cx  =  Math.cos  ( rAngle  )
VARIABLE:var cx 
		KEYWORD:var
		NAME:cx 
				NAME:cx
				IGNORED:
KEYWORD:=
CALL: Math.cos  ( rAngle  )
		IGNORED:
		SEQUENCE:Math.cos  ( rAngle  )
				COMPOSITE:Math.cos  ( rAngle  )
						COMPOSITE:Math.cos 
								NAME:Math.cos
								IGNORED:
						KEYWORD:(
						SEQUENCE:rAngle 
								EXPRESSION:rAngle 
										VARIABLE:rAngle 
												NAME:rAngle
												IGNORED:
						KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var sx  =  Math.sin  ( rAngle  )
VARIABLE:var sx 
		KEYWORD:var
		NAME:sx 
				NAME:sx
				IGNORED:
KEYWORD:=
CALL: Math.sin  ( rAngle  )
		IGNORED:
		SEQUENCE:Math.sin  ( rAngle  )
				COMPOSITE:Math.sin  ( rAngle  )
						COMPOSITE:Math.sin 
								NAME:Math.sin
								IGNORED:
						KEYWORD:(
						SEQUENCE:rAngle 
								EXPRESSION:rAngle 
										VARIABLE:rAngle 
												NAME:rAngle
												IGNORED:
						KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pMatrix   = new  Float32Array  ( [ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ] )
NAME:pMatrix 
		NAME:pMatrix
		IGNORED:
IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Float32Array  ( [ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ] )
		KEYWORD:new 
		TYPE:Float32Array 
				TYPE:Float32Array
				IGNORED:
		COMPOSITE:( [ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ] )
				KEYWORD:(
				SEQUENCE:[ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ]
						ARRAY_CONTENT:[ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ]
								KEYWORD:[
								SEQUENCE:2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0
										EXPRESSION:2.4142136573791504
												VALUE:2.4142136573791504
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:2.4142136573791504
												VALUE:2.4142136573791504
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:-1.0020020008087158
												VALUE:-1.0020020008087158
										KEYWORD:,
										EXPRESSION:-1
												VALUE:-1
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:-0.20020020008087158
												VALUE:-0.20020020008087158
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
								KEYWORD:]
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix   = new  Float32Array  ( [ cx *cx ,cx *( sx *sx +sx  ),sx *sx -cx *cx *sx ,0,-cx*sx ,cx *cx -sx *sx *sx ,cx *( sx *sx +sx  ),0,sx ,-cx*sx ,cx *cx ,0,0,0,-8,1 ] )
NAME:mvMatrix 
		NAME:mvMatrix
		IGNORED:
IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Float32Array  ( [ cx *cx ,cx *( sx *sx +sx  ),sx *sx -cx *cx *sx ,0,-cx*sx ,cx *cx -sx *sx *sx ,cx *( sx *sx +sx  ),0,sx ,-cx*sx ,cx *cx ,0,0,0,-8,1 ] )
		KEYWORD:new 
		TYPE:Float32Array 
				TYPE:Float32Array
				IGNORED:
		COMPOSITE:( [ cx *cx ,cx *( sx *sx +sx  ),sx *sx -cx *cx *sx ,0,-cx*sx ,cx *cx -sx *sx *sx ,cx *( sx *sx +sx  ),0,sx ,-cx*sx ,cx *cx ,0,0,0,-8,1 ] )
				KEYWORD:(
				SEQUENCE:[ cx *cx ,cx *( sx *sx +sx  ),sx *sx -cx *cx *sx ,0,-cx*sx ,cx *cx -sx *sx *sx ,cx *( sx *sx +sx  ),0,sx ,-cx*sx ,cx *cx ,0,0,0,-8,1 ]
						ARRAY_CONTENT:[ cx *cx ,cx *( sx *sx +sx  ),sx *sx -cx *cx *sx ,0,-cx*sx ,cx *cx -sx *sx *sx ,cx *( sx *sx +sx  ),0,sx ,-cx*sx ,cx *cx ,0,0,0,-8,1 ]
								KEYWORD:[
								SEQUENCE:cx *cx ,cx *( sx *sx +sx  ),sx *sx -cx *cx *sx ,0,-cx*sx ,cx *cx -sx *sx *sx ,cx *( sx *sx +sx  ),0,sx ,-cx*sx ,cx *cx ,0,0,0,-8,1
										EXPRESSION:cx *cx 
												VARIABLE:cx 
														NAME:cx
														IGNORED:
												OPERATOR:*
												VARIABLE:cx 
														NAME:cx
														IGNORED:
										KEYWORD:,
										EXPRESSION:cx *( sx *sx +sx  )
												VARIABLE:cx 
														NAME:cx
														IGNORED:
												OPERATOR:*
												COMPOSITE:( sx *sx +sx  )
														KEYWORD:(
														EXPRESSION:sx *sx +sx 
																VARIABLE:sx 
																		NAME:sx
																		IGNORED:
																OPERATOR:*
																VARIABLE:sx 
																		NAME:sx
																		IGNORED:
																OPERATOR:+
																VARIABLE:sx 
																		NAME:sx
																		IGNORED:
														KEYWORD:)
										KEYWORD:,
										EXPRESSION:sx *sx -cx *cx *sx 
												VARIABLE:sx 
														NAME:sx
														IGNORED:
												OPERATOR:*
												VARIABLE:sx 
														NAME:sx
														IGNORED:
												OPERATOR:-
												VARIABLE:cx 
														NAME:cx
														IGNORED:
												OPERATOR:*
												VARIABLE:cx 
														NAME:cx
														IGNORED:
												OPERATOR:*
												VARIABLE:sx 
														NAME:sx
														IGNORED:
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:-cx*sx 
												VALUE:-cx
												OPERATOR:*
												VARIABLE:sx 
														NAME:sx
														IGNORED:
										KEYWORD:,
										EXPRESSION:cx *cx -sx *sx *sx 
												VARIABLE:cx 
														NAME:cx
														IGNORED:
												OPERATOR:*
												VARIABLE:cx 
														NAME:cx
														IGNORED:
												OPERATOR:-
												VARIABLE:sx 
														NAME:sx
														IGNORED:
												OPERATOR:*
												VARIABLE:sx 
														NAME:sx
														IGNORED:
												OPERATOR:*
												VARIABLE:sx 
														NAME:sx
														IGNORED:
										KEYWORD:,
										EXPRESSION:cx *( sx *sx +sx  )
												VARIABLE:cx 
														NAME:cx
														IGNORED:
												OPERATOR:*
												COMPOSITE:( sx *sx +sx  )
														KEYWORD:(
														EXPRESSION:sx *sx +sx 
																VARIABLE:sx 
																		NAME:sx
																		IGNORED:
																OPERATOR:*
																VARIABLE:sx 
																		NAME:sx
																		IGNORED:
																OPERATOR:+
																VARIABLE:sx 
																		NAME:sx
																		IGNORED:
														KEYWORD:)
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:sx 
												VARIABLE:sx 
														NAME:sx
														IGNORED:
										KEYWORD:,
										EXPRESSION:-cx*sx 
												VALUE:-cx
												OPERATOR:*
												VARIABLE:sx 
														NAME:sx
														IGNORED:
										KEYWORD:,
										EXPRESSION:cx *cx 
												VARIABLE:cx 
														NAME:cx
														IGNORED:
												OPERATOR:*
												VARIABLE:cx 
														NAME:cx
														IGNORED:
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:-8
												VALUE:-8
										KEYWORD:,
										EXPRESSION:1
												VALUE:1
								KEYWORD:]
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. frontFace ( gl. CCW )
OPENGL_CALL:gl. frontFace ( gl. CCW )
		KEYWORD:gl.
		NAME:frontFace
		KEYWORD:(
		SEQUENCE:gl. CCW
				EXPRESSION:gl. CCW
						OPENGL_CONSTANT:gl. CCW
								KEYWORD:gl.
								NAME:CCW
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, cubeVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:cubeVertexPositionBuffer [ 0 ]
						VARIABLE:cubeVertexPositionBuffer [ 0 ]
								NAME:cubeVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( vertexPositionAttribute , cubeVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( vertexPositionAttribute , cubeVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:vertexPositionAttribute , cubeVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:vertexPositionAttribute 
						VARIABLE:vertexPositionAttribute 
								NAME:vertexPositionAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:cubeVertexPositionBuffer [ 1 ]
						VARIABLE:cubeVertexPositionBuffer [ 1 ]
								NAME:cubeVertexPositionBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexTextureCoordBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexTextureCoordBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, cubeVertexTextureCoordBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:cubeVertexTextureCoordBuffer [ 0 ]
						VARIABLE:cubeVertexTextureCoordBuffer [ 0 ]
								NAME:cubeVertexTextureCoordBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( textureCoordAttribute , cubeVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( textureCoordAttribute , cubeVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:textureCoordAttribute , cubeVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:textureCoordAttribute 
						VARIABLE:textureCoordAttribute 
								NAME:textureCoordAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:cubeVertexTextureCoordBuffer [ 1 ]
						VARIABLE:cubeVertexTextureCoordBuffer [ 1 ]
								NAME:cubeVertexTextureCoordBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. activeTexture ( gl. TEXTURE0 )
OPENGL_CALL:gl. activeTexture ( gl. TEXTURE0 )
		KEYWORD:gl.
		NAME:activeTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE0
				EXPRESSION:gl. TEXTURE0
						OPENGL_CONSTANT:gl. TEXTURE0
								KEYWORD:gl.
								NAME:TEXTURE0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindTexture ( gl. TEXTURE_2D, texture1 [ 0 ] )
OPENGL_CALL:gl. bindTexture ( gl. TEXTURE_2D, texture1 [ 0 ] )
		KEYWORD:gl.
		NAME:bindTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, texture1 [ 0 ]
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:texture1 [ 0 ]
						VARIABLE:texture1 [ 0 ]
								NAME:texture1
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniform1i ( samplerUniform , 0 )
OPENGL_CALL:gl. uniform1i ( samplerUniform , 0 )
		KEYWORD:gl.
		NAME:uniform1i
		KEYWORD:(
		SEQUENCE:samplerUniform , 0
				EXPRESSION:samplerUniform 
						VARIABLE:samplerUniform 
								NAME:samplerUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, cubeVertexIndexBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, cubeVertexIndexBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ELEMENT_ARRAY_BUFFER, cubeVertexIndexBuffer [ 0 ]
				EXPRESSION:gl. ELEMENT_ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ELEMENT_ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ELEMENT_ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:cubeVertexIndexBuffer [ 0 ]
						VARIABLE:cubeVertexIndexBuffer [ 0 ]
								NAME:cubeVertexIndexBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.setMatrixUniforms  ( gl  )
CALL: this.setMatrixUniforms  ( gl  )
		IGNORED:
		SEQUENCE:this.setMatrixUniforms  ( gl  )
				COMPOSITE:this.setMatrixUniforms  ( gl  )
						COMPOSITE:this.setMatrixUniforms 
								NAME:this.setMatrixUniforms
								IGNORED:
						KEYWORD:(
						SEQUENCE:gl 
								EXPRESSION:gl 
										VARIABLE:gl 
												NAME:gl
												IGNORED:
						KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. drawElements ( gl. TRIANGLES, cubeVertexIndexBuffer [ 2 ], gl. UNSIGNED_SHORT, 0 )
OPENGL_CALL:gl. drawElements ( gl. TRIANGLES, cubeVertexIndexBuffer [ 2 ], gl. UNSIGNED_SHORT, 0 )
		KEYWORD:gl.
		NAME:drawElements
		KEYWORD:(
		SEQUENCE:gl. TRIANGLES, cubeVertexIndexBuffer [ 2 ], gl. UNSIGNED_SHORT, 0
				EXPRESSION:gl. TRIANGLES
						OPENGL_CONSTANT:gl. TRIANGLES
								KEYWORD:gl.
								NAME:TRIANGLES
				KEYWORD:, 
				EXPRESSION:cubeVertexIndexBuffer [ 2 ]
						VARIABLE:cubeVertexIndexBuffer [ 2 ]
								NAME:cubeVertexIndexBuffer
								COMPOSITE:[ 2 ]
										KEYWORD:[
										EXPRESSION:2
												VALUE:2
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. UNSIGNED_SHORT
						OPENGL_CONSTANT:gl. UNSIGNED_SHORT
								KEYWORD:gl.
								NAME:UNSIGNED_SHORT
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.animate  (  )
CALL: this.animate  (  )
		IGNORED:
		SEQUENCE:this.animate  (  )
				COMPOSITE:this.animate  (  )
						COMPOSITE:this.animate 
								NAME:this.animate
								IGNORED:
						KEYWORD:(
						SEQUENCE:
						KEYWORD:)


[METHOD_DECLARATION] -------> , animate : function (  )
KEYWORD:,
NAME:animate
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var timeNow  = new  Date  (  ) . getTime  (  )
VARIABLE:var timeNow 
		KEYWORD:var
		NAME:timeNow 
				NAME:timeNow
				IGNORED:
KEYWORD:=
CALL:new  Date  (  ) . getTime  (  )
		COMPOSITE:new  Date  (  ) .
				NEW_STATEMENT:new  Date  (  )
						KEYWORD:new 
						TYPE:Date 
								TYPE:Date
								IGNORED:
						COMPOSITE:(  )
								KEYWORD:(
								SEQUENCE:
								KEYWORD:)
				KEYWORD:.
		SEQUENCE:getTime  (  )
				COMPOSITE:getTime  (  )
						COMPOSITE:getTime 
								NAME:getTime
								IGNORED:
						KEYWORD:(
						SEQUENCE:
						KEYWORD:)


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( lastTime !=0 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:lastTime !=0
		VARIABLE:lastTime 
				NAME:lastTime
				IGNORED:
		OPERATOR:!=
		VALUE:0
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var elapsed  = timeNow -lastTime 
VARIABLE:var elapsed 
		KEYWORD:var
		NAME:elapsed 
				NAME:elapsed
				IGNORED:
KEYWORD:=
EXPRESSION:timeNow -lastTime 
		VARIABLE:timeNow 
				NAME:timeNow
				IGNORED:
		OPERATOR:-
		VARIABLE:lastTime 
				NAME:lastTime
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> rAngle  + = 1.57*elapsed *0.001
NAME:rAngle 
		NAME:rAngle
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION:1.57*elapsed *0.001
		VALUE:1.57
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> lastTime   = timeNow 
NAME:lastTime 
		NAME:lastTime
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:timeNow 
		VARIABLE:timeNow 
				NAME:timeNow
				IGNORED:



test_sv4Drawer.js
[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var vertexPositionAttribute 
VARIABLE:var vertexPositionAttribute 
		KEYWORD:var
		NAME:vertexPositionAttribute 
				NAME:vertexPositionAttribute
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var textureCoordAttribute 
VARIABLE:var textureCoordAttribute 
		KEYWORD:var
		NAME:textureCoordAttribute 
				NAME:textureCoordAttribute
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var pMatrixUniform 
VARIABLE:var pMatrixUniform 
		KEYWORD:var
		NAME:pMatrixUniform 
				NAME:pMatrixUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var mvMatrixUniform 
VARIABLE:var mvMatrixUniform 
		KEYWORD:var
		NAME:mvMatrixUniform 
				NAME:mvMatrixUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var samplerUniform 
VARIABLE:var samplerUniform 
		KEYWORD:var
		NAME:samplerUniform 
				NAME:samplerUniform
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cubeVertexPositionBuffer  = new  Array  (  )
VARIABLE:var cubeVertexPositionBuffer 
		KEYWORD:var
		NAME:cubeVertexPositionBuffer 
				NAME:cubeVertexPositionBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cubeVertexIndexBuffer  = new  Array  (  )
VARIABLE:var cubeVertexIndexBuffer 
		KEYWORD:var
		NAME:cubeVertexIndexBuffer 
				NAME:cubeVertexIndexBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cubeVertexTextureCoordBuffer  = new  Array  (  )
VARIABLE:var cubeVertexTextureCoordBuffer 
		KEYWORD:var
		NAME:cubeVertexTextureCoordBuffer 
				NAME:cubeVertexTextureCoordBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var textures  = new  Array  (  )
VARIABLE:var textures 
		KEYWORD:var
		NAME:textures 
				NAME:textures
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var pMatrix 
VARIABLE:var pMatrix 
		KEYWORD:var
		NAME:pMatrix 
				NAME:pMatrix
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var mvMatrix 
VARIABLE:var mvMatrix 
		KEYWORD:var
		NAME:mvMatrix 
				NAME:mvMatrix
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var rAnglex  = 0
VARIABLE:var rAnglex 
		KEYWORD:var
		NAME:rAnglex 
				NAME:rAnglex
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var speedx  = 0
VARIABLE:var speedx 
		KEYWORD:var
		NAME:speedx 
				NAME:speedx
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var rAngley  = 0
VARIABLE:var rAngley 
		KEYWORD:var
		NAME:rAngley 
				NAME:rAngley
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var speedy  = 0
VARIABLE:var speedy 
		KEYWORD:var
		NAME:speedy 
				NAME:speedy
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var zoom  = -8
VARIABLE:var zoom 
		KEYWORD:var
		NAME:zoom 
				NAME:zoom
				IGNORED:
KEYWORD:=
EXPRESSION:-8
		VALUE:-8


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var lastTime  = 0
VARIABLE:var lastTime 
		KEYWORD:var
		NAME:lastTime 
				NAME:lastTime
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var lastTime2  = 0
VARIABLE:var lastTime2 
		KEYWORD:var
		NAME:lastTime2 
				NAME:lastTime2
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var commands  = new  Array  (  )
VARIABLE:var commands 
		KEYWORD:var
		NAME:commands 
				NAME:commands
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var filter  = 0
VARIABLE:var filter 
		KEYWORD:var
		NAME:filter 
				NAME:filter
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[CONSTRUCTOR_DECLARATION] -------> function Test_sv4Drawer  (  )
KEYWORD:function
NAME:Test_sv4Drawer 
		NAME:Test_sv4Drawer
		IGNORED:
KEYWORD:(
METHOD_VARIABLES:
KEYWORD:)


[CLASS_DECLARATION] -------> Test_sv4Drawer . prototype =
NAME:Test_sv4Drawer
KEYWORD:.
KEYWORD:prototype
KEYWORD:=


[METHOD_DECLARATION] ------->  initShaders : function ( gl  )
IGNORED:
NAME:initShaders
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var shaderProgram  =  getShaderProgram  ( gl , "shaders /shader2.fs" , "shaders /shader2.vs"  )
VARIABLE:var shaderProgram 
		KEYWORD:var
		NAME:shaderProgram 
				NAME:shaderProgram
				IGNORED:
KEYWORD:=
CALL: getShaderProgram  ( gl , "shaders /shader2.fs" , "shaders /shader2.vs"  )
		IGNORED:
		SEQUENCE:getShaderProgram  ( gl , "shaders /shader2.fs" , "shaders /shader2.vs"  )
				COMPOSITE:getShaderProgram  ( gl , "shaders /shader2.fs" , "shaders /shader2.vs"  )
						COMPOSITE:getShaderProgram 
								NAME:getShaderProgram
								IGNORED:
						KEYWORD:(
						SEQUENCE:gl , "shaders /shader2.fs" , "shaders /shader2.vs" 
								EXPRESSION:gl 
										VARIABLE:gl 
												NAME:gl
												IGNORED:
								KEYWORD:, 
								EXPRESSION:"shaders /shader2.fs" 
										VARIABLE:"shaders 
												NAME:"shaders
												IGNORED:
										OPERATOR:/
										VARIABLE:shader2.fs" 
												NAME:shader2.fs"
												IGNORED:
								KEYWORD:, 
								EXPRESSION:"shaders /shader2.vs" 
										VARIABLE:"shaders 
												NAME:"shaders
												IGNORED:
										OPERATOR:/
										VARIABLE:shader2.vs" 
												NAME:shader2.vs"
												IGNORED:
						KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> vertexPositionAttribute   = gl. getAttribLocation ( shaderProgram , "aVertexPosition"  )
NAME:vertexPositionAttribute 
		NAME:vertexPositionAttribute
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getAttribLocation ( shaderProgram , "aVertexPosition"  )
		OPENGL_CALL:gl. getAttribLocation ( shaderProgram , "aVertexPosition"  )
				KEYWORD:gl.
				NAME:getAttribLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "aVertexPosition" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"aVertexPosition" 
								VARIABLE:"aVertexPosition" 
										NAME:"aVertexPosition"
										IGNORED:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enableVertexAttribArray ( vertexPositionAttribute  )
OPENGL_CALL:gl. enableVertexAttribArray ( vertexPositionAttribute  )
		KEYWORD:gl.
		NAME:enableVertexAttribArray
		KEYWORD:(
		SEQUENCE:vertexPositionAttribute 
				EXPRESSION:vertexPositionAttribute 
						VARIABLE:vertexPositionAttribute 
								NAME:vertexPositionAttribute
								IGNORED:
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> shaderProgram.textureCoordAttribute   = gl. getAttribLocation ( shaderProgram , "aTextureCoord"  )
NAME:shaderProgram.textureCoordAttribute 
		NAME:shaderProgram.textureCoordAttribute
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getAttribLocation ( shaderProgram , "aTextureCoord"  )
		OPENGL_CALL:gl. getAttribLocation ( shaderProgram , "aTextureCoord"  )
				KEYWORD:gl.
				NAME:getAttribLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "aTextureCoord" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"aTextureCoord" 
								VARIABLE:"aTextureCoord" 
										NAME:"aTextureCoord"
										IGNORED:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enableVertexAttribArray ( textureCoordAttribute  )
OPENGL_CALL:gl. enableVertexAttribArray ( textureCoordAttribute  )
		KEYWORD:gl.
		NAME:enableVertexAttribArray
		KEYWORD:(
		SEQUENCE:textureCoordAttribute 
				EXPRESSION:textureCoordAttribute 
						VARIABLE:textureCoordAttribute 
								NAME:textureCoordAttribute
								IGNORED:
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pMatrixUniform   = gl. getUniformLocation ( shaderProgram , "uPMatrix"  )
NAME:pMatrixUniform 
		NAME:pMatrixUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uPMatrix"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uPMatrix"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uPMatrix" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uPMatrix" 
								VARIABLE:"uPMatrix" 
										NAME:"uPMatrix"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrixUniform   = gl. getUniformLocation ( shaderProgram , "uMVMatrix"  )
NAME:mvMatrixUniform 
		NAME:mvMatrixUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uMVMatrix"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uMVMatrix"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uMVMatrix" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uMVMatrix" 
								VARIABLE:"uMVMatrix" 
										NAME:"uMVMatrix"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> samplerUniform   = gl. getUniformLocation ( shaderProgram , "uSampler"  )
NAME:samplerUniform 
		NAME:samplerUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uSampler"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uSampler"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uSampler" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uSampler" 
								VARIABLE:"uSampler" 
										NAME:"uSampler"
										IGNORED:
				KEYWORD:)


[METHOD_DECLARATION] -------> , setMatrixUniforms : function ( gl  )
KEYWORD:,
NAME:setMatrixUniforms
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniformMatrix4fv ( pMatrixUniform , false , pMatrix  )
OPENGL_CALL:gl. uniformMatrix4fv ( pMatrixUniform , false , pMatrix  )
		KEYWORD:gl.
		NAME:uniformMatrix4fv
		KEYWORD:(
		SEQUENCE:pMatrixUniform , false , pMatrix 
				EXPRESSION:pMatrixUniform 
						VARIABLE:pMatrixUniform 
								NAME:pMatrixUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:pMatrix 
						VARIABLE:pMatrix 
								NAME:pMatrix
								IGNORED:
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniformMatrix4fv ( mvMatrixUniform , false , mvMatrix  )
OPENGL_CALL:gl. uniformMatrix4fv ( mvMatrixUniform , false , mvMatrix  )
		KEYWORD:gl.
		NAME:uniformMatrix4fv
		KEYWORD:(
		SEQUENCE:mvMatrixUniform , false , mvMatrix 
				EXPRESSION:mvMatrixUniform 
						VARIABLE:mvMatrixUniform 
								NAME:mvMatrixUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:mvMatrix 
						VARIABLE:mvMatrix 
								NAME:mvMatrix
								IGNORED:
		KEYWORD:)


[METHOD_DECLARATION] -------> , initBuffers : function ( gl  )
KEYWORD:,
NAME:initBuffers
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexPositionBuffer [ 0 ]  = gl. createBuffer (  )
NAME:cubeVertexPositionBuffer [ 0 ]
		NAME:cubeVertexPositionBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, cubeVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:cubeVertexPositionBuffer [ 0 ]
						VARIABLE:cubeVertexPositionBuffer [ 0 ]
								NAME:cubeVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var vertices  = [ -1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,1.0,1.0,-1.0,1.0,1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,-1.0,1.0,-1.0,-1.0,-1.0,1.0,-1.0,-1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,-1.0,1.0,-1.0,1.0,-1.0,-1.0,1.0,1.0,-1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,1.0,1.0,-1.0,1.0,-1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,-1.0,1.0,-1.0 ]
VARIABLE:var vertices 
		KEYWORD:var
		NAME:vertices 
				NAME:vertices
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ -1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,1.0,1.0,-1.0,1.0,1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,-1.0,1.0,-1.0,-1.0,-1.0,1.0,-1.0,-1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,-1.0,1.0,-1.0,1.0,-1.0,-1.0,1.0,1.0,-1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,1.0,1.0,-1.0,1.0,-1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,-1.0,1.0,-1.0 ]
		KEYWORD:[
		SEQUENCE:-1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,1.0,1.0,-1.0,1.0,1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,-1.0,1.0,-1.0,-1.0,-1.0,1.0,-1.0,-1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,-1.0,1.0,-1.0,1.0,-1.0,-1.0,1.0,1.0,-1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,1.0,1.0,-1.0,1.0,-1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,-1.0,1.0,-1.0
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( vertices  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( vertices  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( vertices  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( vertices  )
						NEW_STATEMENT:new  Float32Array  ( vertices  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( vertices  )
										KEYWORD:(
										SEQUENCE:vertices 
												EXPRESSION:vertices 
														VARIABLE:vertices 
																NAME:vertices
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexPositionBuffer [ 1 ]  = 3
NAME:cubeVertexPositionBuffer [ 1 ]
		NAME:cubeVertexPositionBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:3
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexPositionBuffer [ 2 ]  = 24
NAME:cubeVertexPositionBuffer [ 2 ]
		NAME:cubeVertexPositionBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:24
		VALUE:24


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexTextureCoordBuffer [ 0 ]  = gl. createBuffer (  )
NAME:cubeVertexTextureCoordBuffer [ 0 ]
		NAME:cubeVertexTextureCoordBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexTextureCoordBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexTextureCoordBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, cubeVertexTextureCoordBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:cubeVertexTextureCoordBuffer [ 0 ]
						VARIABLE:cubeVertexTextureCoordBuffer [ 0 ]
								NAME:cubeVertexTextureCoordBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var textureCoords  = [ 0.0,0.0,1.0,0.0,1.0,1.0,0.0,1.0,1.0,0.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0,1.0,1.0,1.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0,0.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,1.0 ]
VARIABLE:var textureCoords 
		KEYWORD:var
		NAME:textureCoords 
				NAME:textureCoords
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ 0.0,0.0,1.0,0.0,1.0,1.0,0.0,1.0,1.0,0.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0,1.0,1.0,1.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0,0.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,1.0 ]
		KEYWORD:[
		SEQUENCE:0.0,0.0,1.0,0.0,1.0,1.0,0.0,1.0,1.0,0.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0,1.0,1.0,1.0,0.0,1.0,0.0,0.0,1.0,0.0,1.0,0.0,1.0,1.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,1.0,0.0,1.0
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( textureCoords  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( textureCoords  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( textureCoords  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( textureCoords  )
						NEW_STATEMENT:new  Float32Array  ( textureCoords  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( textureCoords  )
										KEYWORD:(
										SEQUENCE:textureCoords 
												EXPRESSION:textureCoords 
														VARIABLE:textureCoords 
																NAME:textureCoords
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexTextureCoordBuffer [ 1 ]  = 2
NAME:cubeVertexTextureCoordBuffer [ 1 ]
		NAME:cubeVertexTextureCoordBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:2
		VALUE:2


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexTextureCoordBuffer [ 2 ]  = 24
NAME:cubeVertexTextureCoordBuffer [ 2 ]
		NAME:cubeVertexTextureCoordBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:24
		VALUE:24


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexIndexBuffer [ 0 ]  = gl. createBuffer (  )
NAME:cubeVertexIndexBuffer [ 0 ]
		NAME:cubeVertexIndexBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, cubeVertexIndexBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, cubeVertexIndexBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ELEMENT_ARRAY_BUFFER, cubeVertexIndexBuffer [ 0 ]
				EXPRESSION:gl. ELEMENT_ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ELEMENT_ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ELEMENT_ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:cubeVertexIndexBuffer [ 0 ]
						VARIABLE:cubeVertexIndexBuffer [ 0 ]
								NAME:cubeVertexIndexBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cubeVertexIndices  = [ 0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23 ]
VARIABLE:var cubeVertexIndices 
		KEYWORD:var
		NAME:cubeVertexIndices 
				NAME:cubeVertexIndices
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ 0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23 ]
		KEYWORD:[
		SEQUENCE:0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23
				EXPRESSION:0
						VALUE:0
				KEYWORD:,
				EXPRESSION:1
						VALUE:1
				KEYWORD:,
				EXPRESSION:2
						VALUE:2
				KEYWORD:,
				EXPRESSION:0
						VALUE:0
				KEYWORD:,
				EXPRESSION:2
						VALUE:2
				KEYWORD:,
				EXPRESSION:3
						VALUE:3
				KEYWORD:,
				EXPRESSION:4
						VALUE:4
				KEYWORD:,
				EXPRESSION:5
						VALUE:5
				KEYWORD:,
				EXPRESSION:6
						VALUE:6
				KEYWORD:,
				EXPRESSION:4
						VALUE:4
				KEYWORD:,
				EXPRESSION:6
						VALUE:6
				KEYWORD:,
				EXPRESSION:7
						VALUE:7
				KEYWORD:,
				EXPRESSION:8
						VALUE:8
				KEYWORD:,
				EXPRESSION:9
						VALUE:9
				KEYWORD:,
				EXPRESSION:10
						VALUE:10
				KEYWORD:,
				EXPRESSION:8
						VALUE:8
				KEYWORD:,
				EXPRESSION:10
						VALUE:10
				KEYWORD:,
				EXPRESSION:11
						VALUE:11
				KEYWORD:,
				EXPRESSION:12
						VALUE:12
				KEYWORD:,
				EXPRESSION:13
						VALUE:13
				KEYWORD:,
				EXPRESSION:14
						VALUE:14
				KEYWORD:,
				EXPRESSION:12
						VALUE:12
				KEYWORD:,
				EXPRESSION:14
						VALUE:14
				KEYWORD:,
				EXPRESSION:15
						VALUE:15
				KEYWORD:,
				EXPRESSION:16
						VALUE:16
				KEYWORD:,
				EXPRESSION:17
						VALUE:17
				KEYWORD:,
				EXPRESSION:18
						VALUE:18
				KEYWORD:,
				EXPRESSION:16
						VALUE:16
				KEYWORD:,
				EXPRESSION:18
						VALUE:18
				KEYWORD:,
				EXPRESSION:19
						VALUE:19
				KEYWORD:,
				EXPRESSION:20
						VALUE:20
				KEYWORD:,
				EXPRESSION:21
						VALUE:21
				KEYWORD:,
				EXPRESSION:22
						VALUE:22
				KEYWORD:,
				EXPRESSION:20
						VALUE:20
				KEYWORD:,
				EXPRESSION:22
						VALUE:22
				KEYWORD:,
				EXPRESSION:23
						VALUE:23
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ELEMENT_ARRAY_BUFFER, new  Uint16Array  ( cubeVertexIndices  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ELEMENT_ARRAY_BUFFER, new  Uint16Array  ( cubeVertexIndices  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ELEMENT_ARRAY_BUFFER, new  Uint16Array  ( cubeVertexIndices  ), gl. STATIC_DRAW
				EXPRESSION:gl. ELEMENT_ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ELEMENT_ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ELEMENT_ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Uint16Array  ( cubeVertexIndices  )
						NEW_STATEMENT:new  Uint16Array  ( cubeVertexIndices  )
								KEYWORD:new 
								VARIABLE:Uint16Array 
										NAME:Uint16Array
										IGNORED:
								COMPOSITE:( cubeVertexIndices  )
										KEYWORD:(
										SEQUENCE:cubeVertexIndices 
												EXPRESSION:cubeVertexIndices 
														VARIABLE:cubeVertexIndices 
																NAME:cubeVertexIndices
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexIndexBuffer [ 1 ]  = 1
NAME:cubeVertexIndexBuffer [ 1 ]
		NAME:cubeVertexIndexBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:1
		VALUE:1


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexIndexBuffer [ 2 ]  = 36
NAME:cubeVertexIndexBuffer [ 2 ]
		NAME:cubeVertexIndexBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:36
		VALUE:36


[METHOD_DECLARATION] -------> , initTexture : function ( gl  )
KEYWORD:,
NAME:initTexture
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[FOR, ASSIGNMENT, LINE_OF_CODE] -------> for ( var i  = 0 ; i  < 3 ; i  ++  )
KEYWORD:for
KEYWORD:(
COMPOSITE:var i  = 0
		VARIABLE:var i 
				KEYWORD:var
				NAME:i 
						NAME:i
						IGNORED:
		KEYWORD:=
		EXPRESSION:0
				VALUE:0
KEYWORD:;
VALUE:i 
		VALUE:i
		IGNORED:
KEYWORD:<
EXPRESSION:3
		VALUE:3
KEYWORD:;
SEQUENCE:i  ++ 
		COMPOSITE:i  ++ 
				VARIABLE:i 
						VARIABLE:i
						IGNORED:
				KEYWORD:++
				EXPRESSION:
						IGNORED:
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> textures [ i  ]  = gl. createTexture (  )
NAME:textures [ i  ]
		NAME:textures
		COMPOSITE:[ i  ]
				KEYWORD:[
				EXPRESSION:i 
						NAME:i 
								NAME:i
								IGNORED:
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createTexture (  )
		OPENGL_CALL:gl. createTexture (  )
				KEYWORD:gl.
				NAME:createTexture
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var tex  = new  Image  (  )
VARIABLE:var tex 
		KEYWORD:var
		NAME:tex 
				NAME:tex
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Image  (  )
		KEYWORD:new 
		TYPE:Image 
				TYPE:Image
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tex.onload   =  function  (  )
NAME:tex.onload 
		NAME:tex.onload
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION: function  (  )
		CALL: function  (  )
				IGNORED:
				SEQUENCE:function  (  )
						COMPOSITE:function  (  )
								COMPOSITE:function 
										NAME:function
										IGNORED:
								KEYWORD:(
								SEQUENCE:
								KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindTexture ( gl. TEXTURE_2D, textures [ 0 ] )
OPENGL_CALL:gl. bindTexture ( gl. TEXTURE_2D, textures [ 0 ] )
		KEYWORD:gl.
		NAME:bindTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, textures [ 0 ]
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:textures [ 0 ]
						VARIABLE:textures [ 0 ]
								NAME:textures
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texImage2D ( gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex  )
OPENGL_CALL:gl. texImage2D ( gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex  )
		KEYWORD:gl.
		NAME:texImage2D
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex 
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:gl. RGB
						OPENGL_CONSTANT:gl. RGB
								KEYWORD:gl.
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:gl. RGB
						OPENGL_CONSTANT:gl. RGB
								KEYWORD:gl.
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:gl. UNSIGNED_BYTE
						OPENGL_CONSTANT:gl. UNSIGNED_BYTE
								KEYWORD:gl.
								NAME:UNSIGNED_BYTE
				KEYWORD:, 
				EXPRESSION:tex 
						VARIABLE:tex 
								NAME:tex
								IGNORED:
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. NEAREST )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. NEAREST )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. NEAREST
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_MAG_FILTER
						OPENGL_CONSTANT:gl. TEXTURE_MAG_FILTER
								KEYWORD:gl.
								NAME:TEXTURE_MAG_FILTER
				KEYWORD:, 
				EXPRESSION:gl. NEAREST
						OPENGL_CONSTANT:gl. NEAREST
								KEYWORD:gl.
								NAME:NEAREST
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. NEAREST )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. NEAREST )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. NEAREST
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_MIN_FILTER
						OPENGL_CONSTANT:gl. TEXTURE_MIN_FILTER
								KEYWORD:gl.
								NAME:TEXTURE_MIN_FILTER
				KEYWORD:, 
				EXPRESSION:gl. NEAREST
						OPENGL_CONSTANT:gl. NEAREST
								KEYWORD:gl.
								NAME:NEAREST
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindTexture ( gl. TEXTURE_2D, textures [ 1 ] )
OPENGL_CALL:gl. bindTexture ( gl. TEXTURE_2D, textures [ 1 ] )
		KEYWORD:gl.
		NAME:bindTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, textures [ 1 ]
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:textures [ 1 ]
						VARIABLE:textures [ 1 ]
								NAME:textures
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texImage2D ( gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex  )
OPENGL_CALL:gl. texImage2D ( gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex  )
		KEYWORD:gl.
		NAME:texImage2D
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex 
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:gl. RGB
						OPENGL_CONSTANT:gl. RGB
								KEYWORD:gl.
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:gl. RGB
						OPENGL_CONSTANT:gl. RGB
								KEYWORD:gl.
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:gl. UNSIGNED_BYTE
						OPENGL_CONSTANT:gl. UNSIGNED_BYTE
								KEYWORD:gl.
								NAME:UNSIGNED_BYTE
				KEYWORD:, 
				EXPRESSION:tex 
						VARIABLE:tex 
								NAME:tex
								IGNORED:
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_MAG_FILTER
						OPENGL_CONSTANT:gl. TEXTURE_MAG_FILTER
								KEYWORD:gl.
								NAME:TEXTURE_MAG_FILTER
				KEYWORD:, 
				EXPRESSION:gl. LINEAR
						OPENGL_CONSTANT:gl. LINEAR
								KEYWORD:gl.
								NAME:LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_MIN_FILTER
						OPENGL_CONSTANT:gl. TEXTURE_MIN_FILTER
								KEYWORD:gl.
								NAME:TEXTURE_MIN_FILTER
				KEYWORD:, 
				EXPRESSION:gl. LINEAR
						OPENGL_CONSTANT:gl. LINEAR
								KEYWORD:gl.
								NAME:LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindTexture ( gl. TEXTURE_2D, textures [ 2 ] )
OPENGL_CALL:gl. bindTexture ( gl. TEXTURE_2D, textures [ 2 ] )
		KEYWORD:gl.
		NAME:bindTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, textures [ 2 ]
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:textures [ 2 ]
						VARIABLE:textures [ 2 ]
								NAME:textures
								COMPOSITE:[ 2 ]
										KEYWORD:[
										EXPRESSION:2
												VALUE:2
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texImage2D ( gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex  )
OPENGL_CALL:gl. texImage2D ( gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex  )
		KEYWORD:gl.
		NAME:texImage2D
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex 
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:gl. RGB
						OPENGL_CONSTANT:gl. RGB
								KEYWORD:gl.
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:gl. RGB
						OPENGL_CONSTANT:gl. RGB
								KEYWORD:gl.
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:gl. UNSIGNED_BYTE
						OPENGL_CONSTANT:gl. UNSIGNED_BYTE
								KEYWORD:gl.
								NAME:UNSIGNED_BYTE
				KEYWORD:, 
				EXPRESSION:tex 
						VARIABLE:tex 
								NAME:tex
								IGNORED:
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_MAG_FILTER
						OPENGL_CONSTANT:gl. TEXTURE_MAG_FILTER
								KEYWORD:gl.
								NAME:TEXTURE_MAG_FILTER
				KEYWORD:, 
				EXPRESSION:gl. LINEAR
						OPENGL_CONSTANT:gl. LINEAR
								KEYWORD:gl.
								NAME:LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_MIN_FILTER
						OPENGL_CONSTANT:gl. TEXTURE_MIN_FILTER
								KEYWORD:gl.
								NAME:TEXTURE_MIN_FILTER
				KEYWORD:, 
				EXPRESSION:gl. LINEAR_MIPMAP_LINEAR
						OPENGL_CONSTANT:gl. LINEAR_MIPMAP_LINEAR
								KEYWORD:gl.
								NAME:LINEAR_MIPMAP_LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. generateMipmap ( gl. TEXTURE_2D )
OPENGL_CALL:gl. generateMipmap ( gl. TEXTURE_2D )
		KEYWORD:gl.
		NAME:generateMipmap
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindTexture ( gl. TEXTURE_2D, null  )
OPENGL_CALL:gl. bindTexture ( gl. TEXTURE_2D, null  )
		KEYWORD:gl.
		NAME:bindTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, null 
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:null 
						VARIABLE:null 
								NAME:null
								IGNORED:
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tex.src   = "images /crate.gif" 
NAME:tex.src 
		NAME:tex.src
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:"images /crate.gif" 
		VARIABLE:"images 
				NAME:"images
				IGNORED:
		OPERATOR:/
		VARIABLE:crate.gif" 
				NAME:crate.gif"
				IGNORED:


[METHOD_DECLARATION] -------> , drawScene : function ( gl  )
KEYWORD:,
NAME:drawScene
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. clearColor ( 0.0, 0.0, 0.0, 1.0 )
OPENGL_CALL:gl. clearColor ( 0.0, 0.0, 0.0, 1.0 )
		KEYWORD:gl.
		NAME:clearColor
		KEYWORD:(
		SEQUENCE:0.0, 0.0, 0.0, 1.0
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:, 
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:, 
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:, 
				EXPRESSION:1.0
						VALUE:1.0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enable ( gl. DEPTH_TEST )
OPENGL_CALL:gl. enable ( gl. DEPTH_TEST )
		KEYWORD:gl.
		NAME:enable
		KEYWORD:(
		SEQUENCE:gl. DEPTH_TEST
				EXPRESSION:gl. DEPTH_TEST
						OPENGL_CONSTANT:gl. DEPTH_TEST
								KEYWORD:gl.
								NAME:DEPTH_TEST
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. cullFace ( gl. BACK )
OPENGL_CALL:gl. cullFace ( gl. BACK )
		KEYWORD:gl.
		NAME:cullFace
		KEYWORD:(
		SEQUENCE:gl. BACK
				EXPRESSION:gl. BACK
						OPENGL_CONSTANT:gl. BACK
								KEYWORD:gl.
								NAME:BACK
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enable ( gl. CULL_FACE )
OPENGL_CALL:gl. enable ( gl. CULL_FACE )
		KEYWORD:gl.
		NAME:enable
		KEYWORD:(
		SEQUENCE:gl. CULL_FACE
				EXPRESSION:gl. CULL_FACE
						OPENGL_CONSTANT:gl. CULL_FACE
								KEYWORD:gl.
								NAME:CULL_FACE
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.handleKeys  (  )
CALL: this.handleKeys  (  )
		IGNORED:
		SEQUENCE:this.handleKeys  (  )
				COMPOSITE:this.handleKeys  (  )
						COMPOSITE:this.handleKeys 
								NAME:this.handleKeys
								IGNORED:
						KEYWORD:(
						SEQUENCE:
						KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. viewport ( 0, 0, 500, 500 )
OPENGL_CALL:gl. viewport ( 0, 0, 500, 500 )
		KEYWORD:gl.
		NAME:viewport
		KEYWORD:(
		SEQUENCE:0, 0, 500, 500
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:500
						VALUE:500
				KEYWORD:, 
				EXPRESSION:500
						VALUE:500
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. clear ( gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT )
OPENGL_CALL:gl. clear ( gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT )
		KEYWORD:gl.
		NAME:clear
		KEYWORD:(
		SEQUENCE:gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT
				EXPRESSION:gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT
						OPENGL_CONSTANT:gl. COLOR_BUFFER_BIT
								KEYWORD:gl.
								NAME:COLOR_BUFFER_BIT
						OPERATOR:|
						OPENGL_CONSTANT:gl. DEPTH_BUFFER_BIT
								KEYWORD:gl.
								NAME:DEPTH_BUFFER_BIT
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cx  =  Math.cos  ( rAnglex  )
VARIABLE:var cx 
		KEYWORD:var
		NAME:cx 
				NAME:cx
				IGNORED:
KEYWORD:=
CALL: Math.cos  ( rAnglex  )
		IGNORED:
		SEQUENCE:Math.cos  ( rAnglex  )
				COMPOSITE:Math.cos  ( rAnglex  )
						COMPOSITE:Math.cos 
								NAME:Math.cos
								IGNORED:
						KEYWORD:(
						SEQUENCE:rAnglex 
								EXPRESSION:rAnglex 
										VARIABLE:rAnglex 
												NAME:rAnglex
												IGNORED:
						KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var sx  =  Math.sin  ( rAnglex  )
VARIABLE:var sx 
		KEYWORD:var
		NAME:sx 
				NAME:sx
				IGNORED:
KEYWORD:=
CALL: Math.sin  ( rAnglex  )
		IGNORED:
		SEQUENCE:Math.sin  ( rAnglex  )
				COMPOSITE:Math.sin  ( rAnglex  )
						COMPOSITE:Math.sin 
								NAME:Math.sin
								IGNORED:
						KEYWORD:(
						SEQUENCE:rAnglex 
								EXPRESSION:rAnglex 
										VARIABLE:rAnglex 
												NAME:rAnglex
												IGNORED:
						KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cy  =  Math.cos  ( rAngley  )
VARIABLE:var cy 
		KEYWORD:var
		NAME:cy 
				NAME:cy
				IGNORED:
KEYWORD:=
CALL: Math.cos  ( rAngley  )
		IGNORED:
		SEQUENCE:Math.cos  ( rAngley  )
				COMPOSITE:Math.cos  ( rAngley  )
						COMPOSITE:Math.cos 
								NAME:Math.cos
								IGNORED:
						KEYWORD:(
						SEQUENCE:rAngley 
								EXPRESSION:rAngley 
										VARIABLE:rAngley 
												NAME:rAngley
												IGNORED:
						KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var sy  =  Math.sin  ( rAngley  )
VARIABLE:var sy 
		KEYWORD:var
		NAME:sy 
				NAME:sy
				IGNORED:
KEYWORD:=
CALL: Math.sin  ( rAngley  )
		IGNORED:
		SEQUENCE:Math.sin  ( rAngley  )
				COMPOSITE:Math.sin  ( rAngley  )
						COMPOSITE:Math.sin 
								NAME:Math.sin
								IGNORED:
						KEYWORD:(
						SEQUENCE:rAngley 
								EXPRESSION:rAngley 
										VARIABLE:rAngley 
												NAME:rAngley
												IGNORED:
						KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pMatrix   = new  Float32Array  ( [ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ] )
NAME:pMatrix 
		NAME:pMatrix
		IGNORED:
IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Float32Array  ( [ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ] )
		KEYWORD:new 
		TYPE:Float32Array 
				TYPE:Float32Array
				IGNORED:
		COMPOSITE:( [ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ] )
				KEYWORD:(
				SEQUENCE:[ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ]
						ARRAY_CONTENT:[ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ]
								KEYWORD:[
								SEQUENCE:2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0
										EXPRESSION:2.4142136573791504
												VALUE:2.4142136573791504
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:2.4142136573791504
												VALUE:2.4142136573791504
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:-1.0020020008087158
												VALUE:-1.0020020008087158
										KEYWORD:,
										EXPRESSION:-1
												VALUE:-1
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:-0.20020020008087158
												VALUE:-0.20020020008087158
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
								KEYWORD:]
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix   = new  Float32Array  ( [ cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,0,0,zoom ,1 ] )
NAME:mvMatrix 
		NAME:mvMatrix
		IGNORED:
IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Float32Array  ( [ cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,0,0,zoom ,1 ] )
		KEYWORD:new 
		TYPE:Float32Array 
				TYPE:Float32Array
				IGNORED:
		COMPOSITE:( [ cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,0,0,zoom ,1 ] )
				KEYWORD:(
				SEQUENCE:[ cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,0,0,zoom ,1 ]
						ARRAY_CONTENT:[ cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,0,0,zoom ,1 ]
								KEYWORD:[
								SEQUENCE:cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,0,0,zoom ,1
										EXPRESSION:cy 
												VARIABLE:cy 
														NAME:cy
														IGNORED:
										KEYWORD:,
										EXPRESSION:sx *sy 
												VARIABLE:sx 
														NAME:sx
														IGNORED:
												OPERATOR:*
												VARIABLE:sy 
														NAME:sy
														IGNORED:
										KEYWORD:,
										EXPRESSION:-cx*sy 
												VALUE:-cx
												OPERATOR:*
												VARIABLE:sy 
														NAME:sy
														IGNORED:
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:cx 
												VARIABLE:cx 
														NAME:cx
														IGNORED:
										KEYWORD:,
										EXPRESSION:sx 
												VARIABLE:sx 
														NAME:sx
														IGNORED:
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:sy 
												VARIABLE:sy 
														NAME:sy
														IGNORED:
										KEYWORD:,
										EXPRESSION:-cy*sx 
												VALUE:-cy
												OPERATOR:*
												VARIABLE:sx 
														NAME:sx
														IGNORED:
										KEYWORD:,
										EXPRESSION:cx *cy 
												VARIABLE:cx 
														NAME:cx
														IGNORED:
												OPERATOR:*
												VARIABLE:cy 
														NAME:cy
														IGNORED:
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:zoom 
												VARIABLE:zoom 
														NAME:zoom
														IGNORED:
										KEYWORD:,
										EXPRESSION:1
												VALUE:1
								KEYWORD:]
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. frontFace ( gl. CCW )
OPENGL_CALL:gl. frontFace ( gl. CCW )
		KEYWORD:gl.
		NAME:frontFace
		KEYWORD:(
		SEQUENCE:gl. CCW
				EXPRESSION:gl. CCW
						OPENGL_CONSTANT:gl. CCW
								KEYWORD:gl.
								NAME:CCW
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, cubeVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:cubeVertexPositionBuffer [ 0 ]
						VARIABLE:cubeVertexPositionBuffer [ 0 ]
								NAME:cubeVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( vertexPositionAttribute , cubeVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( vertexPositionAttribute , cubeVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:vertexPositionAttribute , cubeVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:vertexPositionAttribute 
						VARIABLE:vertexPositionAttribute 
								NAME:vertexPositionAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:cubeVertexPositionBuffer [ 1 ]
						VARIABLE:cubeVertexPositionBuffer [ 1 ]
								NAME:cubeVertexPositionBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexTextureCoordBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexTextureCoordBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, cubeVertexTextureCoordBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:cubeVertexTextureCoordBuffer [ 0 ]
						VARIABLE:cubeVertexTextureCoordBuffer [ 0 ]
								NAME:cubeVertexTextureCoordBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( textureCoordAttribute , cubeVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( textureCoordAttribute , cubeVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:textureCoordAttribute , cubeVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:textureCoordAttribute 
						VARIABLE:textureCoordAttribute 
								NAME:textureCoordAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:cubeVertexTextureCoordBuffer [ 1 ]
						VARIABLE:cubeVertexTextureCoordBuffer [ 1 ]
								NAME:cubeVertexTextureCoordBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. activeTexture ( gl. TEXTURE0 )
OPENGL_CALL:gl. activeTexture ( gl. TEXTURE0 )
		KEYWORD:gl.
		NAME:activeTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE0
				EXPRESSION:gl. TEXTURE0
						OPENGL_CONSTANT:gl. TEXTURE0
								KEYWORD:gl.
								NAME:TEXTURE0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindTexture ( gl. TEXTURE_2D, textures [ filter  ] )
OPENGL_CALL:gl. bindTexture ( gl. TEXTURE_2D, textures [ filter  ] )
		KEYWORD:gl.
		NAME:bindTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, textures [ filter  ]
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:textures [ filter  ]
						VARIABLE:textures [ filter  ]
								NAME:textures
								COMPOSITE:[ filter  ]
										KEYWORD:[
										EXPRESSION:filter 
												VARIABLE:filter 
														NAME:filter
														IGNORED:
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniform1i ( samplerUniform , 0 )
OPENGL_CALL:gl. uniform1i ( samplerUniform , 0 )
		KEYWORD:gl.
		NAME:uniform1i
		KEYWORD:(
		SEQUENCE:samplerUniform , 0
				EXPRESSION:samplerUniform 
						VARIABLE:samplerUniform 
								NAME:samplerUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, cubeVertexIndexBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, cubeVertexIndexBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ELEMENT_ARRAY_BUFFER, cubeVertexIndexBuffer [ 0 ]
				EXPRESSION:gl. ELEMENT_ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ELEMENT_ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ELEMENT_ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:cubeVertexIndexBuffer [ 0 ]
						VARIABLE:cubeVertexIndexBuffer [ 0 ]
								NAME:cubeVertexIndexBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.setMatrixUniforms  ( gl  )
CALL: this.setMatrixUniforms  ( gl  )
		IGNORED:
		SEQUENCE:this.setMatrixUniforms  ( gl  )
				COMPOSITE:this.setMatrixUniforms  ( gl  )
						COMPOSITE:this.setMatrixUniforms 
								NAME:this.setMatrixUniforms
								IGNORED:
						KEYWORD:(
						SEQUENCE:gl 
								EXPRESSION:gl 
										VARIABLE:gl 
												NAME:gl
												IGNORED:
						KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. drawElements ( gl. TRIANGLES, cubeVertexIndexBuffer [ 2 ], gl. UNSIGNED_SHORT, 0 )
OPENGL_CALL:gl. drawElements ( gl. TRIANGLES, cubeVertexIndexBuffer [ 2 ], gl. UNSIGNED_SHORT, 0 )
		KEYWORD:gl.
		NAME:drawElements
		KEYWORD:(
		SEQUENCE:gl. TRIANGLES, cubeVertexIndexBuffer [ 2 ], gl. UNSIGNED_SHORT, 0
				EXPRESSION:gl. TRIANGLES
						OPENGL_CONSTANT:gl. TRIANGLES
								KEYWORD:gl.
								NAME:TRIANGLES
				KEYWORD:, 
				EXPRESSION:cubeVertexIndexBuffer [ 2 ]
						VARIABLE:cubeVertexIndexBuffer [ 2 ]
								NAME:cubeVertexIndexBuffer
								COMPOSITE:[ 2 ]
										KEYWORD:[
										EXPRESSION:2
												VALUE:2
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. UNSIGNED_SHORT
						OPENGL_CONSTANT:gl. UNSIGNED_SHORT
								KEYWORD:gl.
								NAME:UNSIGNED_SHORT
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.animate  (  )
CALL: this.animate  (  )
		IGNORED:
		SEQUENCE:this.animate  (  )
				COMPOSITE:this.animate  (  )
						COMPOSITE:this.animate 
								NAME:this.animate
								IGNORED:
						KEYWORD:(
						SEQUENCE:
						KEYWORD:)


[METHOD_DECLARATION] -------> , animate : function (  )
KEYWORD:,
NAME:animate
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var timeNow  = new  Date  (  ) . getTime  (  )
VARIABLE:var timeNow 
		KEYWORD:var
		NAME:timeNow 
				NAME:timeNow
				IGNORED:
KEYWORD:=
CALL:new  Date  (  ) . getTime  (  )
		COMPOSITE:new  Date  (  ) .
				NEW_STATEMENT:new  Date  (  )
						KEYWORD:new 
						TYPE:Date 
								TYPE:Date
								IGNORED:
						COMPOSITE:(  )
								KEYWORD:(
								SEQUENCE:
								KEYWORD:)
				KEYWORD:.
		SEQUENCE:getTime  (  )
				COMPOSITE:getTime  (  )
						COMPOSITE:getTime 
								NAME:getTime
								IGNORED:
						KEYWORD:(
						SEQUENCE:
						KEYWORD:)


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( lastTime !=0 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:lastTime !=0
		VARIABLE:lastTime 
				NAME:lastTime
				IGNORED:
		OPERATOR:!=
		VALUE:0
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var elapsed  = timeNow -lastTime 
VARIABLE:var elapsed 
		KEYWORD:var
		NAME:elapsed 
				NAME:elapsed
				IGNORED:
KEYWORD:=
EXPRESSION:timeNow -lastTime 
		VARIABLE:timeNow 
				NAME:timeNow
				IGNORED:
		OPERATOR:-
		VARIABLE:lastTime 
				NAME:lastTime
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> rAnglex  + = speedx *elapsed *0.001
NAME:rAnglex 
		NAME:rAnglex
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION:speedx *elapsed *0.001
		VARIABLE:speedx 
				NAME:speedx
				IGNORED:
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> rAngley  + = speedy *elapsed *0.001
NAME:rAngley 
		NAME:rAngley
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION:speedy *elapsed *0.001
		VARIABLE:speedy 
				NAME:speedy
				IGNORED:
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> lastTime   = timeNow 
NAME:lastTime 
		NAME:lastTime
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:timeNow 
		VARIABLE:timeNow 
				NAME:timeNow
				IGNORED:


[METHOD_DECLARATION] -------> , handleKeys : function (  )
KEYWORD:,
NAME:handleKeys
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var timeNow  = new  Date  (  ) . getTime  (  )
VARIABLE:var timeNow 
		KEYWORD:var
		NAME:timeNow 
				NAME:timeNow
				IGNORED:
KEYWORD:=
CALL:new  Date  (  ) . getTime  (  )
		COMPOSITE:new  Date  (  ) .
				NEW_STATEMENT:new  Date  (  )
						KEYWORD:new 
						TYPE:Date 
								TYPE:Date
								IGNORED:
						COMPOSITE:(  )
								KEYWORD:(
								SEQUENCE:
								KEYWORD:)
				KEYWORD:.
		SEQUENCE:getTime  (  )
				COMPOSITE:getTime  (  )
						COMPOSITE:getTime 
								NAME:getTime
								IGNORED:
						KEYWORD:(
						SEQUENCE:
						KEYWORD:)


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( lastTime2 !=0 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:lastTime2 !=0
		VARIABLE:lastTime2 
				NAME:lastTime2
				IGNORED:
		OPERATOR:!=
		VALUE:0
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var elapsed  = timeNow -lastTime2 
VARIABLE:var elapsed 
		KEYWORD:var
		NAME:elapsed 
				NAME:elapsed
				IGNORED:
KEYWORD:=
EXPRESSION:timeNow -lastTime2 
		VARIABLE:timeNow 
				NAME:timeNow
				IGNORED:
		OPERATOR:-
		VARIABLE:lastTime2 
				NAME:lastTime2
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands [ 0 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands [ 0 ]
		VARIABLE:commands [ 0 ]
				NAME:commands
				COMPOSITE:[ 0 ]
						KEYWORD:[
						EXPRESSION:0
								VALUE:0
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> zoom  + = 5*elapsed *0.001
NAME:zoom 
		NAME:zoom
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION:5*elapsed *0.001
		VALUE:5
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands [ 1 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands [ 1 ]
		VARIABLE:commands [ 1 ]
				NAME:commands
				COMPOSITE:[ 1 ]
						KEYWORD:[
						EXPRESSION:1
								VALUE:1
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> zoom  - = 5*elapsed *0.001
NAME:zoom 
		NAME:zoom
		IGNORED:
KEYWORD:-
KEYWORD:=
EXPRESSION:5*elapsed *0.001
		VALUE:5
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands [ 2 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands [ 2 ]
		VARIABLE:commands [ 2 ]
				NAME:commands
				COMPOSITE:[ 2 ]
						KEYWORD:[
						EXPRESSION:2
								VALUE:2
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> speedx  - = 2*elapsed *0.001
NAME:speedx 
		NAME:speedx
		IGNORED:
KEYWORD:-
KEYWORD:=
EXPRESSION:2*elapsed *0.001
		VALUE:2
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands [ 3 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands [ 3 ]
		VARIABLE:commands [ 3 ]
				NAME:commands
				COMPOSITE:[ 3 ]
						KEYWORD:[
						EXPRESSION:3
								VALUE:3
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> speedx  + = 2*elapsed *0.001
NAME:speedx 
		NAME:speedx
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION:2*elapsed *0.001
		VALUE:2
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands [ 4 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands [ 4 ]
		VARIABLE:commands [ 4 ]
				NAME:commands
				COMPOSITE:[ 4 ]
						KEYWORD:[
						EXPRESSION:4
								VALUE:4
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> speedy  - = 2*elapsed *0.001
NAME:speedy 
		NAME:speedy
		IGNORED:
KEYWORD:-
KEYWORD:=
EXPRESSION:2*elapsed *0.001
		VALUE:2
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands [ 5 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands [ 5 ]
		VARIABLE:commands [ 5 ]
				NAME:commands
				COMPOSITE:[ 5 ]
						KEYWORD:[
						EXPRESSION:5
								VALUE:5
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> speedy  + = 2*elapsed *0.001
NAME:speedy 
		NAME:speedy
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION:2*elapsed *0.001
		VALUE:2
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> lastTime2   = timeNow 
NAME:lastTime2 
		NAME:lastTime2
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:timeNow 
		VARIABLE:timeNow 
				NAME:timeNow
				IGNORED:


[METHOD_DECLARATION] -------> , setCommands : function ( e , value  )
KEYWORD:,
NAME:setCommands
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:e , value 
		VARIABLE:e 
				NAME:e
				IGNORED:
		KEYWORD:, 
		VARIABLE:value 
				NAME:value
				IGNORED:
KEYWORD:)


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==65 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==65
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:65
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 0 ]  = value 
NAME:commands [ 0 ]
		NAME:commands
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==90 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==90
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:90
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 1 ]  = value 
NAME:commands [ 1 ]
		NAME:commands
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==38 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==38
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:38
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 2 ]  = value 
NAME:commands [ 2 ]
		NAME:commands
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==40 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==40
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:40
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 3 ]  = value 
NAME:commands [ 3 ]
		NAME:commands
		COMPOSITE:[ 3 ]
				KEYWORD:[
				EXPRESSION:3
						VALUE:3
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==37 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==37
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:37
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 4 ]  = value 
NAME:commands [ 4 ]
		NAME:commands
		COMPOSITE:[ 4 ]
				KEYWORD:[
				EXPRESSION:4
						VALUE:4
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==39 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==39
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:39
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 5 ]  = value 
NAME:commands [ 5 ]
		NAME:commands
		COMPOSITE:[ 5 ]
				KEYWORD:[
				EXPRESSION:5
						VALUE:5
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[METHOD_DECLARATION] -------> , keyPressed : function ( e  )
KEYWORD:,
NAME:keyPressed
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:e 
		VARIABLE:e 
				NAME:e
				IGNORED:
KEYWORD:)


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==70 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==70
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:70
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> filter   = filter ==2 ? 0 : ( filter +1 )
NAME:filter 
		NAME:filter
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:filter ==2 ? 0 : ( filter +1 )
		TERNARY_OPERATOR:filter ==2 ? 0 : ( filter +1 )
				EXPRESSION:filter ==2
						VARIABLE:filter 
								NAME:filter
								IGNORED:
						OPERATOR:==
						VALUE:2
				KEYWORD:?
				EXPRESSION:0
						VALUE:0
				KEYWORD::
				EXPRESSION:( filter +1 )
						COMPOSITE:( filter +1 )
								KEYWORD:(
								EXPRESSION:filter +1
										VARIABLE:filter 
												NAME:filter
												IGNORED:
										OPERATOR:+
										VALUE:1
								KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.setCommands  ( e , true  )
CALL: this.setCommands  ( e , true  )
		IGNORED:
		SEQUENCE:this.setCommands  ( e , true  )
				COMPOSITE:this.setCommands  ( e , true  )
						COMPOSITE:this.setCommands 
								NAME:this.setCommands
								IGNORED:
						KEYWORD:(
						SEQUENCE:e , true 
								EXPRESSION:e 
										VARIABLE:e 
												NAME:e
												IGNORED:
								KEYWORD:, 
								EXPRESSION:true 
										VARIABLE:true 
												NAME:true
												IGNORED:
						KEYWORD:)


[METHOD_DECLARATION] -------> , keyReleased : function ( e  )
KEYWORD:,
NAME:keyReleased
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:e 
		VARIABLE:e 
				NAME:e
				IGNORED:
KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.setCommands  ( e , false  )
CALL: this.setCommands  ( e , false  )
		IGNORED:
		SEQUENCE:this.setCommands  ( e , false  )
				COMPOSITE:this.setCommands  ( e , false  )
						COMPOSITE:this.setCommands 
								NAME:this.setCommands
								IGNORED:
						KEYWORD:(
						SEQUENCE:e , false 
								EXPRESSION:e 
										VARIABLE:e 
												NAME:e
												IGNORED:
								KEYWORD:, 
								EXPRESSION:false 
										VARIABLE:false 
												NAME:false
												IGNORED:
						KEYWORD:)



test_sv5Drawer.js
[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var vertexPositionAttribute 
VARIABLE:var vertexPositionAttribute 
		KEYWORD:var
		NAME:vertexPositionAttribute 
				NAME:vertexPositionAttribute
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var textureCoordAttribute 
VARIABLE:var textureCoordAttribute 
		KEYWORD:var
		NAME:textureCoordAttribute 
				NAME:textureCoordAttribute
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var pMatrixUniform 
VARIABLE:var pMatrixUniform 
		KEYWORD:var
		NAME:pMatrixUniform 
				NAME:pMatrixUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var mvMatrixUniform 
VARIABLE:var mvMatrixUniform 
		KEYWORD:var
		NAME:mvMatrixUniform 
				NAME:mvMatrixUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var samplerUniform 
VARIABLE:var samplerUniform 
		KEYWORD:var
		NAME:samplerUniform 
				NAME:samplerUniform
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cubeVertexPositionBuffer  = new  Array  (  )
VARIABLE:var cubeVertexPositionBuffer 
		KEYWORD:var
		NAME:cubeVertexPositionBuffer 
				NAME:cubeVertexPositionBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cubeVertexIndexBuffer  = new  Array  (  )
VARIABLE:var cubeVertexIndexBuffer 
		KEYWORD:var
		NAME:cubeVertexIndexBuffer 
				NAME:cubeVertexIndexBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cubeVertexTextureCoordBuffer  = new  Array  (  )
VARIABLE:var cubeVertexTextureCoordBuffer 
		KEYWORD:var
		NAME:cubeVertexTextureCoordBuffer 
				NAME:cubeVertexTextureCoordBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var textures  = new  Array  (  )
VARIABLE:var textures 
		KEYWORD:var
		NAME:textures 
				NAME:textures
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var pMatrix 
VARIABLE:var pMatrix 
		KEYWORD:var
		NAME:pMatrix 
				NAME:pMatrix
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var mvMatrix 
VARIABLE:var mvMatrix 
		KEYWORD:var
		NAME:mvMatrix 
				NAME:mvMatrix
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var rAnglex  = 0
VARIABLE:var rAnglex 
		KEYWORD:var
		NAME:rAnglex 
				NAME:rAnglex
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var speedx  = 0
VARIABLE:var speedx 
		KEYWORD:var
		NAME:speedx 
				NAME:speedx
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var rAngley  = 0
VARIABLE:var rAngley 
		KEYWORD:var
		NAME:rAngley 
				NAME:rAngley
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var speedy  = 0
VARIABLE:var speedy 
		KEYWORD:var
		NAME:speedy 
				NAME:speedy
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var zoom  = -8
VARIABLE:var zoom 
		KEYWORD:var
		NAME:zoom 
				NAME:zoom
				IGNORED:
KEYWORD:=
EXPRESSION:-8
		VALUE:-8


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var lastTime  = 0
VARIABLE:var lastTime 
		KEYWORD:var
		NAME:lastTime 
				NAME:lastTime
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var lastTime2  = 0
VARIABLE:var lastTime2 
		KEYWORD:var
		NAME:lastTime2 
				NAME:lastTime2
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var commands  = new  Array  (  )
VARIABLE:var commands 
		KEYWORD:var
		NAME:commands 
				NAME:commands
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var wrapper  = 0
VARIABLE:var wrapper 
		KEYWORD:var
		NAME:wrapper 
				NAME:wrapper
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[CONSTRUCTOR_DECLARATION] -------> function Test_sv5Drawer  (  )
KEYWORD:function
NAME:Test_sv5Drawer 
		NAME:Test_sv5Drawer
		IGNORED:
KEYWORD:(
METHOD_VARIABLES:
KEYWORD:)


[CLASS_DECLARATION] -------> Test_sv5Drawer . prototype =
NAME:Test_sv5Drawer
KEYWORD:.
KEYWORD:prototype
KEYWORD:=


[METHOD_DECLARATION] ------->  initShaders : function ( gl  )
IGNORED:
NAME:initShaders
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var shaderProgram  =  getShaderProgram  ( gl , "shaders /shader2.fs" , "shaders /shader2.vs"  )
VARIABLE:var shaderProgram 
		KEYWORD:var
		NAME:shaderProgram 
				NAME:shaderProgram
				IGNORED:
KEYWORD:=
CALL: getShaderProgram  ( gl , "shaders /shader2.fs" , "shaders /shader2.vs"  )
		IGNORED:
		SEQUENCE:getShaderProgram  ( gl , "shaders /shader2.fs" , "shaders /shader2.vs"  )
				COMPOSITE:getShaderProgram  ( gl , "shaders /shader2.fs" , "shaders /shader2.vs"  )
						COMPOSITE:getShaderProgram 
								NAME:getShaderProgram
								IGNORED:
						KEYWORD:(
						SEQUENCE:gl , "shaders /shader2.fs" , "shaders /shader2.vs" 
								EXPRESSION:gl 
										VARIABLE:gl 
												NAME:gl
												IGNORED:
								KEYWORD:, 
								EXPRESSION:"shaders /shader2.fs" 
										VARIABLE:"shaders 
												NAME:"shaders
												IGNORED:
										OPERATOR:/
										VARIABLE:shader2.fs" 
												NAME:shader2.fs"
												IGNORED:
								KEYWORD:, 
								EXPRESSION:"shaders /shader2.vs" 
										VARIABLE:"shaders 
												NAME:"shaders
												IGNORED:
										OPERATOR:/
										VARIABLE:shader2.vs" 
												NAME:shader2.vs"
												IGNORED:
						KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> vertexPositionAttribute   = gl. getAttribLocation ( shaderProgram , "aVertexPosition"  )
NAME:vertexPositionAttribute 
		NAME:vertexPositionAttribute
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getAttribLocation ( shaderProgram , "aVertexPosition"  )
		OPENGL_CALL:gl. getAttribLocation ( shaderProgram , "aVertexPosition"  )
				KEYWORD:gl.
				NAME:getAttribLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "aVertexPosition" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"aVertexPosition" 
								VARIABLE:"aVertexPosition" 
										NAME:"aVertexPosition"
										IGNORED:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enableVertexAttribArray ( vertexPositionAttribute  )
OPENGL_CALL:gl. enableVertexAttribArray ( vertexPositionAttribute  )
		KEYWORD:gl.
		NAME:enableVertexAttribArray
		KEYWORD:(
		SEQUENCE:vertexPositionAttribute 
				EXPRESSION:vertexPositionAttribute 
						VARIABLE:vertexPositionAttribute 
								NAME:vertexPositionAttribute
								IGNORED:
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> shaderProgram.textureCoordAttribute   = gl. getAttribLocation ( shaderProgram , "aTextureCoord"  )
NAME:shaderProgram.textureCoordAttribute 
		NAME:shaderProgram.textureCoordAttribute
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getAttribLocation ( shaderProgram , "aTextureCoord"  )
		OPENGL_CALL:gl. getAttribLocation ( shaderProgram , "aTextureCoord"  )
				KEYWORD:gl.
				NAME:getAttribLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "aTextureCoord" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"aTextureCoord" 
								VARIABLE:"aTextureCoord" 
										NAME:"aTextureCoord"
										IGNORED:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enableVertexAttribArray ( textureCoordAttribute  )
OPENGL_CALL:gl. enableVertexAttribArray ( textureCoordAttribute  )
		KEYWORD:gl.
		NAME:enableVertexAttribArray
		KEYWORD:(
		SEQUENCE:textureCoordAttribute 
				EXPRESSION:textureCoordAttribute 
						VARIABLE:textureCoordAttribute 
								NAME:textureCoordAttribute
								IGNORED:
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pMatrixUniform   = gl. getUniformLocation ( shaderProgram , "uPMatrix"  )
NAME:pMatrixUniform 
		NAME:pMatrixUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uPMatrix"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uPMatrix"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uPMatrix" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uPMatrix" 
								VARIABLE:"uPMatrix" 
										NAME:"uPMatrix"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrixUniform   = gl. getUniformLocation ( shaderProgram , "uMVMatrix"  )
NAME:mvMatrixUniform 
		NAME:mvMatrixUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uMVMatrix"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uMVMatrix"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uMVMatrix" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uMVMatrix" 
								VARIABLE:"uMVMatrix" 
										NAME:"uMVMatrix"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> samplerUniform   = gl. getUniformLocation ( shaderProgram , "uSampler"  )
NAME:samplerUniform 
		NAME:samplerUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uSampler"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uSampler"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uSampler" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uSampler" 
								VARIABLE:"uSampler" 
										NAME:"uSampler"
										IGNORED:
				KEYWORD:)


[METHOD_DECLARATION] -------> , setMatrixUniforms : function ( gl  )
KEYWORD:,
NAME:setMatrixUniforms
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniformMatrix4fv ( pMatrixUniform , false , pMatrix  )
OPENGL_CALL:gl. uniformMatrix4fv ( pMatrixUniform , false , pMatrix  )
		KEYWORD:gl.
		NAME:uniformMatrix4fv
		KEYWORD:(
		SEQUENCE:pMatrixUniform , false , pMatrix 
				EXPRESSION:pMatrixUniform 
						VARIABLE:pMatrixUniform 
								NAME:pMatrixUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:pMatrix 
						VARIABLE:pMatrix 
								NAME:pMatrix
								IGNORED:
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniformMatrix4fv ( mvMatrixUniform , false , mvMatrix  )
OPENGL_CALL:gl. uniformMatrix4fv ( mvMatrixUniform , false , mvMatrix  )
		KEYWORD:gl.
		NAME:uniformMatrix4fv
		KEYWORD:(
		SEQUENCE:mvMatrixUniform , false , mvMatrix 
				EXPRESSION:mvMatrixUniform 
						VARIABLE:mvMatrixUniform 
								NAME:mvMatrixUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:mvMatrix 
						VARIABLE:mvMatrix 
								NAME:mvMatrix
								IGNORED:
		KEYWORD:)


[METHOD_DECLARATION] -------> , initBuffers : function ( gl  )
KEYWORD:,
NAME:initBuffers
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexPositionBuffer [ 0 ]  = gl. createBuffer (  )
NAME:cubeVertexPositionBuffer [ 0 ]
		NAME:cubeVertexPositionBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, cubeVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:cubeVertexPositionBuffer [ 0 ]
						VARIABLE:cubeVertexPositionBuffer [ 0 ]
								NAME:cubeVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var vertices  = [ -1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,1.0,1.0,-1.0,1.0,1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,-1.0,1.0,-1.0,-1.0,-1.0,1.0,-1.0,-1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,-1.0,1.0,-1.0,1.0,-1.0,-1.0,1.0,1.0,-1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,1.0,1.0,-1.0,1.0,-1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,-1.0,1.0,-1.0 ]
VARIABLE:var vertices 
		KEYWORD:var
		NAME:vertices 
				NAME:vertices
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ -1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,1.0,1.0,-1.0,1.0,1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,-1.0,1.0,-1.0,-1.0,-1.0,1.0,-1.0,-1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,-1.0,1.0,-1.0,1.0,-1.0,-1.0,1.0,1.0,-1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,1.0,1.0,-1.0,1.0,-1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,-1.0,1.0,-1.0 ]
		KEYWORD:[
		SEQUENCE:-1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,1.0,1.0,-1.0,1.0,1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,-1.0,1.0,-1.0,-1.0,-1.0,1.0,-1.0,-1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,-1.0,1.0,-1.0,1.0,-1.0,-1.0,1.0,1.0,-1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,1.0,1.0,-1.0,1.0,-1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,-1.0,1.0,-1.0
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( vertices  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( vertices  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( vertices  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( vertices  )
						NEW_STATEMENT:new  Float32Array  ( vertices  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( vertices  )
										KEYWORD:(
										SEQUENCE:vertices 
												EXPRESSION:vertices 
														VARIABLE:vertices 
																NAME:vertices
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexPositionBuffer [ 1 ]  = 3
NAME:cubeVertexPositionBuffer [ 1 ]
		NAME:cubeVertexPositionBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:3
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexPositionBuffer [ 2 ]  = 24
NAME:cubeVertexPositionBuffer [ 2 ]
		NAME:cubeVertexPositionBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:24
		VALUE:24


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexTextureCoordBuffer [ 0 ]  = gl. createBuffer (  )
NAME:cubeVertexTextureCoordBuffer [ 0 ]
		NAME:cubeVertexTextureCoordBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexTextureCoordBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexTextureCoordBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, cubeVertexTextureCoordBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:cubeVertexTextureCoordBuffer [ 0 ]
						VARIABLE:cubeVertexTextureCoordBuffer [ 0 ]
								NAME:cubeVertexTextureCoordBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var textureCoords  = [ -1.0,-1.0,2.0,-1.0,2.0,2.0,-1.0,2.0,2.0,-1.0,2.0,2.0,-1.0,2.0,-1.0,-1.0,-1.0,2.0,-1.0,-1.0,2.0,-1.0,2.0,2.0,2.0,2.0,-1.0,2.0,-1.0,-1.0,2.0,-1.0,2.0,-1.0,2.0,2.0,-1.0,2.0,-1.0,-1.0,-1.0,-1.0,2.0,-1.0,2.0,2.0,-1.0,2.0 ]
VARIABLE:var textureCoords 
		KEYWORD:var
		NAME:textureCoords 
				NAME:textureCoords
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ -1.0,-1.0,2.0,-1.0,2.0,2.0,-1.0,2.0,2.0,-1.0,2.0,2.0,-1.0,2.0,-1.0,-1.0,-1.0,2.0,-1.0,-1.0,2.0,-1.0,2.0,2.0,2.0,2.0,-1.0,2.0,-1.0,-1.0,2.0,-1.0,2.0,-1.0,2.0,2.0,-1.0,2.0,-1.0,-1.0,-1.0,-1.0,2.0,-1.0,2.0,2.0,-1.0,2.0 ]
		KEYWORD:[
		SEQUENCE:-1.0,-1.0,2.0,-1.0,2.0,2.0,-1.0,2.0,2.0,-1.0,2.0,2.0,-1.0,2.0,-1.0,-1.0,-1.0,2.0,-1.0,-1.0,2.0,-1.0,2.0,2.0,2.0,2.0,-1.0,2.0,-1.0,-1.0,2.0,-1.0,2.0,-1.0,2.0,2.0,-1.0,2.0,-1.0,-1.0,-1.0,-1.0,2.0,-1.0,2.0,2.0,-1.0,2.0
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( textureCoords  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( textureCoords  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( textureCoords  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( textureCoords  )
						NEW_STATEMENT:new  Float32Array  ( textureCoords  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( textureCoords  )
										KEYWORD:(
										SEQUENCE:textureCoords 
												EXPRESSION:textureCoords 
														VARIABLE:textureCoords 
																NAME:textureCoords
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexTextureCoordBuffer [ 1 ]  = 2
NAME:cubeVertexTextureCoordBuffer [ 1 ]
		NAME:cubeVertexTextureCoordBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:2
		VALUE:2


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexTextureCoordBuffer [ 2 ]  = 24
NAME:cubeVertexTextureCoordBuffer [ 2 ]
		NAME:cubeVertexTextureCoordBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:24
		VALUE:24


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexIndexBuffer [ 0 ]  = gl. createBuffer (  )
NAME:cubeVertexIndexBuffer [ 0 ]
		NAME:cubeVertexIndexBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, cubeVertexIndexBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, cubeVertexIndexBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ELEMENT_ARRAY_BUFFER, cubeVertexIndexBuffer [ 0 ]
				EXPRESSION:gl. ELEMENT_ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ELEMENT_ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ELEMENT_ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:cubeVertexIndexBuffer [ 0 ]
						VARIABLE:cubeVertexIndexBuffer [ 0 ]
								NAME:cubeVertexIndexBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cubeVertexIndices  = [ 0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23 ]
VARIABLE:var cubeVertexIndices 
		KEYWORD:var
		NAME:cubeVertexIndices 
				NAME:cubeVertexIndices
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ 0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23 ]
		KEYWORD:[
		SEQUENCE:0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23
				EXPRESSION:0
						VALUE:0
				KEYWORD:,
				EXPRESSION:1
						VALUE:1
				KEYWORD:,
				EXPRESSION:2
						VALUE:2
				KEYWORD:,
				EXPRESSION:0
						VALUE:0
				KEYWORD:,
				EXPRESSION:2
						VALUE:2
				KEYWORD:,
				EXPRESSION:3
						VALUE:3
				KEYWORD:,
				EXPRESSION:4
						VALUE:4
				KEYWORD:,
				EXPRESSION:5
						VALUE:5
				KEYWORD:,
				EXPRESSION:6
						VALUE:6
				KEYWORD:,
				EXPRESSION:4
						VALUE:4
				KEYWORD:,
				EXPRESSION:6
						VALUE:6
				KEYWORD:,
				EXPRESSION:7
						VALUE:7
				KEYWORD:,
				EXPRESSION:8
						VALUE:8
				KEYWORD:,
				EXPRESSION:9
						VALUE:9
				KEYWORD:,
				EXPRESSION:10
						VALUE:10
				KEYWORD:,
				EXPRESSION:8
						VALUE:8
				KEYWORD:,
				EXPRESSION:10
						VALUE:10
				KEYWORD:,
				EXPRESSION:11
						VALUE:11
				KEYWORD:,
				EXPRESSION:12
						VALUE:12
				KEYWORD:,
				EXPRESSION:13
						VALUE:13
				KEYWORD:,
				EXPRESSION:14
						VALUE:14
				KEYWORD:,
				EXPRESSION:12
						VALUE:12
				KEYWORD:,
				EXPRESSION:14
						VALUE:14
				KEYWORD:,
				EXPRESSION:15
						VALUE:15
				KEYWORD:,
				EXPRESSION:16
						VALUE:16
				KEYWORD:,
				EXPRESSION:17
						VALUE:17
				KEYWORD:,
				EXPRESSION:18
						VALUE:18
				KEYWORD:,
				EXPRESSION:16
						VALUE:16
				KEYWORD:,
				EXPRESSION:18
						VALUE:18
				KEYWORD:,
				EXPRESSION:19
						VALUE:19
				KEYWORD:,
				EXPRESSION:20
						VALUE:20
				KEYWORD:,
				EXPRESSION:21
						VALUE:21
				KEYWORD:,
				EXPRESSION:22
						VALUE:22
				KEYWORD:,
				EXPRESSION:20
						VALUE:20
				KEYWORD:,
				EXPRESSION:22
						VALUE:22
				KEYWORD:,
				EXPRESSION:23
						VALUE:23
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ELEMENT_ARRAY_BUFFER, new  Uint16Array  ( cubeVertexIndices  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ELEMENT_ARRAY_BUFFER, new  Uint16Array  ( cubeVertexIndices  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ELEMENT_ARRAY_BUFFER, new  Uint16Array  ( cubeVertexIndices  ), gl. STATIC_DRAW
				EXPRESSION:gl. ELEMENT_ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ELEMENT_ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ELEMENT_ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Uint16Array  ( cubeVertexIndices  )
						NEW_STATEMENT:new  Uint16Array  ( cubeVertexIndices  )
								KEYWORD:new 
								VARIABLE:Uint16Array 
										NAME:Uint16Array
										IGNORED:
								COMPOSITE:( cubeVertexIndices  )
										KEYWORD:(
										SEQUENCE:cubeVertexIndices 
												EXPRESSION:cubeVertexIndices 
														VARIABLE:cubeVertexIndices 
																NAME:cubeVertexIndices
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexIndexBuffer [ 1 ]  = 1
NAME:cubeVertexIndexBuffer [ 1 ]
		NAME:cubeVertexIndexBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:1
		VALUE:1


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexIndexBuffer [ 2 ]  = 36
NAME:cubeVertexIndexBuffer [ 2 ]
		NAME:cubeVertexIndexBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:36
		VALUE:36


[METHOD_DECLARATION] -------> , initTexture : function ( gl  )
KEYWORD:,
NAME:initTexture
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[FOR, ASSIGNMENT, LINE_OF_CODE] -------> for ( var i  = 0 ; i  < 3 ; i  ++  )
KEYWORD:for
KEYWORD:(
COMPOSITE:var i  = 0
		VARIABLE:var i 
				KEYWORD:var
				NAME:i 
						NAME:i
						IGNORED:
		KEYWORD:=
		EXPRESSION:0
				VALUE:0
KEYWORD:;
VALUE:i 
		VALUE:i
		IGNORED:
KEYWORD:<
EXPRESSION:3
		VALUE:3
KEYWORD:;
SEQUENCE:i  ++ 
		COMPOSITE:i  ++ 
				VARIABLE:i 
						VARIABLE:i
						IGNORED:
				KEYWORD:++
				EXPRESSION:
						IGNORED:
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> textures [ i  ]  = gl. createTexture (  )
NAME:textures [ i  ]
		NAME:textures
		COMPOSITE:[ i  ]
				KEYWORD:[
				EXPRESSION:i 
						NAME:i 
								NAME:i
								IGNORED:
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createTexture (  )
		OPENGL_CALL:gl. createTexture (  )
				KEYWORD:gl.
				NAME:createTexture
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var tex  = new  Image  (  )
VARIABLE:var tex 
		KEYWORD:var
		NAME:tex 
				NAME:tex
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Image  (  )
		KEYWORD:new 
		TYPE:Image 
				TYPE:Image
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tex.onload   =  function  (  )
NAME:tex.onload 
		NAME:tex.onload
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION: function  (  )
		CALL: function  (  )
				IGNORED:
				SEQUENCE:function  (  )
						COMPOSITE:function  (  )
								COMPOSITE:function 
										NAME:function
										IGNORED:
								KEYWORD:(
								SEQUENCE:
								KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindTexture ( gl. TEXTURE_2D, textures [ 0 ] )
OPENGL_CALL:gl. bindTexture ( gl. TEXTURE_2D, textures [ 0 ] )
		KEYWORD:gl.
		NAME:bindTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, textures [ 0 ]
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:textures [ 0 ]
						VARIABLE:textures [ 0 ]
								NAME:textures
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texImage2D ( gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex  )
OPENGL_CALL:gl. texImage2D ( gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex  )
		KEYWORD:gl.
		NAME:texImage2D
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex 
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:gl. RGB
						OPENGL_CONSTANT:gl. RGB
								KEYWORD:gl.
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:gl. RGB
						OPENGL_CONSTANT:gl. RGB
								KEYWORD:gl.
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:gl. UNSIGNED_BYTE
						OPENGL_CONSTANT:gl. UNSIGNED_BYTE
								KEYWORD:gl.
								NAME:UNSIGNED_BYTE
				KEYWORD:, 
				EXPRESSION:tex 
						VARIABLE:tex 
								NAME:tex
								IGNORED:
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_MAG_FILTER
						OPENGL_CONSTANT:gl. TEXTURE_MAG_FILTER
								KEYWORD:gl.
								NAME:TEXTURE_MAG_FILTER
				KEYWORD:, 
				EXPRESSION:gl. LINEAR
						OPENGL_CONSTANT:gl. LINEAR
								KEYWORD:gl.
								NAME:LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_MIN_FILTER
						OPENGL_CONSTANT:gl. TEXTURE_MIN_FILTER
								KEYWORD:gl.
								NAME:TEXTURE_MIN_FILTER
				KEYWORD:, 
				EXPRESSION:gl. LINEAR_MIPMAP_LINEAR
						OPENGL_CONSTANT:gl. LINEAR_MIPMAP_LINEAR
								KEYWORD:gl.
								NAME:LINEAR_MIPMAP_LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_S, gl. REPEAT )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_S, gl. REPEAT )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_WRAP_S, gl. REPEAT
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_WRAP_S
						OPENGL_CONSTANT:gl. TEXTURE_WRAP_S
								KEYWORD:gl.
								NAME:TEXTURE_WRAP_S
				KEYWORD:, 
				EXPRESSION:gl. REPEAT
						OPENGL_CONSTANT:gl. REPEAT
								KEYWORD:gl.
								NAME:REPEAT
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_T, gl. REPEAT )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_T, gl. REPEAT )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_WRAP_T, gl. REPEAT
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_WRAP_T
						OPENGL_CONSTANT:gl. TEXTURE_WRAP_T
								KEYWORD:gl.
								NAME:TEXTURE_WRAP_T
				KEYWORD:, 
				EXPRESSION:gl. REPEAT
						OPENGL_CONSTANT:gl. REPEAT
								KEYWORD:gl.
								NAME:REPEAT
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. generateMipmap ( gl. TEXTURE_2D )
OPENGL_CALL:gl. generateMipmap ( gl. TEXTURE_2D )
		KEYWORD:gl.
		NAME:generateMipmap
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindTexture ( gl. TEXTURE_2D, textures [ 1 ] )
OPENGL_CALL:gl. bindTexture ( gl. TEXTURE_2D, textures [ 1 ] )
		KEYWORD:gl.
		NAME:bindTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, textures [ 1 ]
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:textures [ 1 ]
						VARIABLE:textures [ 1 ]
								NAME:textures
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texImage2D ( gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex  )
OPENGL_CALL:gl. texImage2D ( gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex  )
		KEYWORD:gl.
		NAME:texImage2D
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex 
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:gl. RGB
						OPENGL_CONSTANT:gl. RGB
								KEYWORD:gl.
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:gl. RGB
						OPENGL_CONSTANT:gl. RGB
								KEYWORD:gl.
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:gl. UNSIGNED_BYTE
						OPENGL_CONSTANT:gl. UNSIGNED_BYTE
								KEYWORD:gl.
								NAME:UNSIGNED_BYTE
				KEYWORD:, 
				EXPRESSION:tex 
						VARIABLE:tex 
								NAME:tex
								IGNORED:
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_MAG_FILTER
						OPENGL_CONSTANT:gl. TEXTURE_MAG_FILTER
								KEYWORD:gl.
								NAME:TEXTURE_MAG_FILTER
				KEYWORD:, 
				EXPRESSION:gl. LINEAR
						OPENGL_CONSTANT:gl. LINEAR
								KEYWORD:gl.
								NAME:LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_MIN_FILTER
						OPENGL_CONSTANT:gl. TEXTURE_MIN_FILTER
								KEYWORD:gl.
								NAME:TEXTURE_MIN_FILTER
				KEYWORD:, 
				EXPRESSION:gl. LINEAR_MIPMAP_LINEAR
						OPENGL_CONSTANT:gl. LINEAR_MIPMAP_LINEAR
								KEYWORD:gl.
								NAME:LINEAR_MIPMAP_LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_S, gl. MIRRORED_REPEAT )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_S, gl. MIRRORED_REPEAT )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_WRAP_S, gl. MIRRORED_REPEAT
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_WRAP_S
						OPENGL_CONSTANT:gl. TEXTURE_WRAP_S
								KEYWORD:gl.
								NAME:TEXTURE_WRAP_S
				KEYWORD:, 
				EXPRESSION:gl. MIRRORED_REPEAT
						OPENGL_CONSTANT:gl. MIRRORED_REPEAT
								KEYWORD:gl.
								NAME:MIRRORED_REPEAT
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_T, gl. MIRRORED_REPEAT )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_T, gl. MIRRORED_REPEAT )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_WRAP_T, gl. MIRRORED_REPEAT
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_WRAP_T
						OPENGL_CONSTANT:gl. TEXTURE_WRAP_T
								KEYWORD:gl.
								NAME:TEXTURE_WRAP_T
				KEYWORD:, 
				EXPRESSION:gl. MIRRORED_REPEAT
						OPENGL_CONSTANT:gl. MIRRORED_REPEAT
								KEYWORD:gl.
								NAME:MIRRORED_REPEAT
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. generateMipmap ( gl. TEXTURE_2D )
OPENGL_CALL:gl. generateMipmap ( gl. TEXTURE_2D )
		KEYWORD:gl.
		NAME:generateMipmap
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindTexture ( gl. TEXTURE_2D, textures [ 2 ] )
OPENGL_CALL:gl. bindTexture ( gl. TEXTURE_2D, textures [ 2 ] )
		KEYWORD:gl.
		NAME:bindTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, textures [ 2 ]
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:textures [ 2 ]
						VARIABLE:textures [ 2 ]
								NAME:textures
								COMPOSITE:[ 2 ]
										KEYWORD:[
										EXPRESSION:2
												VALUE:2
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texImage2D ( gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex  )
OPENGL_CALL:gl. texImage2D ( gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex  )
		KEYWORD:gl.
		NAME:texImage2D
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex 
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:gl. RGB
						OPENGL_CONSTANT:gl. RGB
								KEYWORD:gl.
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:gl. RGB
						OPENGL_CONSTANT:gl. RGB
								KEYWORD:gl.
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:gl. UNSIGNED_BYTE
						OPENGL_CONSTANT:gl. UNSIGNED_BYTE
								KEYWORD:gl.
								NAME:UNSIGNED_BYTE
				KEYWORD:, 
				EXPRESSION:tex 
						VARIABLE:tex 
								NAME:tex
								IGNORED:
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_MAG_FILTER
						OPENGL_CONSTANT:gl. TEXTURE_MAG_FILTER
								KEYWORD:gl.
								NAME:TEXTURE_MAG_FILTER
				KEYWORD:, 
				EXPRESSION:gl. LINEAR
						OPENGL_CONSTANT:gl. LINEAR
								KEYWORD:gl.
								NAME:LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_MIN_FILTER
						OPENGL_CONSTANT:gl. TEXTURE_MIN_FILTER
								KEYWORD:gl.
								NAME:TEXTURE_MIN_FILTER
				KEYWORD:, 
				EXPRESSION:gl. LINEAR_MIPMAP_LINEAR
						OPENGL_CONSTANT:gl. LINEAR_MIPMAP_LINEAR
								KEYWORD:gl.
								NAME:LINEAR_MIPMAP_LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_S, gl. CLAMP_TO_EDGE )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_S, gl. CLAMP_TO_EDGE )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_WRAP_S, gl. CLAMP_TO_EDGE
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_WRAP_S
						OPENGL_CONSTANT:gl. TEXTURE_WRAP_S
								KEYWORD:gl.
								NAME:TEXTURE_WRAP_S
				KEYWORD:, 
				EXPRESSION:gl. CLAMP_TO_EDGE
						OPENGL_CONSTANT:gl. CLAMP_TO_EDGE
								KEYWORD:gl.
								NAME:CLAMP_TO_EDGE
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_T, gl. CLAMP_TO_EDGE )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_T, gl. CLAMP_TO_EDGE )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_WRAP_T, gl. CLAMP_TO_EDGE
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_WRAP_T
						OPENGL_CONSTANT:gl. TEXTURE_WRAP_T
								KEYWORD:gl.
								NAME:TEXTURE_WRAP_T
				KEYWORD:, 
				EXPRESSION:gl. CLAMP_TO_EDGE
						OPENGL_CONSTANT:gl. CLAMP_TO_EDGE
								KEYWORD:gl.
								NAME:CLAMP_TO_EDGE
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. generateMipmap ( gl. TEXTURE_2D )
OPENGL_CALL:gl. generateMipmap ( gl. TEXTURE_2D )
		KEYWORD:gl.
		NAME:generateMipmap
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindTexture ( gl. TEXTURE_2D, null  )
OPENGL_CALL:gl. bindTexture ( gl. TEXTURE_2D, null  )
		KEYWORD:gl.
		NAME:bindTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, null 
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:null 
						VARIABLE:null 
								NAME:null
								IGNORED:
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tex.src   = "images /roof.gif" 
NAME:tex.src 
		NAME:tex.src
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:"images /roof.gif" 
		VARIABLE:"images 
				NAME:"images
				IGNORED:
		OPERATOR:/
		VARIABLE:roof.gif" 
				NAME:roof.gif"
				IGNORED:


[METHOD_DECLARATION] -------> , drawScene : function ( gl  )
KEYWORD:,
NAME:drawScene
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. clearColor ( 0.0, 0.0, 0.0, 1.0 )
OPENGL_CALL:gl. clearColor ( 0.0, 0.0, 0.0, 1.0 )
		KEYWORD:gl.
		NAME:clearColor
		KEYWORD:(
		SEQUENCE:0.0, 0.0, 0.0, 1.0
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:, 
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:, 
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:, 
				EXPRESSION:1.0
						VALUE:1.0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enable ( gl. DEPTH_TEST )
OPENGL_CALL:gl. enable ( gl. DEPTH_TEST )
		KEYWORD:gl.
		NAME:enable
		KEYWORD:(
		SEQUENCE:gl. DEPTH_TEST
				EXPRESSION:gl. DEPTH_TEST
						OPENGL_CONSTANT:gl. DEPTH_TEST
								KEYWORD:gl.
								NAME:DEPTH_TEST
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. cullFace ( gl. BACK )
OPENGL_CALL:gl. cullFace ( gl. BACK )
		KEYWORD:gl.
		NAME:cullFace
		KEYWORD:(
		SEQUENCE:gl. BACK
				EXPRESSION:gl. BACK
						OPENGL_CONSTANT:gl. BACK
								KEYWORD:gl.
								NAME:BACK
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enable ( gl. CULL_FACE )
OPENGL_CALL:gl. enable ( gl. CULL_FACE )
		KEYWORD:gl.
		NAME:enable
		KEYWORD:(
		SEQUENCE:gl. CULL_FACE
				EXPRESSION:gl. CULL_FACE
						OPENGL_CONSTANT:gl. CULL_FACE
								KEYWORD:gl.
								NAME:CULL_FACE
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.handleKeys  (  )
CALL: this.handleKeys  (  )
		IGNORED:
		SEQUENCE:this.handleKeys  (  )
				COMPOSITE:this.handleKeys  (  )
						COMPOSITE:this.handleKeys 
								NAME:this.handleKeys
								IGNORED:
						KEYWORD:(
						SEQUENCE:
						KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. viewport ( 0, 0, 500, 500 )
OPENGL_CALL:gl. viewport ( 0, 0, 500, 500 )
		KEYWORD:gl.
		NAME:viewport
		KEYWORD:(
		SEQUENCE:0, 0, 500, 500
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:500
						VALUE:500
				KEYWORD:, 
				EXPRESSION:500
						VALUE:500
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. clear ( gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT )
OPENGL_CALL:gl. clear ( gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT )
		KEYWORD:gl.
		NAME:clear
		KEYWORD:(
		SEQUENCE:gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT
				EXPRESSION:gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT
						OPENGL_CONSTANT:gl. COLOR_BUFFER_BIT
								KEYWORD:gl.
								NAME:COLOR_BUFFER_BIT
						OPERATOR:|
						OPENGL_CONSTANT:gl. DEPTH_BUFFER_BIT
								KEYWORD:gl.
								NAME:DEPTH_BUFFER_BIT
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cx  =  Math.cos  ( rAnglex  )
VARIABLE:var cx 
		KEYWORD:var
		NAME:cx 
				NAME:cx
				IGNORED:
KEYWORD:=
CALL: Math.cos  ( rAnglex  )
		IGNORED:
		SEQUENCE:Math.cos  ( rAnglex  )
				COMPOSITE:Math.cos  ( rAnglex  )
						COMPOSITE:Math.cos 
								NAME:Math.cos
								IGNORED:
						KEYWORD:(
						SEQUENCE:rAnglex 
								EXPRESSION:rAnglex 
										VARIABLE:rAnglex 
												NAME:rAnglex
												IGNORED:
						KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var sx  =  Math.sin  ( rAnglex  )
VARIABLE:var sx 
		KEYWORD:var
		NAME:sx 
				NAME:sx
				IGNORED:
KEYWORD:=
CALL: Math.sin  ( rAnglex  )
		IGNORED:
		SEQUENCE:Math.sin  ( rAnglex  )
				COMPOSITE:Math.sin  ( rAnglex  )
						COMPOSITE:Math.sin 
								NAME:Math.sin
								IGNORED:
						KEYWORD:(
						SEQUENCE:rAnglex 
								EXPRESSION:rAnglex 
										VARIABLE:rAnglex 
												NAME:rAnglex
												IGNORED:
						KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cy  =  Math.cos  ( rAngley  )
VARIABLE:var cy 
		KEYWORD:var
		NAME:cy 
				NAME:cy
				IGNORED:
KEYWORD:=
CALL: Math.cos  ( rAngley  )
		IGNORED:
		SEQUENCE:Math.cos  ( rAngley  )
				COMPOSITE:Math.cos  ( rAngley  )
						COMPOSITE:Math.cos 
								NAME:Math.cos
								IGNORED:
						KEYWORD:(
						SEQUENCE:rAngley 
								EXPRESSION:rAngley 
										VARIABLE:rAngley 
												NAME:rAngley
												IGNORED:
						KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var sy  =  Math.sin  ( rAngley  )
VARIABLE:var sy 
		KEYWORD:var
		NAME:sy 
				NAME:sy
				IGNORED:
KEYWORD:=
CALL: Math.sin  ( rAngley  )
		IGNORED:
		SEQUENCE:Math.sin  ( rAngley  )
				COMPOSITE:Math.sin  ( rAngley  )
						COMPOSITE:Math.sin 
								NAME:Math.sin
								IGNORED:
						KEYWORD:(
						SEQUENCE:rAngley 
								EXPRESSION:rAngley 
										VARIABLE:rAngley 
												NAME:rAngley
												IGNORED:
						KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pMatrix   = new  Float32Array  ( [ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ] )
NAME:pMatrix 
		NAME:pMatrix
		IGNORED:
IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Float32Array  ( [ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ] )
		KEYWORD:new 
		TYPE:Float32Array 
				TYPE:Float32Array
				IGNORED:
		COMPOSITE:( [ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ] )
				KEYWORD:(
				SEQUENCE:[ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ]
						ARRAY_CONTENT:[ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ]
								KEYWORD:[
								SEQUENCE:2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0
										EXPRESSION:2.4142136573791504
												VALUE:2.4142136573791504
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:2.4142136573791504
												VALUE:2.4142136573791504
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:-1.0020020008087158
												VALUE:-1.0020020008087158
										KEYWORD:,
										EXPRESSION:-1
												VALUE:-1
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:-0.20020020008087158
												VALUE:-0.20020020008087158
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
								KEYWORD:]
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix   = new  Float32Array  ( [ cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,0,0,zoom ,1 ] )
NAME:mvMatrix 
		NAME:mvMatrix
		IGNORED:
IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Float32Array  ( [ cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,0,0,zoom ,1 ] )
		KEYWORD:new 
		TYPE:Float32Array 
				TYPE:Float32Array
				IGNORED:
		COMPOSITE:( [ cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,0,0,zoom ,1 ] )
				KEYWORD:(
				SEQUENCE:[ cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,0,0,zoom ,1 ]
						ARRAY_CONTENT:[ cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,0,0,zoom ,1 ]
								KEYWORD:[
								SEQUENCE:cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,0,0,zoom ,1
										EXPRESSION:cy 
												VARIABLE:cy 
														NAME:cy
														IGNORED:
										KEYWORD:,
										EXPRESSION:sx *sy 
												VARIABLE:sx 
														NAME:sx
														IGNORED:
												OPERATOR:*
												VARIABLE:sy 
														NAME:sy
														IGNORED:
										KEYWORD:,
										EXPRESSION:-cx*sy 
												VALUE:-cx
												OPERATOR:*
												VARIABLE:sy 
														NAME:sy
														IGNORED:
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:cx 
												VARIABLE:cx 
														NAME:cx
														IGNORED:
										KEYWORD:,
										EXPRESSION:sx 
												VARIABLE:sx 
														NAME:sx
														IGNORED:
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:sy 
												VARIABLE:sy 
														NAME:sy
														IGNORED:
										KEYWORD:,
										EXPRESSION:-cy*sx 
												VALUE:-cy
												OPERATOR:*
												VARIABLE:sx 
														NAME:sx
														IGNORED:
										KEYWORD:,
										EXPRESSION:cx *cy 
												VARIABLE:cx 
														NAME:cx
														IGNORED:
												OPERATOR:*
												VARIABLE:cy 
														NAME:cy
														IGNORED:
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:zoom 
												VARIABLE:zoom 
														NAME:zoom
														IGNORED:
										KEYWORD:,
										EXPRESSION:1
												VALUE:1
								KEYWORD:]
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. frontFace ( gl. CCW )
OPENGL_CALL:gl. frontFace ( gl. CCW )
		KEYWORD:gl.
		NAME:frontFace
		KEYWORD:(
		SEQUENCE:gl. CCW
				EXPRESSION:gl. CCW
						OPENGL_CONSTANT:gl. CCW
								KEYWORD:gl.
								NAME:CCW
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, cubeVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:cubeVertexPositionBuffer [ 0 ]
						VARIABLE:cubeVertexPositionBuffer [ 0 ]
								NAME:cubeVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( vertexPositionAttribute , cubeVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( vertexPositionAttribute , cubeVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:vertexPositionAttribute , cubeVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:vertexPositionAttribute 
						VARIABLE:vertexPositionAttribute 
								NAME:vertexPositionAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:cubeVertexPositionBuffer [ 1 ]
						VARIABLE:cubeVertexPositionBuffer [ 1 ]
								NAME:cubeVertexPositionBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexTextureCoordBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexTextureCoordBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, cubeVertexTextureCoordBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:cubeVertexTextureCoordBuffer [ 0 ]
						VARIABLE:cubeVertexTextureCoordBuffer [ 0 ]
								NAME:cubeVertexTextureCoordBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( textureCoordAttribute , cubeVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( textureCoordAttribute , cubeVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:textureCoordAttribute , cubeVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:textureCoordAttribute 
						VARIABLE:textureCoordAttribute 
								NAME:textureCoordAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:cubeVertexTextureCoordBuffer [ 1 ]
						VARIABLE:cubeVertexTextureCoordBuffer [ 1 ]
								NAME:cubeVertexTextureCoordBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. activeTexture ( gl. TEXTURE0 )
OPENGL_CALL:gl. activeTexture ( gl. TEXTURE0 )
		KEYWORD:gl.
		NAME:activeTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE0
				EXPRESSION:gl. TEXTURE0
						OPENGL_CONSTANT:gl. TEXTURE0
								KEYWORD:gl.
								NAME:TEXTURE0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindTexture ( gl. TEXTURE_2D, textures [ wrapper  ] )
OPENGL_CALL:gl. bindTexture ( gl. TEXTURE_2D, textures [ wrapper  ] )
		KEYWORD:gl.
		NAME:bindTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, textures [ wrapper  ]
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:textures [ wrapper  ]
						VARIABLE:textures [ wrapper  ]
								NAME:textures
								COMPOSITE:[ wrapper  ]
										KEYWORD:[
										EXPRESSION:wrapper 
												VARIABLE:wrapper 
														NAME:wrapper
														IGNORED:
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniform1i ( samplerUniform , 0 )
OPENGL_CALL:gl. uniform1i ( samplerUniform , 0 )
		KEYWORD:gl.
		NAME:uniform1i
		KEYWORD:(
		SEQUENCE:samplerUniform , 0
				EXPRESSION:samplerUniform 
						VARIABLE:samplerUniform 
								NAME:samplerUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, cubeVertexIndexBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, cubeVertexIndexBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ELEMENT_ARRAY_BUFFER, cubeVertexIndexBuffer [ 0 ]
				EXPRESSION:gl. ELEMENT_ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ELEMENT_ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ELEMENT_ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:cubeVertexIndexBuffer [ 0 ]
						VARIABLE:cubeVertexIndexBuffer [ 0 ]
								NAME:cubeVertexIndexBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.setMatrixUniforms  ( gl  )
CALL: this.setMatrixUniforms  ( gl  )
		IGNORED:
		SEQUENCE:this.setMatrixUniforms  ( gl  )
				COMPOSITE:this.setMatrixUniforms  ( gl  )
						COMPOSITE:this.setMatrixUniforms 
								NAME:this.setMatrixUniforms
								IGNORED:
						KEYWORD:(
						SEQUENCE:gl 
								EXPRESSION:gl 
										VARIABLE:gl 
												NAME:gl
												IGNORED:
						KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. drawElements ( gl. TRIANGLES, cubeVertexIndexBuffer [ 2 ], gl. UNSIGNED_SHORT, 0 )
OPENGL_CALL:gl. drawElements ( gl. TRIANGLES, cubeVertexIndexBuffer [ 2 ], gl. UNSIGNED_SHORT, 0 )
		KEYWORD:gl.
		NAME:drawElements
		KEYWORD:(
		SEQUENCE:gl. TRIANGLES, cubeVertexIndexBuffer [ 2 ], gl. UNSIGNED_SHORT, 0
				EXPRESSION:gl. TRIANGLES
						OPENGL_CONSTANT:gl. TRIANGLES
								KEYWORD:gl.
								NAME:TRIANGLES
				KEYWORD:, 
				EXPRESSION:cubeVertexIndexBuffer [ 2 ]
						VARIABLE:cubeVertexIndexBuffer [ 2 ]
								NAME:cubeVertexIndexBuffer
								COMPOSITE:[ 2 ]
										KEYWORD:[
										EXPRESSION:2
												VALUE:2
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. UNSIGNED_SHORT
						OPENGL_CONSTANT:gl. UNSIGNED_SHORT
								KEYWORD:gl.
								NAME:UNSIGNED_SHORT
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.animate  (  )
CALL: this.animate  (  )
		IGNORED:
		SEQUENCE:this.animate  (  )
				COMPOSITE:this.animate  (  )
						COMPOSITE:this.animate 
								NAME:this.animate
								IGNORED:
						KEYWORD:(
						SEQUENCE:
						KEYWORD:)


[METHOD_DECLARATION] -------> , animate : function (  )
KEYWORD:,
NAME:animate
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var timeNow  = new  Date  (  ) . getTime  (  )
VARIABLE:var timeNow 
		KEYWORD:var
		NAME:timeNow 
				NAME:timeNow
				IGNORED:
KEYWORD:=
CALL:new  Date  (  ) . getTime  (  )
		COMPOSITE:new  Date  (  ) .
				NEW_STATEMENT:new  Date  (  )
						KEYWORD:new 
						TYPE:Date 
								TYPE:Date
								IGNORED:
						COMPOSITE:(  )
								KEYWORD:(
								SEQUENCE:
								KEYWORD:)
				KEYWORD:.
		SEQUENCE:getTime  (  )
				COMPOSITE:getTime  (  )
						COMPOSITE:getTime 
								NAME:getTime
								IGNORED:
						KEYWORD:(
						SEQUENCE:
						KEYWORD:)


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( lastTime !=0 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:lastTime !=0
		VARIABLE:lastTime 
				NAME:lastTime
				IGNORED:
		OPERATOR:!=
		VALUE:0
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var elapsed  = timeNow -lastTime 
VARIABLE:var elapsed 
		KEYWORD:var
		NAME:elapsed 
				NAME:elapsed
				IGNORED:
KEYWORD:=
EXPRESSION:timeNow -lastTime 
		VARIABLE:timeNow 
				NAME:timeNow
				IGNORED:
		OPERATOR:-
		VARIABLE:lastTime 
				NAME:lastTime
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> rAnglex  + = speedx *elapsed *0.001
NAME:rAnglex 
		NAME:rAnglex
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION:speedx *elapsed *0.001
		VARIABLE:speedx 
				NAME:speedx
				IGNORED:
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> rAngley  + = speedy *elapsed *0.001
NAME:rAngley 
		NAME:rAngley
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION:speedy *elapsed *0.001
		VARIABLE:speedy 
				NAME:speedy
				IGNORED:
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> lastTime   = timeNow 
NAME:lastTime 
		NAME:lastTime
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:timeNow 
		VARIABLE:timeNow 
				NAME:timeNow
				IGNORED:


[METHOD_DECLARATION] -------> , handleKeys : function (  )
KEYWORD:,
NAME:handleKeys
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var timeNow  = new  Date  (  ) . getTime  (  )
VARIABLE:var timeNow 
		KEYWORD:var
		NAME:timeNow 
				NAME:timeNow
				IGNORED:
KEYWORD:=
CALL:new  Date  (  ) . getTime  (  )
		COMPOSITE:new  Date  (  ) .
				NEW_STATEMENT:new  Date  (  )
						KEYWORD:new 
						TYPE:Date 
								TYPE:Date
								IGNORED:
						COMPOSITE:(  )
								KEYWORD:(
								SEQUENCE:
								KEYWORD:)
				KEYWORD:.
		SEQUENCE:getTime  (  )
				COMPOSITE:getTime  (  )
						COMPOSITE:getTime 
								NAME:getTime
								IGNORED:
						KEYWORD:(
						SEQUENCE:
						KEYWORD:)


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( lastTime2 !=0 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:lastTime2 !=0
		VARIABLE:lastTime2 
				NAME:lastTime2
				IGNORED:
		OPERATOR:!=
		VALUE:0
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var elapsed  = timeNow -lastTime2 
VARIABLE:var elapsed 
		KEYWORD:var
		NAME:elapsed 
				NAME:elapsed
				IGNORED:
KEYWORD:=
EXPRESSION:timeNow -lastTime2 
		VARIABLE:timeNow 
				NAME:timeNow
				IGNORED:
		OPERATOR:-
		VARIABLE:lastTime2 
				NAME:lastTime2
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands [ 0 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands [ 0 ]
		VARIABLE:commands [ 0 ]
				NAME:commands
				COMPOSITE:[ 0 ]
						KEYWORD:[
						EXPRESSION:0
								VALUE:0
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> zoom  + = 5*elapsed *0.001
NAME:zoom 
		NAME:zoom
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION:5*elapsed *0.001
		VALUE:5
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands [ 1 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands [ 1 ]
		VARIABLE:commands [ 1 ]
				NAME:commands
				COMPOSITE:[ 1 ]
						KEYWORD:[
						EXPRESSION:1
								VALUE:1
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> zoom  - = 5*elapsed *0.001
NAME:zoom 
		NAME:zoom
		IGNORED:
KEYWORD:-
KEYWORD:=
EXPRESSION:5*elapsed *0.001
		VALUE:5
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands [ 2 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands [ 2 ]
		VARIABLE:commands [ 2 ]
				NAME:commands
				COMPOSITE:[ 2 ]
						KEYWORD:[
						EXPRESSION:2
								VALUE:2
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> speedx  - = 2*elapsed *0.001
NAME:speedx 
		NAME:speedx
		IGNORED:
KEYWORD:-
KEYWORD:=
EXPRESSION:2*elapsed *0.001
		VALUE:2
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands [ 3 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands [ 3 ]
		VARIABLE:commands [ 3 ]
				NAME:commands
				COMPOSITE:[ 3 ]
						KEYWORD:[
						EXPRESSION:3
								VALUE:3
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> speedx  + = 2*elapsed *0.001
NAME:speedx 
		NAME:speedx
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION:2*elapsed *0.001
		VALUE:2
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands [ 4 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands [ 4 ]
		VARIABLE:commands [ 4 ]
				NAME:commands
				COMPOSITE:[ 4 ]
						KEYWORD:[
						EXPRESSION:4
								VALUE:4
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> speedy  - = 2*elapsed *0.001
NAME:speedy 
		NAME:speedy
		IGNORED:
KEYWORD:-
KEYWORD:=
EXPRESSION:2*elapsed *0.001
		VALUE:2
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands [ 5 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands [ 5 ]
		VARIABLE:commands [ 5 ]
				NAME:commands
				COMPOSITE:[ 5 ]
						KEYWORD:[
						EXPRESSION:5
								VALUE:5
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> speedy  + = 2*elapsed *0.001
NAME:speedy 
		NAME:speedy
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION:2*elapsed *0.001
		VALUE:2
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> lastTime2   = timeNow 
NAME:lastTime2 
		NAME:lastTime2
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:timeNow 
		VARIABLE:timeNow 
				NAME:timeNow
				IGNORED:


[METHOD_DECLARATION] -------> , setCommands : function ( e , value  )
KEYWORD:,
NAME:setCommands
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:e , value 
		VARIABLE:e 
				NAME:e
				IGNORED:
		KEYWORD:, 
		VARIABLE:value 
				NAME:value
				IGNORED:
KEYWORD:)


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==65 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==65
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:65
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 0 ]  = value 
NAME:commands [ 0 ]
		NAME:commands
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==90 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==90
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:90
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 1 ]  = value 
NAME:commands [ 1 ]
		NAME:commands
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==38 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==38
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:38
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 2 ]  = value 
NAME:commands [ 2 ]
		NAME:commands
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==40 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==40
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:40
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 3 ]  = value 
NAME:commands [ 3 ]
		NAME:commands
		COMPOSITE:[ 3 ]
				KEYWORD:[
				EXPRESSION:3
						VALUE:3
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==37 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==37
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:37
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 4 ]  = value 
NAME:commands [ 4 ]
		NAME:commands
		COMPOSITE:[ 4 ]
				KEYWORD:[
				EXPRESSION:4
						VALUE:4
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==39 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==39
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:39
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 5 ]  = value 
NAME:commands [ 5 ]
		NAME:commands
		COMPOSITE:[ 5 ]
				KEYWORD:[
				EXPRESSION:5
						VALUE:5
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[METHOD_DECLARATION] -------> , keyPressed : function ( e  )
KEYWORD:,
NAME:keyPressed
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:e 
		VARIABLE:e 
				NAME:e
				IGNORED:
KEYWORD:)


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==87 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==87
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:87
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> wrapper   = wrapper ==2 ? 0 : ( wrapper +1 )
NAME:wrapper 
		NAME:wrapper
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:wrapper ==2 ? 0 : ( wrapper +1 )
		TERNARY_OPERATOR:wrapper ==2 ? 0 : ( wrapper +1 )
				EXPRESSION:wrapper ==2
						VARIABLE:wrapper 
								NAME:wrapper
								IGNORED:
						OPERATOR:==
						VALUE:2
				KEYWORD:?
				EXPRESSION:0
						VALUE:0
				KEYWORD::
				EXPRESSION:( wrapper +1 )
						COMPOSITE:( wrapper +1 )
								KEYWORD:(
								EXPRESSION:wrapper +1
										VARIABLE:wrapper 
												NAME:wrapper
												IGNORED:
										OPERATOR:+
										VALUE:1
								KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.setCommands  ( e , true  )
CALL: this.setCommands  ( e , true  )
		IGNORED:
		SEQUENCE:this.setCommands  ( e , true  )
				COMPOSITE:this.setCommands  ( e , true  )
						COMPOSITE:this.setCommands 
								NAME:this.setCommands
								IGNORED:
						KEYWORD:(
						SEQUENCE:e , true 
								EXPRESSION:e 
										VARIABLE:e 
												NAME:e
												IGNORED:
								KEYWORD:, 
								EXPRESSION:true 
										VARIABLE:true 
												NAME:true
												IGNORED:
						KEYWORD:)


[METHOD_DECLARATION] -------> , keyReleased : function ( e  )
KEYWORD:,
NAME:keyReleased
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:e 
		VARIABLE:e 
				NAME:e
				IGNORED:
KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.setCommands  ( e , false  )
CALL: this.setCommands  ( e , false  )
		IGNORED:
		SEQUENCE:this.setCommands  ( e , false  )
				COMPOSITE:this.setCommands  ( e , false  )
						COMPOSITE:this.setCommands 
								NAME:this.setCommands
								IGNORED:
						KEYWORD:(
						SEQUENCE:e , false 
								EXPRESSION:e 
										VARIABLE:e 
												NAME:e
												IGNORED:
								KEYWORD:, 
								EXPRESSION:false 
										VARIABLE:false 
												NAME:false
												IGNORED:
						KEYWORD:)



test_sv6Drawer.js
[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var vertexPositionAttribute 
VARIABLE:var vertexPositionAttribute 
		KEYWORD:var
		NAME:vertexPositionAttribute 
				NAME:vertexPositionAttribute
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var vertexNormalAttribute 
VARIABLE:var vertexNormalAttribute 
		KEYWORD:var
		NAME:vertexNormalAttribute 
				NAME:vertexNormalAttribute
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var textureCoordAttribute 
VARIABLE:var textureCoordAttribute 
		KEYWORD:var
		NAME:textureCoordAttribute 
				NAME:textureCoordAttribute
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var pMatrixUniform 
VARIABLE:var pMatrixUniform 
		KEYWORD:var
		NAME:pMatrixUniform 
				NAME:pMatrixUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var mvMatrixUniform 
VARIABLE:var mvMatrixUniform 
		KEYWORD:var
		NAME:mvMatrixUniform 
				NAME:mvMatrixUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var nMatrixUniform 
VARIABLE:var nMatrixUniform 
		KEYWORD:var
		NAME:nMatrixUniform 
				NAME:nMatrixUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var samplerUniform 
VARIABLE:var samplerUniform 
		KEYWORD:var
		NAME:samplerUniform 
				NAME:samplerUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var ambientColorUniform 
VARIABLE:var ambientColorUniform 
		KEYWORD:var
		NAME:ambientColorUniform 
				NAME:ambientColorUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var lightingDirectionUniform 
VARIABLE:var lightingDirectionUniform 
		KEYWORD:var
		NAME:lightingDirectionUniform 
				NAME:lightingDirectionUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var directionalColorUniform 
VARIABLE:var directionalColorUniform 
		KEYWORD:var
		NAME:directionalColorUniform 
				NAME:directionalColorUniform
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cubeVertexPositionBuffer  = new  Array  (  )
VARIABLE:var cubeVertexPositionBuffer 
		KEYWORD:var
		NAME:cubeVertexPositionBuffer 
				NAME:cubeVertexPositionBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cubeVertexNormalBuffer  = new  Array  (  )
VARIABLE:var cubeVertexNormalBuffer 
		KEYWORD:var
		NAME:cubeVertexNormalBuffer 
				NAME:cubeVertexNormalBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cubeVertexIndexBuffer  = new  Array  (  )
VARIABLE:var cubeVertexIndexBuffer 
		KEYWORD:var
		NAME:cubeVertexIndexBuffer 
				NAME:cubeVertexIndexBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cubeVertexTextureCoordBuffer  = new  Array  (  )
VARIABLE:var cubeVertexTextureCoordBuffer 
		KEYWORD:var
		NAME:cubeVertexTextureCoordBuffer 
				NAME:cubeVertexTextureCoordBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var textures  = new  Array  (  )
VARIABLE:var textures 
		KEYWORD:var
		NAME:textures 
				NAME:textures
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var pMatrix 
VARIABLE:var pMatrix 
		KEYWORD:var
		NAME:pMatrix 
				NAME:pMatrix
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var mvMatrix 
VARIABLE:var mvMatrix 
		KEYWORD:var
		NAME:mvMatrix 
				NAME:mvMatrix
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var normalMatrix 
VARIABLE:var normalMatrix 
		KEYWORD:var
		NAME:normalMatrix 
				NAME:normalMatrix
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var rAnglex  = 0
VARIABLE:var rAnglex 
		KEYWORD:var
		NAME:rAnglex 
				NAME:rAnglex
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var speedx  = 0
VARIABLE:var speedx 
		KEYWORD:var
		NAME:speedx 
				NAME:speedx
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var rAngley  = 0
VARIABLE:var rAngley 
		KEYWORD:var
		NAME:rAngley 
				NAME:rAngley
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var speedy  = 0
VARIABLE:var speedy 
		KEYWORD:var
		NAME:speedy 
				NAME:speedy
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var zoom  = -8
VARIABLE:var zoom 
		KEYWORD:var
		NAME:zoom 
				NAME:zoom
				IGNORED:
KEYWORD:=
EXPRESSION:-8
		VALUE:-8


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var lastTime  = 0
VARIABLE:var lastTime 
		KEYWORD:var
		NAME:lastTime 
				NAME:lastTime
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var lastTime2  = 0
VARIABLE:var lastTime2 
		KEYWORD:var
		NAME:lastTime2 
				NAME:lastTime2
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var commands  = new  Array  (  )
VARIABLE:var commands 
		KEYWORD:var
		NAME:commands 
				NAME:commands
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[CONSTRUCTOR_DECLARATION] -------> function Test_sv6Drawer  (  )
KEYWORD:function
NAME:Test_sv6Drawer 
		NAME:Test_sv6Drawer
		IGNORED:
KEYWORD:(
METHOD_VARIABLES:
KEYWORD:)


[CLASS_DECLARATION] -------> Test_sv6Drawer . prototype =
NAME:Test_sv6Drawer
KEYWORD:.
KEYWORD:prototype
KEYWORD:=


[METHOD_DECLARATION] ------->  initShaders : function ( gl  )
IGNORED:
NAME:initShaders
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var shaderProgram  =  getShaderProgram  ( gl , "shaders /shader3.fs" , "shaders /shader3.vs"  )
VARIABLE:var shaderProgram 
		KEYWORD:var
		NAME:shaderProgram 
				NAME:shaderProgram
				IGNORED:
KEYWORD:=
CALL: getShaderProgram  ( gl , "shaders /shader3.fs" , "shaders /shader3.vs"  )
		IGNORED:
		SEQUENCE:getShaderProgram  ( gl , "shaders /shader3.fs" , "shaders /shader3.vs"  )
				COMPOSITE:getShaderProgram  ( gl , "shaders /shader3.fs" , "shaders /shader3.vs"  )
						COMPOSITE:getShaderProgram 
								NAME:getShaderProgram
								IGNORED:
						KEYWORD:(
						SEQUENCE:gl , "shaders /shader3.fs" , "shaders /shader3.vs" 
								EXPRESSION:gl 
										VARIABLE:gl 
												NAME:gl
												IGNORED:
								KEYWORD:, 
								EXPRESSION:"shaders /shader3.fs" 
										VARIABLE:"shaders 
												NAME:"shaders
												IGNORED:
										OPERATOR:/
										VARIABLE:shader3.fs" 
												NAME:shader3.fs"
												IGNORED:
								KEYWORD:, 
								EXPRESSION:"shaders /shader3.vs" 
										VARIABLE:"shaders 
												NAME:"shaders
												IGNORED:
										OPERATOR:/
										VARIABLE:shader3.vs" 
												NAME:shader3.vs"
												IGNORED:
						KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> vertexPositionAttribute   = gl. getAttribLocation ( shaderProgram , "aVertexPosition"  )
NAME:vertexPositionAttribute 
		NAME:vertexPositionAttribute
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getAttribLocation ( shaderProgram , "aVertexPosition"  )
		OPENGL_CALL:gl. getAttribLocation ( shaderProgram , "aVertexPosition"  )
				KEYWORD:gl.
				NAME:getAttribLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "aVertexPosition" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"aVertexPosition" 
								VARIABLE:"aVertexPosition" 
										NAME:"aVertexPosition"
										IGNORED:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enableVertexAttribArray ( vertexPositionAttribute  )
OPENGL_CALL:gl. enableVertexAttribArray ( vertexPositionAttribute  )
		KEYWORD:gl.
		NAME:enableVertexAttribArray
		KEYWORD:(
		SEQUENCE:vertexPositionAttribute 
				EXPRESSION:vertexPositionAttribute 
						VARIABLE:vertexPositionAttribute 
								NAME:vertexPositionAttribute
								IGNORED:
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> vertexNormalAttribute   = gl. getAttribLocation ( shaderProgram , "aVertexNormal"  )
NAME:vertexNormalAttribute 
		NAME:vertexNormalAttribute
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getAttribLocation ( shaderProgram , "aVertexNormal"  )
		OPENGL_CALL:gl. getAttribLocation ( shaderProgram , "aVertexNormal"  )
				KEYWORD:gl.
				NAME:getAttribLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "aVertexNormal" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"aVertexNormal" 
								VARIABLE:"aVertexNormal" 
										NAME:"aVertexNormal"
										IGNORED:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enableVertexAttribArray ( vertexNormalAttribute  )
OPENGL_CALL:gl. enableVertexAttribArray ( vertexNormalAttribute  )
		KEYWORD:gl.
		NAME:enableVertexAttribArray
		KEYWORD:(
		SEQUENCE:vertexNormalAttribute 
				EXPRESSION:vertexNormalAttribute 
						VARIABLE:vertexNormalAttribute 
								NAME:vertexNormalAttribute
								IGNORED:
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> textureCoordAttribute   = gl. getAttribLocation ( shaderProgram , "aTextureCoord"  )
NAME:textureCoordAttribute 
		NAME:textureCoordAttribute
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getAttribLocation ( shaderProgram , "aTextureCoord"  )
		OPENGL_CALL:gl. getAttribLocation ( shaderProgram , "aTextureCoord"  )
				KEYWORD:gl.
				NAME:getAttribLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "aTextureCoord" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"aTextureCoord" 
								VARIABLE:"aTextureCoord" 
										NAME:"aTextureCoord"
										IGNORED:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enableVertexAttribArray ( textureCoordAttribute  )
OPENGL_CALL:gl. enableVertexAttribArray ( textureCoordAttribute  )
		KEYWORD:gl.
		NAME:enableVertexAttribArray
		KEYWORD:(
		SEQUENCE:textureCoordAttribute 
				EXPRESSION:textureCoordAttribute 
						VARIABLE:textureCoordAttribute 
								NAME:textureCoordAttribute
								IGNORED:
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pMatrixUniform   = gl. getUniformLocation ( shaderProgram , "uPMatrix"  )
NAME:pMatrixUniform 
		NAME:pMatrixUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uPMatrix"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uPMatrix"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uPMatrix" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uPMatrix" 
								VARIABLE:"uPMatrix" 
										NAME:"uPMatrix"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrixUniform   = gl. getUniformLocation ( shaderProgram , "uMVMatrix"  )
NAME:mvMatrixUniform 
		NAME:mvMatrixUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uMVMatrix"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uMVMatrix"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uMVMatrix" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uMVMatrix" 
								VARIABLE:"uMVMatrix" 
										NAME:"uMVMatrix"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> nMatrixUniform   = gl. getUniformLocation ( shaderProgram , "uNMatrix"  )
NAME:nMatrixUniform 
		NAME:nMatrixUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uNMatrix"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uNMatrix"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uNMatrix" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uNMatrix" 
								VARIABLE:"uNMatrix" 
										NAME:"uNMatrix"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> samplerUniform   = gl. getUniformLocation ( shaderProgram , "uSampler"  )
NAME:samplerUniform 
		NAME:samplerUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uSampler"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uSampler"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uSampler" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uSampler" 
								VARIABLE:"uSampler" 
										NAME:"uSampler"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> ambientColorUniform   = gl. getUniformLocation ( shaderProgram , "uAmbientColor"  )
NAME:ambientColorUniform 
		NAME:ambientColorUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uAmbientColor"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uAmbientColor"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uAmbientColor" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uAmbientColor" 
								VARIABLE:"uAmbientColor" 
										NAME:"uAmbientColor"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> lightingDirectionUniform   = gl. getUniformLocation ( shaderProgram , "uLightingDirection"  )
NAME:lightingDirectionUniform 
		NAME:lightingDirectionUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uLightingDirection"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uLightingDirection"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uLightingDirection" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uLightingDirection" 
								VARIABLE:"uLightingDirection" 
										NAME:"uLightingDirection"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> directionalColorUniform   = gl. getUniformLocation ( shaderProgram , "uDirectionalColor"  )
NAME:directionalColorUniform 
		NAME:directionalColorUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uDirectionalColor"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uDirectionalColor"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uDirectionalColor" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uDirectionalColor" 
								VARIABLE:"uDirectionalColor" 
										NAME:"uDirectionalColor"
										IGNORED:
				KEYWORD:)


[METHOD_DECLARATION] -------> , setMatrixUniforms : function ( gl  )
KEYWORD:,
NAME:setMatrixUniforms
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniformMatrix4fv ( pMatrixUniform , false , pMatrix  )
OPENGL_CALL:gl. uniformMatrix4fv ( pMatrixUniform , false , pMatrix  )
		KEYWORD:gl.
		NAME:uniformMatrix4fv
		KEYWORD:(
		SEQUENCE:pMatrixUniform , false , pMatrix 
				EXPRESSION:pMatrixUniform 
						VARIABLE:pMatrixUniform 
								NAME:pMatrixUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:pMatrix 
						VARIABLE:pMatrix 
								NAME:pMatrix
								IGNORED:
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniformMatrix4fv ( mvMatrixUniform , false , mvMatrix  )
OPENGL_CALL:gl. uniformMatrix4fv ( mvMatrixUniform , false , mvMatrix  )
		KEYWORD:gl.
		NAME:uniformMatrix4fv
		KEYWORD:(
		SEQUENCE:mvMatrixUniform , false , mvMatrix 
				EXPRESSION:mvMatrixUniform 
						VARIABLE:mvMatrixUniform 
								NAME:mvMatrixUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:mvMatrix 
						VARIABLE:mvMatrix 
								NAME:mvMatrix
								IGNORED:
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniformMatrix3fv ( nMatrixUniform , false , normalMatrix  )
OPENGL_CALL:gl. uniformMatrix3fv ( nMatrixUniform , false , normalMatrix  )
		KEYWORD:gl.
		NAME:uniformMatrix3fv
		KEYWORD:(
		SEQUENCE:nMatrixUniform , false , normalMatrix 
				EXPRESSION:nMatrixUniform 
						VARIABLE:nMatrixUniform 
								NAME:nMatrixUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:normalMatrix 
						VARIABLE:normalMatrix 
								NAME:normalMatrix
								IGNORED:
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniform3f ( ambientColorUniform , 0.1, 0.1, 0.1 )
OPENGL_CALL:gl. uniform3f ( ambientColorUniform , 0.1, 0.1, 0.1 )
		KEYWORD:gl.
		NAME:uniform3f
		KEYWORD:(
		SEQUENCE:ambientColorUniform , 0.1, 0.1, 0.1
				EXPRESSION:ambientColorUniform 
						VARIABLE:ambientColorUniform 
								NAME:ambientColorUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0.1
						VALUE:0.1
				KEYWORD:, 
				EXPRESSION:0.1
						VALUE:0.1
				KEYWORD:, 
				EXPRESSION:0.1
						VALUE:0.1
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var lightingDirection  = [ 0.57735026918962576450914878050196,0.57735026918962576450914878050196,0.57735026918962576450914878050196 ]
VARIABLE:var lightingDirection 
		KEYWORD:var
		NAME:lightingDirection 
				NAME:lightingDirection
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ 0.57735026918962576450914878050196,0.57735026918962576450914878050196,0.57735026918962576450914878050196 ]
		KEYWORD:[
		SEQUENCE:0.57735026918962576450914878050196,0.57735026918962576450914878050196,0.57735026918962576450914878050196
				EXPRESSION:0.57735026918962576450914878050196
						VALUE:0.57735026918962576450914878050196
				KEYWORD:,
				EXPRESSION:0.57735026918962576450914878050196
						VALUE:0.57735026918962576450914878050196
				KEYWORD:,
				EXPRESSION:0.57735026918962576450914878050196
						VALUE:0.57735026918962576450914878050196
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniform3fv ( lightingDirectionUniform , lightingDirection  )
OPENGL_CALL:gl. uniform3fv ( lightingDirectionUniform , lightingDirection  )
		KEYWORD:gl.
		NAME:uniform3fv
		KEYWORD:(
		SEQUENCE:lightingDirectionUniform , lightingDirection 
				EXPRESSION:lightingDirectionUniform 
						VARIABLE:lightingDirectionUniform 
								NAME:lightingDirectionUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:lightingDirection 
						VARIABLE:lightingDirection 
								NAME:lightingDirection
								IGNORED:
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniform3f ( directionalColorUniform , 0.7, 0.7, 0.7 )
OPENGL_CALL:gl. uniform3f ( directionalColorUniform , 0.7, 0.7, 0.7 )
		KEYWORD:gl.
		NAME:uniform3f
		KEYWORD:(
		SEQUENCE:directionalColorUniform , 0.7, 0.7, 0.7
				EXPRESSION:directionalColorUniform 
						VARIABLE:directionalColorUniform 
								NAME:directionalColorUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0.7
						VALUE:0.7
				KEYWORD:, 
				EXPRESSION:0.7
						VALUE:0.7
				KEYWORD:, 
				EXPRESSION:0.7
						VALUE:0.7
		KEYWORD:)


[METHOD_DECLARATION] -------> , initBuffers : function ( gl  )
KEYWORD:,
NAME:initBuffers
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexPositionBuffer [ 0 ]  = gl. createBuffer (  )
NAME:cubeVertexPositionBuffer [ 0 ]
		NAME:cubeVertexPositionBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, cubeVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:cubeVertexPositionBuffer [ 0 ]
						VARIABLE:cubeVertexPositionBuffer [ 0 ]
								NAME:cubeVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var vertices  = [ -1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,1.0,1.0,-1.0,1.0,1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,-1.0,1.0,-1.0,-1.0,-1.0,1.0,-1.0,-1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,-1.0,1.0,-1.0,1.0,-1.0,-1.0,1.0,1.0,-1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,1.0,1.0,-1.0,1.0,-1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,-1.0,1.0,-1.0 ]
VARIABLE:var vertices 
		KEYWORD:var
		NAME:vertices 
				NAME:vertices
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ -1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,1.0,1.0,-1.0,1.0,1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,-1.0,1.0,-1.0,-1.0,-1.0,1.0,-1.0,-1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,-1.0,1.0,-1.0,1.0,-1.0,-1.0,1.0,1.0,-1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,1.0,1.0,-1.0,1.0,-1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,-1.0,1.0,-1.0 ]
		KEYWORD:[
		SEQUENCE:-1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,1.0,1.0,-1.0,1.0,1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,-1.0,1.0,-1.0,-1.0,-1.0,1.0,-1.0,-1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,-1.0,1.0,-1.0,1.0,-1.0,-1.0,1.0,1.0,-1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,1.0,1.0,-1.0,1.0,-1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,-1.0,1.0,-1.0
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( vertices  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( vertices  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( vertices  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( vertices  )
						NEW_STATEMENT:new  Float32Array  ( vertices  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( vertices  )
										KEYWORD:(
										SEQUENCE:vertices 
												EXPRESSION:vertices 
														VARIABLE:vertices 
																NAME:vertices
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexPositionBuffer [ 1 ]  = 3
NAME:cubeVertexPositionBuffer [ 1 ]
		NAME:cubeVertexPositionBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:3
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexPositionBuffer [ 2 ]  = 24
NAME:cubeVertexPositionBuffer [ 2 ]
		NAME:cubeVertexPositionBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:24
		VALUE:24


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexNormalBuffer [ 0 ]  = gl. createBuffer (  )
NAME:cubeVertexNormalBuffer [ 0 ]
		NAME:cubeVertexNormalBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexNormalBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexNormalBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, cubeVertexNormalBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:cubeVertexNormalBuffer [ 0 ]
						VARIABLE:cubeVertexNormalBuffer [ 0 ]
								NAME:cubeVertexNormalBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var normals  = [ 0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0 ]
VARIABLE:var normals 
		KEYWORD:var
		NAME:normals 
				NAME:normals
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ 0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0 ]
		KEYWORD:[
		SEQUENCE:0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( normals  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( normals  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( normals  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( normals  )
						NEW_STATEMENT:new  Float32Array  ( normals  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( normals  )
										KEYWORD:(
										SEQUENCE:normals 
												EXPRESSION:normals 
														VARIABLE:normals 
																NAME:normals
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexNormalBuffer [ 1 ]  = 3
NAME:cubeVertexNormalBuffer [ 1 ]
		NAME:cubeVertexNormalBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:3
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexNormalBuffer [ 2 ]  = 24
NAME:cubeVertexNormalBuffer [ 2 ]
		NAME:cubeVertexNormalBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:24
		VALUE:24


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexTextureCoordBuffer [ 0 ]  = gl. createBuffer (  )
NAME:cubeVertexTextureCoordBuffer [ 0 ]
		NAME:cubeVertexTextureCoordBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexTextureCoordBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexTextureCoordBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, cubeVertexTextureCoordBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:cubeVertexTextureCoordBuffer [ 0 ]
						VARIABLE:cubeVertexTextureCoordBuffer [ 0 ]
								NAME:cubeVertexTextureCoordBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var textureCoords  = [ -1.0,-1.0,2.0,-1.0,2.0,2.0,-1.0,2.0,2.0,-1.0,2.0,2.0,-1.0,2.0,-1.0,-1.0,-1.0,2.0,-1.0,-1.0,2.0,-1.0,2.0,2.0,2.0,2.0,-1.0,2.0,-1.0,-1.0,2.0,-1.0,2.0,-1.0,2.0,2.0,-1.0,2.0,-1.0,-1.0,-1.0,-1.0,2.0,-1.0,2.0,2.0,-1.0,2.0 ]
VARIABLE:var textureCoords 
		KEYWORD:var
		NAME:textureCoords 
				NAME:textureCoords
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ -1.0,-1.0,2.0,-1.0,2.0,2.0,-1.0,2.0,2.0,-1.0,2.0,2.0,-1.0,2.0,-1.0,-1.0,-1.0,2.0,-1.0,-1.0,2.0,-1.0,2.0,2.0,2.0,2.0,-1.0,2.0,-1.0,-1.0,2.0,-1.0,2.0,-1.0,2.0,2.0,-1.0,2.0,-1.0,-1.0,-1.0,-1.0,2.0,-1.0,2.0,2.0,-1.0,2.0 ]
		KEYWORD:[
		SEQUENCE:-1.0,-1.0,2.0,-1.0,2.0,2.0,-1.0,2.0,2.0,-1.0,2.0,2.0,-1.0,2.0,-1.0,-1.0,-1.0,2.0,-1.0,-1.0,2.0,-1.0,2.0,2.0,2.0,2.0,-1.0,2.0,-1.0,-1.0,2.0,-1.0,2.0,-1.0,2.0,2.0,-1.0,2.0,-1.0,-1.0,-1.0,-1.0,2.0,-1.0,2.0,2.0,-1.0,2.0
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:2.0
						VALUE:2.0
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( textureCoords  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( textureCoords  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( textureCoords  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( textureCoords  )
						NEW_STATEMENT:new  Float32Array  ( textureCoords  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( textureCoords  )
										KEYWORD:(
										SEQUENCE:textureCoords 
												EXPRESSION:textureCoords 
														VARIABLE:textureCoords 
																NAME:textureCoords
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexTextureCoordBuffer [ 1 ]  = 2
NAME:cubeVertexTextureCoordBuffer [ 1 ]
		NAME:cubeVertexTextureCoordBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:2
		VALUE:2


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexTextureCoordBuffer [ 2 ]  = 24
NAME:cubeVertexTextureCoordBuffer [ 2 ]
		NAME:cubeVertexTextureCoordBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:24
		VALUE:24


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexIndexBuffer [ 0 ]  = gl. createBuffer (  )
NAME:cubeVertexIndexBuffer [ 0 ]
		NAME:cubeVertexIndexBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, cubeVertexIndexBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, cubeVertexIndexBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ELEMENT_ARRAY_BUFFER, cubeVertexIndexBuffer [ 0 ]
				EXPRESSION:gl. ELEMENT_ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ELEMENT_ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ELEMENT_ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:cubeVertexIndexBuffer [ 0 ]
						VARIABLE:cubeVertexIndexBuffer [ 0 ]
								NAME:cubeVertexIndexBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cubeVertexIndices  = [ 0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23 ]
VARIABLE:var cubeVertexIndices 
		KEYWORD:var
		NAME:cubeVertexIndices 
				NAME:cubeVertexIndices
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ 0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23 ]
		KEYWORD:[
		SEQUENCE:0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23
				EXPRESSION:0
						VALUE:0
				KEYWORD:,
				EXPRESSION:1
						VALUE:1
				KEYWORD:,
				EXPRESSION:2
						VALUE:2
				KEYWORD:,
				EXPRESSION:0
						VALUE:0
				KEYWORD:,
				EXPRESSION:2
						VALUE:2
				KEYWORD:,
				EXPRESSION:3
						VALUE:3
				KEYWORD:,
				EXPRESSION:4
						VALUE:4
				KEYWORD:,
				EXPRESSION:5
						VALUE:5
				KEYWORD:,
				EXPRESSION:6
						VALUE:6
				KEYWORD:,
				EXPRESSION:4
						VALUE:4
				KEYWORD:,
				EXPRESSION:6
						VALUE:6
				KEYWORD:,
				EXPRESSION:7
						VALUE:7
				KEYWORD:,
				EXPRESSION:8
						VALUE:8
				KEYWORD:,
				EXPRESSION:9
						VALUE:9
				KEYWORD:,
				EXPRESSION:10
						VALUE:10
				KEYWORD:,
				EXPRESSION:8
						VALUE:8
				KEYWORD:,
				EXPRESSION:10
						VALUE:10
				KEYWORD:,
				EXPRESSION:11
						VALUE:11
				KEYWORD:,
				EXPRESSION:12
						VALUE:12
				KEYWORD:,
				EXPRESSION:13
						VALUE:13
				KEYWORD:,
				EXPRESSION:14
						VALUE:14
				KEYWORD:,
				EXPRESSION:12
						VALUE:12
				KEYWORD:,
				EXPRESSION:14
						VALUE:14
				KEYWORD:,
				EXPRESSION:15
						VALUE:15
				KEYWORD:,
				EXPRESSION:16
						VALUE:16
				KEYWORD:,
				EXPRESSION:17
						VALUE:17
				KEYWORD:,
				EXPRESSION:18
						VALUE:18
				KEYWORD:,
				EXPRESSION:16
						VALUE:16
				KEYWORD:,
				EXPRESSION:18
						VALUE:18
				KEYWORD:,
				EXPRESSION:19
						VALUE:19
				KEYWORD:,
				EXPRESSION:20
						VALUE:20
				KEYWORD:,
				EXPRESSION:21
						VALUE:21
				KEYWORD:,
				EXPRESSION:22
						VALUE:22
				KEYWORD:,
				EXPRESSION:20
						VALUE:20
				KEYWORD:,
				EXPRESSION:22
						VALUE:22
				KEYWORD:,
				EXPRESSION:23
						VALUE:23
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ELEMENT_ARRAY_BUFFER, new  Uint16Array  ( cubeVertexIndices  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ELEMENT_ARRAY_BUFFER, new  Uint16Array  ( cubeVertexIndices  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ELEMENT_ARRAY_BUFFER, new  Uint16Array  ( cubeVertexIndices  ), gl. STATIC_DRAW
				EXPRESSION:gl. ELEMENT_ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ELEMENT_ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ELEMENT_ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Uint16Array  ( cubeVertexIndices  )
						NEW_STATEMENT:new  Uint16Array  ( cubeVertexIndices  )
								KEYWORD:new 
								VARIABLE:Uint16Array 
										NAME:Uint16Array
										IGNORED:
								COMPOSITE:( cubeVertexIndices  )
										KEYWORD:(
										SEQUENCE:cubeVertexIndices 
												EXPRESSION:cubeVertexIndices 
														VARIABLE:cubeVertexIndices 
																NAME:cubeVertexIndices
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexIndexBuffer [ 1 ]  = 1
NAME:cubeVertexIndexBuffer [ 1 ]
		NAME:cubeVertexIndexBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:1
		VALUE:1


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexIndexBuffer [ 2 ]  = 36
NAME:cubeVertexIndexBuffer [ 2 ]
		NAME:cubeVertexIndexBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:36
		VALUE:36


[METHOD_DECLARATION] -------> , initTexture : function ( gl  )
KEYWORD:,
NAME:initTexture
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> textures [ 0 ]  = gl. createTexture (  )
NAME:textures [ 0 ]
		NAME:textures
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createTexture (  )
		OPENGL_CALL:gl. createTexture (  )
				KEYWORD:gl.
				NAME:createTexture
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var tex  = new  Image  (  )
VARIABLE:var tex 
		KEYWORD:var
		NAME:tex 
				NAME:tex
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Image  (  )
		KEYWORD:new 
		TYPE:Image 
				TYPE:Image
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tex.onload   =  function  (  )
NAME:tex.onload 
		NAME:tex.onload
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION: function  (  )
		CALL: function  (  )
				IGNORED:
				SEQUENCE:function  (  )
						COMPOSITE:function  (  )
								COMPOSITE:function 
										NAME:function
										IGNORED:
								KEYWORD:(
								SEQUENCE:
								KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindTexture ( gl. TEXTURE_2D, textures [ 0 ] )
OPENGL_CALL:gl. bindTexture ( gl. TEXTURE_2D, textures [ 0 ] )
		KEYWORD:gl.
		NAME:bindTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, textures [ 0 ]
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:textures [ 0 ]
						VARIABLE:textures [ 0 ]
								NAME:textures
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texImage2D ( gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex  )
OPENGL_CALL:gl. texImage2D ( gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex  )
		KEYWORD:gl.
		NAME:texImage2D
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex 
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:gl. RGB
						OPENGL_CONSTANT:gl. RGB
								KEYWORD:gl.
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:gl. RGB
						OPENGL_CONSTANT:gl. RGB
								KEYWORD:gl.
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:gl. UNSIGNED_BYTE
						OPENGL_CONSTANT:gl. UNSIGNED_BYTE
								KEYWORD:gl.
								NAME:UNSIGNED_BYTE
				KEYWORD:, 
				EXPRESSION:tex 
						VARIABLE:tex 
								NAME:tex
								IGNORED:
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_MAG_FILTER
						OPENGL_CONSTANT:gl. TEXTURE_MAG_FILTER
								KEYWORD:gl.
								NAME:TEXTURE_MAG_FILTER
				KEYWORD:, 
				EXPRESSION:gl. LINEAR
						OPENGL_CONSTANT:gl. LINEAR
								KEYWORD:gl.
								NAME:LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_MIN_FILTER
						OPENGL_CONSTANT:gl. TEXTURE_MIN_FILTER
								KEYWORD:gl.
								NAME:TEXTURE_MIN_FILTER
				KEYWORD:, 
				EXPRESSION:gl. LINEAR_MIPMAP_LINEAR
						OPENGL_CONSTANT:gl. LINEAR_MIPMAP_LINEAR
								KEYWORD:gl.
								NAME:LINEAR_MIPMAP_LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_S, gl. REPEAT )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_S, gl. REPEAT )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_WRAP_S, gl. REPEAT
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_WRAP_S
						OPENGL_CONSTANT:gl. TEXTURE_WRAP_S
								KEYWORD:gl.
								NAME:TEXTURE_WRAP_S
				KEYWORD:, 
				EXPRESSION:gl. REPEAT
						OPENGL_CONSTANT:gl. REPEAT
								KEYWORD:gl.
								NAME:REPEAT
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_T, gl. REPEAT )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_T, gl. REPEAT )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_WRAP_T, gl. REPEAT
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_WRAP_T
						OPENGL_CONSTANT:gl. TEXTURE_WRAP_T
								KEYWORD:gl.
								NAME:TEXTURE_WRAP_T
				KEYWORD:, 
				EXPRESSION:gl. REPEAT
						OPENGL_CONSTANT:gl. REPEAT
								KEYWORD:gl.
								NAME:REPEAT
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. generateMipmap ( gl. TEXTURE_2D )
OPENGL_CALL:gl. generateMipmap ( gl. TEXTURE_2D )
		KEYWORD:gl.
		NAME:generateMipmap
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindTexture ( gl. TEXTURE_2D, null  )
OPENGL_CALL:gl. bindTexture ( gl. TEXTURE_2D, null  )
		KEYWORD:gl.
		NAME:bindTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, null 
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:null 
						VARIABLE:null 
								NAME:null
								IGNORED:
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tex.src   = "images /muro.gif" 
NAME:tex.src 
		NAME:tex.src
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:"images /muro.gif" 
		VARIABLE:"images 
				NAME:"images
				IGNORED:
		OPERATOR:/
		VARIABLE:muro.gif" 
				NAME:muro.gif"
				IGNORED:


[METHOD_DECLARATION] -------> , drawScene : function ( gl  )
KEYWORD:,
NAME:drawScene
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. clearColor ( 0.0, 0.0, 0.0, 1.0 )
OPENGL_CALL:gl. clearColor ( 0.0, 0.0, 0.0, 1.0 )
		KEYWORD:gl.
		NAME:clearColor
		KEYWORD:(
		SEQUENCE:0.0, 0.0, 0.0, 1.0
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:, 
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:, 
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:, 
				EXPRESSION:1.0
						VALUE:1.0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enable ( gl. DEPTH_TEST )
OPENGL_CALL:gl. enable ( gl. DEPTH_TEST )
		KEYWORD:gl.
		NAME:enable
		KEYWORD:(
		SEQUENCE:gl. DEPTH_TEST
				EXPRESSION:gl. DEPTH_TEST
						OPENGL_CONSTANT:gl. DEPTH_TEST
								KEYWORD:gl.
								NAME:DEPTH_TEST
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. cullFace ( gl. BACK )
OPENGL_CALL:gl. cullFace ( gl. BACK )
		KEYWORD:gl.
		NAME:cullFace
		KEYWORD:(
		SEQUENCE:gl. BACK
				EXPRESSION:gl. BACK
						OPENGL_CONSTANT:gl. BACK
								KEYWORD:gl.
								NAME:BACK
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enable ( gl. CULL_FACE )
OPENGL_CALL:gl. enable ( gl. CULL_FACE )
		KEYWORD:gl.
		NAME:enable
		KEYWORD:(
		SEQUENCE:gl. CULL_FACE
				EXPRESSION:gl. CULL_FACE
						OPENGL_CONSTANT:gl. CULL_FACE
								KEYWORD:gl.
								NAME:CULL_FACE
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.handleKeys  (  )
CALL: this.handleKeys  (  )
		IGNORED:
		SEQUENCE:this.handleKeys  (  )
				COMPOSITE:this.handleKeys  (  )
						COMPOSITE:this.handleKeys 
								NAME:this.handleKeys
								IGNORED:
						KEYWORD:(
						SEQUENCE:
						KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. viewport ( 0, 0, 500, 500 )
OPENGL_CALL:gl. viewport ( 0, 0, 500, 500 )
		KEYWORD:gl.
		NAME:viewport
		KEYWORD:(
		SEQUENCE:0, 0, 500, 500
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:500
						VALUE:500
				KEYWORD:, 
				EXPRESSION:500
						VALUE:500
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. clear ( gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT )
OPENGL_CALL:gl. clear ( gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT )
		KEYWORD:gl.
		NAME:clear
		KEYWORD:(
		SEQUENCE:gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT
				EXPRESSION:gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT
						OPENGL_CONSTANT:gl. COLOR_BUFFER_BIT
								KEYWORD:gl.
								NAME:COLOR_BUFFER_BIT
						OPERATOR:|
						OPENGL_CONSTANT:gl. DEPTH_BUFFER_BIT
								KEYWORD:gl.
								NAME:DEPTH_BUFFER_BIT
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cx  =  Math.cos  ( rAnglex  )
VARIABLE:var cx 
		KEYWORD:var
		NAME:cx 
				NAME:cx
				IGNORED:
KEYWORD:=
CALL: Math.cos  ( rAnglex  )
		IGNORED:
		SEQUENCE:Math.cos  ( rAnglex  )
				COMPOSITE:Math.cos  ( rAnglex  )
						COMPOSITE:Math.cos 
								NAME:Math.cos
								IGNORED:
						KEYWORD:(
						SEQUENCE:rAnglex 
								EXPRESSION:rAnglex 
										VARIABLE:rAnglex 
												NAME:rAnglex
												IGNORED:
						KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var sx  =  Math.sin  ( rAnglex  )
VARIABLE:var sx 
		KEYWORD:var
		NAME:sx 
				NAME:sx
				IGNORED:
KEYWORD:=
CALL: Math.sin  ( rAnglex  )
		IGNORED:
		SEQUENCE:Math.sin  ( rAnglex  )
				COMPOSITE:Math.sin  ( rAnglex  )
						COMPOSITE:Math.sin 
								NAME:Math.sin
								IGNORED:
						KEYWORD:(
						SEQUENCE:rAnglex 
								EXPRESSION:rAnglex 
										VARIABLE:rAnglex 
												NAME:rAnglex
												IGNORED:
						KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cy  =  Math.cos  ( rAngley  )
VARIABLE:var cy 
		KEYWORD:var
		NAME:cy 
				NAME:cy
				IGNORED:
KEYWORD:=
CALL: Math.cos  ( rAngley  )
		IGNORED:
		SEQUENCE:Math.cos  ( rAngley  )
				COMPOSITE:Math.cos  ( rAngley  )
						COMPOSITE:Math.cos 
								NAME:Math.cos
								IGNORED:
						KEYWORD:(
						SEQUENCE:rAngley 
								EXPRESSION:rAngley 
										VARIABLE:rAngley 
												NAME:rAngley
												IGNORED:
						KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var sy  =  Math.sin  ( rAngley  )
VARIABLE:var sy 
		KEYWORD:var
		NAME:sy 
				NAME:sy
				IGNORED:
KEYWORD:=
CALL: Math.sin  ( rAngley  )
		IGNORED:
		SEQUENCE:Math.sin  ( rAngley  )
				COMPOSITE:Math.sin  ( rAngley  )
						COMPOSITE:Math.sin 
								NAME:Math.sin
								IGNORED:
						KEYWORD:(
						SEQUENCE:rAngley 
								EXPRESSION:rAngley 
										VARIABLE:rAngley 
												NAME:rAngley
												IGNORED:
						KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pMatrix   = new  Float32Array  ( [ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ] )
NAME:pMatrix 
		NAME:pMatrix
		IGNORED:
IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Float32Array  ( [ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ] )
		KEYWORD:new 
		TYPE:Float32Array 
				TYPE:Float32Array
				IGNORED:
		COMPOSITE:( [ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ] )
				KEYWORD:(
				SEQUENCE:[ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ]
						ARRAY_CONTENT:[ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ]
								KEYWORD:[
								SEQUENCE:2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0
										EXPRESSION:2.4142136573791504
												VALUE:2.4142136573791504
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:2.4142136573791504
												VALUE:2.4142136573791504
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:-1.0020020008087158
												VALUE:-1.0020020008087158
										KEYWORD:,
										EXPRESSION:-1
												VALUE:-1
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:-0.20020020008087158
												VALUE:-0.20020020008087158
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
								KEYWORD:]
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix   = new  Float32Array  ( [ cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,0,0,zoom ,1 ] )
NAME:mvMatrix 
		NAME:mvMatrix
		IGNORED:
IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Float32Array  ( [ cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,0,0,zoom ,1 ] )
		KEYWORD:new 
		TYPE:Float32Array 
				TYPE:Float32Array
				IGNORED:
		COMPOSITE:( [ cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,0,0,zoom ,1 ] )
				KEYWORD:(
				SEQUENCE:[ cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,0,0,zoom ,1 ]
						ARRAY_CONTENT:[ cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,0,0,zoom ,1 ]
								KEYWORD:[
								SEQUENCE:cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,0,0,zoom ,1
										EXPRESSION:cy 
												VARIABLE:cy 
														NAME:cy
														IGNORED:
										KEYWORD:,
										EXPRESSION:sx *sy 
												VARIABLE:sx 
														NAME:sx
														IGNORED:
												OPERATOR:*
												VARIABLE:sy 
														NAME:sy
														IGNORED:
										KEYWORD:,
										EXPRESSION:-cx*sy 
												VALUE:-cx
												OPERATOR:*
												VARIABLE:sy 
														NAME:sy
														IGNORED:
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:cx 
												VARIABLE:cx 
														NAME:cx
														IGNORED:
										KEYWORD:,
										EXPRESSION:sx 
												VARIABLE:sx 
														NAME:sx
														IGNORED:
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:sy 
												VARIABLE:sy 
														NAME:sy
														IGNORED:
										KEYWORD:,
										EXPRESSION:-cy*sx 
												VALUE:-cy
												OPERATOR:*
												VARIABLE:sx 
														NAME:sx
														IGNORED:
										KEYWORD:,
										EXPRESSION:cx *cy 
												VARIABLE:cx 
														NAME:cx
														IGNORED:
												OPERATOR:*
												VARIABLE:cy 
														NAME:cy
														IGNORED:
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:zoom 
												VARIABLE:zoom 
														NAME:zoom
														IGNORED:
										KEYWORD:,
										EXPRESSION:1
												VALUE:1
								KEYWORD:]
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> normalMatrix   = new  Float32Array  ( 9 )
NAME:normalMatrix 
		NAME:normalMatrix
		IGNORED:
IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Float32Array  ( 9 )
		KEYWORD:new 
		TYPE:Float32Array 
				TYPE:Float32Array
				IGNORED:
		COMPOSITE:( 9 )
				KEYWORD:(
				SEQUENCE:9
						EXPRESSION:9
								VALUE:9
				KEYWORD:)


[FOR, ASSIGNMENT, LINE_OF_CODE] -------> for ( var i  = 0 ; i  < 3 ; i  ++  )
KEYWORD:for
KEYWORD:(
COMPOSITE:var i  = 0
		VARIABLE:var i 
				KEYWORD:var
				NAME:i 
						NAME:i
						IGNORED:
		KEYWORD:=
		EXPRESSION:0
				VALUE:0
KEYWORD:;
VALUE:i 
		VALUE:i
		IGNORED:
KEYWORD:<
EXPRESSION:3
		VALUE:3
KEYWORD:;
SEQUENCE:i  ++ 
		COMPOSITE:i  ++ 
				VARIABLE:i 
						VARIABLE:i
						IGNORED:
				KEYWORD:++
				EXPRESSION:
						IGNORED:
KEYWORD:)


[FOR, ASSIGNMENT, LINE_OF_CODE] -------> for ( var j  = 0 ; j  < 3 ; j  ++  )
KEYWORD:for
KEYWORD:(
COMPOSITE:var j  = 0
		VARIABLE:var j 
				KEYWORD:var
				NAME:j 
						NAME:j
						IGNORED:
		KEYWORD:=
		EXPRESSION:0
				VALUE:0
KEYWORD:;
VALUE:j 
		VALUE:j
		IGNORED:
KEYWORD:<
EXPRESSION:3
		VALUE:3
KEYWORD:;
SEQUENCE:j  ++ 
		COMPOSITE:j  ++ 
				VARIABLE:j 
						VARIABLE:j
						IGNORED:
				KEYWORD:++
				EXPRESSION:
						IGNORED:
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> normalMatrix [ i +3*j  ]  = mvMatrix [ i +4*j  ]
NAME:normalMatrix [ i +3*j  ]
		NAME:normalMatrix
		COMPOSITE:[ i +3*j  ]
				KEYWORD:[
				EXPRESSION:i +3*j 
						NAME:i 
								NAME:i
								IGNORED:
						OPERATOR:+
						VALUE:3
						OPERATOR:*
						NAME:j 
								NAME:j
								IGNORED:
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:mvMatrix [ i +4*j  ]
		VARIABLE:mvMatrix [ i +4*j  ]
				NAME:mvMatrix
				COMPOSITE:[ i +4*j  ]
						KEYWORD:[
						EXPRESSION:i +4*j 
								VARIABLE:i 
										NAME:i
										IGNORED:
								OPERATOR:+
								VALUE:4
								OPERATOR:*
								VARIABLE:j 
										NAME:j
										IGNORED:
						KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. frontFace ( gl. CCW )
OPENGL_CALL:gl. frontFace ( gl. CCW )
		KEYWORD:gl.
		NAME:frontFace
		KEYWORD:(
		SEQUENCE:gl. CCW
				EXPRESSION:gl. CCW
						OPENGL_CONSTANT:gl. CCW
								KEYWORD:gl.
								NAME:CCW
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, cubeVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:cubeVertexPositionBuffer [ 0 ]
						VARIABLE:cubeVertexPositionBuffer [ 0 ]
								NAME:cubeVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( vertexPositionAttribute , cubeVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( vertexPositionAttribute , cubeVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:vertexPositionAttribute , cubeVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:vertexPositionAttribute 
						VARIABLE:vertexPositionAttribute 
								NAME:vertexPositionAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:cubeVertexPositionBuffer [ 1 ]
						VARIABLE:cubeVertexPositionBuffer [ 1 ]
								NAME:cubeVertexPositionBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexNormalBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexNormalBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, cubeVertexNormalBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:cubeVertexNormalBuffer [ 0 ]
						VARIABLE:cubeVertexNormalBuffer [ 0 ]
								NAME:cubeVertexNormalBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( vertexNormalAttribute , cubeVertexNormalBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( vertexNormalAttribute , cubeVertexNormalBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:vertexNormalAttribute , cubeVertexNormalBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:vertexNormalAttribute 
						VARIABLE:vertexNormalAttribute 
								NAME:vertexNormalAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:cubeVertexNormalBuffer [ 1 ]
						VARIABLE:cubeVertexNormalBuffer [ 1 ]
								NAME:cubeVertexNormalBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexTextureCoordBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexTextureCoordBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, cubeVertexTextureCoordBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:cubeVertexTextureCoordBuffer [ 0 ]
						VARIABLE:cubeVertexTextureCoordBuffer [ 0 ]
								NAME:cubeVertexTextureCoordBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( textureCoordAttribute , cubeVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( textureCoordAttribute , cubeVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:textureCoordAttribute , cubeVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:textureCoordAttribute 
						VARIABLE:textureCoordAttribute 
								NAME:textureCoordAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:cubeVertexTextureCoordBuffer [ 1 ]
						VARIABLE:cubeVertexTextureCoordBuffer [ 1 ]
								NAME:cubeVertexTextureCoordBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. activeTexture ( gl. TEXTURE0 )
OPENGL_CALL:gl. activeTexture ( gl. TEXTURE0 )
		KEYWORD:gl.
		NAME:activeTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE0
				EXPRESSION:gl. TEXTURE0
						OPENGL_CONSTANT:gl. TEXTURE0
								KEYWORD:gl.
								NAME:TEXTURE0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindTexture ( gl. TEXTURE_2D, textures [ 0 ] )
OPENGL_CALL:gl. bindTexture ( gl. TEXTURE_2D, textures [ 0 ] )
		KEYWORD:gl.
		NAME:bindTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, textures [ 0 ]
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:textures [ 0 ]
						VARIABLE:textures [ 0 ]
								NAME:textures
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniform1i ( samplerUniform , 0 )
OPENGL_CALL:gl. uniform1i ( samplerUniform , 0 )
		KEYWORD:gl.
		NAME:uniform1i
		KEYWORD:(
		SEQUENCE:samplerUniform , 0
				EXPRESSION:samplerUniform 
						VARIABLE:samplerUniform 
								NAME:samplerUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, cubeVertexIndexBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, cubeVertexIndexBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ELEMENT_ARRAY_BUFFER, cubeVertexIndexBuffer [ 0 ]
				EXPRESSION:gl. ELEMENT_ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ELEMENT_ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ELEMENT_ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:cubeVertexIndexBuffer [ 0 ]
						VARIABLE:cubeVertexIndexBuffer [ 0 ]
								NAME:cubeVertexIndexBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.setMatrixUniforms  ( gl  )
CALL: this.setMatrixUniforms  ( gl  )
		IGNORED:
		SEQUENCE:this.setMatrixUniforms  ( gl  )
				COMPOSITE:this.setMatrixUniforms  ( gl  )
						COMPOSITE:this.setMatrixUniforms 
								NAME:this.setMatrixUniforms
								IGNORED:
						KEYWORD:(
						SEQUENCE:gl 
								EXPRESSION:gl 
										VARIABLE:gl 
												NAME:gl
												IGNORED:
						KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. drawElements ( gl. TRIANGLES, cubeVertexIndexBuffer [ 2 ], gl. UNSIGNED_SHORT, 0 )
OPENGL_CALL:gl. drawElements ( gl. TRIANGLES, cubeVertexIndexBuffer [ 2 ], gl. UNSIGNED_SHORT, 0 )
		KEYWORD:gl.
		NAME:drawElements
		KEYWORD:(
		SEQUENCE:gl. TRIANGLES, cubeVertexIndexBuffer [ 2 ], gl. UNSIGNED_SHORT, 0
				EXPRESSION:gl. TRIANGLES
						OPENGL_CONSTANT:gl. TRIANGLES
								KEYWORD:gl.
								NAME:TRIANGLES
				KEYWORD:, 
				EXPRESSION:cubeVertexIndexBuffer [ 2 ]
						VARIABLE:cubeVertexIndexBuffer [ 2 ]
								NAME:cubeVertexIndexBuffer
								COMPOSITE:[ 2 ]
										KEYWORD:[
										EXPRESSION:2
												VALUE:2
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. UNSIGNED_SHORT
						OPENGL_CONSTANT:gl. UNSIGNED_SHORT
								KEYWORD:gl.
								NAME:UNSIGNED_SHORT
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.animate  (  )
CALL: this.animate  (  )
		IGNORED:
		SEQUENCE:this.animate  (  )
				COMPOSITE:this.animate  (  )
						COMPOSITE:this.animate 
								NAME:this.animate
								IGNORED:
						KEYWORD:(
						SEQUENCE:
						KEYWORD:)


[METHOD_DECLARATION] -------> , animate : function (  )
KEYWORD:,
NAME:animate
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var timeNow  = new  Date  (  ) . getTime  (  )
VARIABLE:var timeNow 
		KEYWORD:var
		NAME:timeNow 
				NAME:timeNow
				IGNORED:
KEYWORD:=
CALL:new  Date  (  ) . getTime  (  )
		COMPOSITE:new  Date  (  ) .
				NEW_STATEMENT:new  Date  (  )
						KEYWORD:new 
						TYPE:Date 
								TYPE:Date
								IGNORED:
						COMPOSITE:(  )
								KEYWORD:(
								SEQUENCE:
								KEYWORD:)
				KEYWORD:.
		SEQUENCE:getTime  (  )
				COMPOSITE:getTime  (  )
						COMPOSITE:getTime 
								NAME:getTime
								IGNORED:
						KEYWORD:(
						SEQUENCE:
						KEYWORD:)


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( lastTime !=0 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:lastTime !=0
		VARIABLE:lastTime 
				NAME:lastTime
				IGNORED:
		OPERATOR:!=
		VALUE:0
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var elapsed  = timeNow -lastTime 
VARIABLE:var elapsed 
		KEYWORD:var
		NAME:elapsed 
				NAME:elapsed
				IGNORED:
KEYWORD:=
EXPRESSION:timeNow -lastTime 
		VARIABLE:timeNow 
				NAME:timeNow
				IGNORED:
		OPERATOR:-
		VARIABLE:lastTime 
				NAME:lastTime
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> rAnglex  + = speedx *elapsed *0.001
NAME:rAnglex 
		NAME:rAnglex
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION:speedx *elapsed *0.001
		VARIABLE:speedx 
				NAME:speedx
				IGNORED:
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> rAngley  + = speedy *elapsed *0.001
NAME:rAngley 
		NAME:rAngley
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION:speedy *elapsed *0.001
		VARIABLE:speedy 
				NAME:speedy
				IGNORED:
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> lastTime   = timeNow 
NAME:lastTime 
		NAME:lastTime
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:timeNow 
		VARIABLE:timeNow 
				NAME:timeNow
				IGNORED:


[METHOD_DECLARATION] -------> , handleKeys : function (  )
KEYWORD:,
NAME:handleKeys
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var timeNow  = new  Date  (  ) . getTime  (  )
VARIABLE:var timeNow 
		KEYWORD:var
		NAME:timeNow 
				NAME:timeNow
				IGNORED:
KEYWORD:=
CALL:new  Date  (  ) . getTime  (  )
		COMPOSITE:new  Date  (  ) .
				NEW_STATEMENT:new  Date  (  )
						KEYWORD:new 
						TYPE:Date 
								TYPE:Date
								IGNORED:
						COMPOSITE:(  )
								KEYWORD:(
								SEQUENCE:
								KEYWORD:)
				KEYWORD:.
		SEQUENCE:getTime  (  )
				COMPOSITE:getTime  (  )
						COMPOSITE:getTime 
								NAME:getTime
								IGNORED:
						KEYWORD:(
						SEQUENCE:
						KEYWORD:)


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( lastTime2 !=0 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:lastTime2 !=0
		VARIABLE:lastTime2 
				NAME:lastTime2
				IGNORED:
		OPERATOR:!=
		VALUE:0
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var elapsed  = timeNow -lastTime2 
VARIABLE:var elapsed 
		KEYWORD:var
		NAME:elapsed 
				NAME:elapsed
				IGNORED:
KEYWORD:=
EXPRESSION:timeNow -lastTime2 
		VARIABLE:timeNow 
				NAME:timeNow
				IGNORED:
		OPERATOR:-
		VARIABLE:lastTime2 
				NAME:lastTime2
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands [ 0 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands [ 0 ]
		VARIABLE:commands [ 0 ]
				NAME:commands
				COMPOSITE:[ 0 ]
						KEYWORD:[
						EXPRESSION:0
								VALUE:0
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> zoom  + = 5*elapsed *0.001
NAME:zoom 
		NAME:zoom
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION:5*elapsed *0.001
		VALUE:5
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands [ 1 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands [ 1 ]
		VARIABLE:commands [ 1 ]
				NAME:commands
				COMPOSITE:[ 1 ]
						KEYWORD:[
						EXPRESSION:1
								VALUE:1
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> zoom  - = 5*elapsed *0.001
NAME:zoom 
		NAME:zoom
		IGNORED:
KEYWORD:-
KEYWORD:=
EXPRESSION:5*elapsed *0.001
		VALUE:5
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands [ 2 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands [ 2 ]
		VARIABLE:commands [ 2 ]
				NAME:commands
				COMPOSITE:[ 2 ]
						KEYWORD:[
						EXPRESSION:2
								VALUE:2
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> speedx  - = 2*elapsed *0.001
NAME:speedx 
		NAME:speedx
		IGNORED:
KEYWORD:-
KEYWORD:=
EXPRESSION:2*elapsed *0.001
		VALUE:2
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands [ 3 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands [ 3 ]
		VARIABLE:commands [ 3 ]
				NAME:commands
				COMPOSITE:[ 3 ]
						KEYWORD:[
						EXPRESSION:3
								VALUE:3
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> speedx  + = 2*elapsed *0.001
NAME:speedx 
		NAME:speedx
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION:2*elapsed *0.001
		VALUE:2
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands [ 4 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands [ 4 ]
		VARIABLE:commands [ 4 ]
				NAME:commands
				COMPOSITE:[ 4 ]
						KEYWORD:[
						EXPRESSION:4
								VALUE:4
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> speedy  - = 2*elapsed *0.001
NAME:speedy 
		NAME:speedy
		IGNORED:
KEYWORD:-
KEYWORD:=
EXPRESSION:2*elapsed *0.001
		VALUE:2
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands [ 5 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands [ 5 ]
		VARIABLE:commands [ 5 ]
				NAME:commands
				COMPOSITE:[ 5 ]
						KEYWORD:[
						EXPRESSION:5
								VALUE:5
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> speedy  + = 2*elapsed *0.001
NAME:speedy 
		NAME:speedy
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION:2*elapsed *0.001
		VALUE:2
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> lastTime2   = timeNow 
NAME:lastTime2 
		NAME:lastTime2
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:timeNow 
		VARIABLE:timeNow 
				NAME:timeNow
				IGNORED:


[METHOD_DECLARATION] -------> , setCommands : function ( e , value  )
KEYWORD:,
NAME:setCommands
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:e , value 
		VARIABLE:e 
				NAME:e
				IGNORED:
		KEYWORD:, 
		VARIABLE:value 
				NAME:value
				IGNORED:
KEYWORD:)


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==65 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==65
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:65
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 0 ]  = value 
NAME:commands [ 0 ]
		NAME:commands
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==90 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==90
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:90
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 1 ]  = value 
NAME:commands [ 1 ]
		NAME:commands
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==38 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==38
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:38
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 2 ]  = value 
NAME:commands [ 2 ]
		NAME:commands
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==40 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==40
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:40
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 3 ]  = value 
NAME:commands [ 3 ]
		NAME:commands
		COMPOSITE:[ 3 ]
				KEYWORD:[
				EXPRESSION:3
						VALUE:3
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==37 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==37
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:37
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 4 ]  = value 
NAME:commands [ 4 ]
		NAME:commands
		COMPOSITE:[ 4 ]
				KEYWORD:[
				EXPRESSION:4
						VALUE:4
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==39 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==39
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:39
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 5 ]  = value 
NAME:commands [ 5 ]
		NAME:commands
		COMPOSITE:[ 5 ]
				KEYWORD:[
				EXPRESSION:5
						VALUE:5
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[METHOD_DECLARATION] -------> , keyPressed : function ( e  )
KEYWORD:,
NAME:keyPressed
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:e 
		VARIABLE:e 
				NAME:e
				IGNORED:
KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.setCommands  ( e , true  )
CALL: this.setCommands  ( e , true  )
		IGNORED:
		SEQUENCE:this.setCommands  ( e , true  )
				COMPOSITE:this.setCommands  ( e , true  )
						COMPOSITE:this.setCommands 
								NAME:this.setCommands
								IGNORED:
						KEYWORD:(
						SEQUENCE:e , true 
								EXPRESSION:e 
										VARIABLE:e 
												NAME:e
												IGNORED:
								KEYWORD:, 
								EXPRESSION:true 
										VARIABLE:true 
												NAME:true
												IGNORED:
						KEYWORD:)


[METHOD_DECLARATION] -------> , keyReleased : function ( e  )
KEYWORD:,
NAME:keyReleased
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:e 
		VARIABLE:e 
				NAME:e
				IGNORED:
KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.setCommands  ( e , false  )
CALL: this.setCommands  ( e , false  )
		IGNORED:
		SEQUENCE:this.setCommands  ( e , false  )
				COMPOSITE:this.setCommands  ( e , false  )
						COMPOSITE:this.setCommands 
								NAME:this.setCommands
								IGNORED:
						KEYWORD:(
						SEQUENCE:e , false 
								EXPRESSION:e 
										VARIABLE:e 
												NAME:e
												IGNORED:
								KEYWORD:, 
								EXPRESSION:false 
										VARIABLE:false 
												NAME:false
												IGNORED:
						KEYWORD:)



test_sv7Drawer.js
[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var vertexPositionAttribute 
VARIABLE:var vertexPositionAttribute 
		KEYWORD:var
		NAME:vertexPositionAttribute 
				NAME:vertexPositionAttribute
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var vertexNormalAttribute 
VARIABLE:var vertexNormalAttribute 
		KEYWORD:var
		NAME:vertexNormalAttribute 
				NAME:vertexNormalAttribute
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var pMatrixUniform 
VARIABLE:var pMatrixUniform 
		KEYWORD:var
		NAME:pMatrixUniform 
				NAME:pMatrixUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var mvMatrixUniform 
VARIABLE:var mvMatrixUniform 
		KEYWORD:var
		NAME:mvMatrixUniform 
				NAME:mvMatrixUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var nMatrixUniform 
VARIABLE:var nMatrixUniform 
		KEYWORD:var
		NAME:nMatrixUniform 
				NAME:nMatrixUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var ambientColorUniform 
VARIABLE:var ambientColorUniform 
		KEYWORD:var
		NAME:ambientColorUniform 
				NAME:ambientColorUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var pointLightingLocationUniform 
VARIABLE:var pointLightingLocationUniform 
		KEYWORD:var
		NAME:pointLightingLocationUniform 
				NAME:pointLightingLocationUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var pointLightingColorUniform 
VARIABLE:var pointLightingColorUniform 
		KEYWORD:var
		NAME:pointLightingColorUniform 
				NAME:pointLightingColorUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var shaderUniform 
VARIABLE:var shaderUniform 
		KEYWORD:var
		NAME:shaderUniform 
				NAME:shaderUniform
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var shaderChoice  = 0
VARIABLE:var shaderChoice 
		KEYWORD:var
		NAME:shaderChoice 
				NAME:shaderChoice
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var sphereVertexPositionBuffer  = new  Array  (  )
VARIABLE:var sphereVertexPositionBuffer 
		KEYWORD:var
		NAME:sphereVertexPositionBuffer 
				NAME:sphereVertexPositionBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var sphereVertexNormalBuffer  = new  Array  (  )
VARIABLE:var sphereVertexNormalBuffer 
		KEYWORD:var
		NAME:sphereVertexNormalBuffer 
				NAME:sphereVertexNormalBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var sphereVertexIndexBuffer  = new  Array  (  )
VARIABLE:var sphereVertexIndexBuffer 
		KEYWORD:var
		NAME:sphereVertexIndexBuffer 
				NAME:sphereVertexIndexBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var pMatrix 
VARIABLE:var pMatrix 
		KEYWORD:var
		NAME:pMatrix 
				NAME:pMatrix
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var mvMatrix 
VARIABLE:var mvMatrix 
		KEYWORD:var
		NAME:mvMatrix 
				NAME:mvMatrix
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var normalMatrix 
VARIABLE:var normalMatrix 
		KEYWORD:var
		NAME:normalMatrix 
				NAME:normalMatrix
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var rAnglex  = 0
VARIABLE:var rAnglex 
		KEYWORD:var
		NAME:rAnglex 
				NAME:rAnglex
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var speedx  = 0
VARIABLE:var speedx 
		KEYWORD:var
		NAME:speedx 
				NAME:speedx
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var rAngley  = 0
VARIABLE:var rAngley 
		KEYWORD:var
		NAME:rAngley 
				NAME:rAngley
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var speedy  = 0
VARIABLE:var speedy 
		KEYWORD:var
		NAME:speedy 
				NAME:speedy
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var zoom  = -8
VARIABLE:var zoom 
		KEYWORD:var
		NAME:zoom 
				NAME:zoom
				IGNORED:
KEYWORD:=
EXPRESSION:-8
		VALUE:-8


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var lastTime  = 0
VARIABLE:var lastTime 
		KEYWORD:var
		NAME:lastTime 
				NAME:lastTime
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var lastTime2  = 0
VARIABLE:var lastTime2 
		KEYWORD:var
		NAME:lastTime2 
				NAME:lastTime2
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var commands  = new  Array  (  )
VARIABLE:var commands 
		KEYWORD:var
		NAME:commands 
				NAME:commands
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[CONSTRUCTOR_DECLARATION] -------> function Test_sv7Drawer  (  )
KEYWORD:function
NAME:Test_sv7Drawer 
		NAME:Test_sv7Drawer
		IGNORED:
KEYWORD:(
METHOD_VARIABLES:
KEYWORD:)


[CLASS_DECLARATION] -------> Test_sv7Drawer . prototype =
NAME:Test_sv7Drawer
KEYWORD:.
KEYWORD:prototype
KEYWORD:=


[METHOD_DECLARATION] ------->  initShaders : function ( gl  )
IGNORED:
NAME:initShaders
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var shaderProgram  =  getShaderProgram  ( gl , "shaders /shader4.fs" , "shaders /shader4.vs"  )
VARIABLE:var shaderProgram 
		KEYWORD:var
		NAME:shaderProgram 
				NAME:shaderProgram
				IGNORED:
KEYWORD:=
CALL: getShaderProgram  ( gl , "shaders /shader4.fs" , "shaders /shader4.vs"  )
		IGNORED:
		SEQUENCE:getShaderProgram  ( gl , "shaders /shader4.fs" , "shaders /shader4.vs"  )
				COMPOSITE:getShaderProgram  ( gl , "shaders /shader4.fs" , "shaders /shader4.vs"  )
						COMPOSITE:getShaderProgram 
								NAME:getShaderProgram
								IGNORED:
						KEYWORD:(
						SEQUENCE:gl , "shaders /shader4.fs" , "shaders /shader4.vs" 
								EXPRESSION:gl 
										VARIABLE:gl 
												NAME:gl
												IGNORED:
								KEYWORD:, 
								EXPRESSION:"shaders /shader4.fs" 
										VARIABLE:"shaders 
												NAME:"shaders
												IGNORED:
										OPERATOR:/
										VARIABLE:shader4.fs" 
												NAME:shader4.fs"
												IGNORED:
								KEYWORD:, 
								EXPRESSION:"shaders /shader4.vs" 
										VARIABLE:"shaders 
												NAME:"shaders
												IGNORED:
										OPERATOR:/
										VARIABLE:shader4.vs" 
												NAME:shader4.vs"
												IGNORED:
						KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> vertexPositionAttribute   = gl. getAttribLocation ( shaderProgram , "aVertexPosition"  )
NAME:vertexPositionAttribute 
		NAME:vertexPositionAttribute
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getAttribLocation ( shaderProgram , "aVertexPosition"  )
		OPENGL_CALL:gl. getAttribLocation ( shaderProgram , "aVertexPosition"  )
				KEYWORD:gl.
				NAME:getAttribLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "aVertexPosition" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"aVertexPosition" 
								VARIABLE:"aVertexPosition" 
										NAME:"aVertexPosition"
										IGNORED:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enableVertexAttribArray ( vertexPositionAttribute  )
OPENGL_CALL:gl. enableVertexAttribArray ( vertexPositionAttribute  )
		KEYWORD:gl.
		NAME:enableVertexAttribArray
		KEYWORD:(
		SEQUENCE:vertexPositionAttribute 
				EXPRESSION:vertexPositionAttribute 
						VARIABLE:vertexPositionAttribute 
								NAME:vertexPositionAttribute
								IGNORED:
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> vertexNormalAttribute   = gl. getAttribLocation ( shaderProgram , "aVertexNormal"  )
NAME:vertexNormalAttribute 
		NAME:vertexNormalAttribute
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getAttribLocation ( shaderProgram , "aVertexNormal"  )
		OPENGL_CALL:gl. getAttribLocation ( shaderProgram , "aVertexNormal"  )
				KEYWORD:gl.
				NAME:getAttribLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "aVertexNormal" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"aVertexNormal" 
								VARIABLE:"aVertexNormal" 
										NAME:"aVertexNormal"
										IGNORED:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enableVertexAttribArray ( vertexNormalAttribute  )
OPENGL_CALL:gl. enableVertexAttribArray ( vertexNormalAttribute  )
		KEYWORD:gl.
		NAME:enableVertexAttribArray
		KEYWORD:(
		SEQUENCE:vertexNormalAttribute 
				EXPRESSION:vertexNormalAttribute 
						VARIABLE:vertexNormalAttribute 
								NAME:vertexNormalAttribute
								IGNORED:
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pMatrixUniform   = gl. getUniformLocation ( shaderProgram , "uPMatrix"  )
NAME:pMatrixUniform 
		NAME:pMatrixUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uPMatrix"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uPMatrix"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uPMatrix" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uPMatrix" 
								VARIABLE:"uPMatrix" 
										NAME:"uPMatrix"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrixUniform   = gl. getUniformLocation ( shaderProgram , "uMVMatrix"  )
NAME:mvMatrixUniform 
		NAME:mvMatrixUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uMVMatrix"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uMVMatrix"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uMVMatrix" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uMVMatrix" 
								VARIABLE:"uMVMatrix" 
										NAME:"uMVMatrix"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> nMatrixUniform   = gl. getUniformLocation ( shaderProgram , "uNMatrix"  )
NAME:nMatrixUniform 
		NAME:nMatrixUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uNMatrix"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uNMatrix"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uNMatrix" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uNMatrix" 
								VARIABLE:"uNMatrix" 
										NAME:"uNMatrix"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> ambientColorUniform   = gl. getUniformLocation ( shaderProgram , "uAmbientColor"  )
NAME:ambientColorUniform 
		NAME:ambientColorUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uAmbientColor"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uAmbientColor"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uAmbientColor" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uAmbientColor" 
								VARIABLE:"uAmbientColor" 
										NAME:"uAmbientColor"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pointLightingLocationUniform   = gl. getUniformLocation ( shaderProgram , "uPointLightingLocation"  )
NAME:pointLightingLocationUniform 
		NAME:pointLightingLocationUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uPointLightingLocation"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uPointLightingLocation"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uPointLightingLocation" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uPointLightingLocation" 
								VARIABLE:"uPointLightingLocation" 
										NAME:"uPointLightingLocation"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pointLightingColorUniform   = gl. getUniformLocation ( shaderProgram , "uPointLightingColor"  )
NAME:pointLightingColorUniform 
		NAME:pointLightingColorUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uPointLightingColor"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uPointLightingColor"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uPointLightingColor" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uPointLightingColor" 
								VARIABLE:"uPointLightingColor" 
										NAME:"uPointLightingColor"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> shaderUniform   = gl. getUniformLocation ( shaderProgram , "uShader"  )
NAME:shaderUniform 
		NAME:shaderUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uShader"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uShader"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uShader" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uShader" 
								VARIABLE:"uShader" 
										NAME:"uShader"
										IGNORED:
				KEYWORD:)


[METHOD_DECLARATION] -------> , setMatrixUniforms : function ( gl  )
KEYWORD:,
NAME:setMatrixUniforms
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniformMatrix4fv ( pMatrixUniform , false , pMatrix  )
OPENGL_CALL:gl. uniformMatrix4fv ( pMatrixUniform , false , pMatrix  )
		KEYWORD:gl.
		NAME:uniformMatrix4fv
		KEYWORD:(
		SEQUENCE:pMatrixUniform , false , pMatrix 
				EXPRESSION:pMatrixUniform 
						VARIABLE:pMatrixUniform 
								NAME:pMatrixUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:pMatrix 
						VARIABLE:pMatrix 
								NAME:pMatrix
								IGNORED:
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniformMatrix4fv ( mvMatrixUniform , false , mvMatrix  )
OPENGL_CALL:gl. uniformMatrix4fv ( mvMatrixUniform , false , mvMatrix  )
		KEYWORD:gl.
		NAME:uniformMatrix4fv
		KEYWORD:(
		SEQUENCE:mvMatrixUniform , false , mvMatrix 
				EXPRESSION:mvMatrixUniform 
						VARIABLE:mvMatrixUniform 
								NAME:mvMatrixUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:mvMatrix 
						VARIABLE:mvMatrix 
								NAME:mvMatrix
								IGNORED:
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniformMatrix3fv ( nMatrixUniform , false , normalMatrix  )
OPENGL_CALL:gl. uniformMatrix3fv ( nMatrixUniform , false , normalMatrix  )
		KEYWORD:gl.
		NAME:uniformMatrix3fv
		KEYWORD:(
		SEQUENCE:nMatrixUniform , false , normalMatrix 
				EXPRESSION:nMatrixUniform 
						VARIABLE:nMatrixUniform 
								NAME:nMatrixUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:normalMatrix 
						VARIABLE:normalMatrix 
								NAME:normalMatrix
								IGNORED:
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniform3f ( ambientColorUniform , 0.1, 0.1, 0.1 )
OPENGL_CALL:gl. uniform3f ( ambientColorUniform , 0.1, 0.1, 0.1 )
		KEYWORD:gl.
		NAME:uniform3f
		KEYWORD:(
		SEQUENCE:ambientColorUniform , 0.1, 0.1, 0.1
				EXPRESSION:ambientColorUniform 
						VARIABLE:ambientColorUniform 
								NAME:ambientColorUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0.1
						VALUE:0.1
				KEYWORD:, 
				EXPRESSION:0.1
						VALUE:0.1
				KEYWORD:, 
				EXPRESSION:0.1
						VALUE:0.1
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniform3f ( pointLightingLocationUniform , 0, 0, -5.1 )
OPENGL_CALL:gl. uniform3f ( pointLightingLocationUniform , 0, 0, -5.1 )
		KEYWORD:gl.
		NAME:uniform3f
		KEYWORD:(
		SEQUENCE:pointLightingLocationUniform , 0, 0, -5.1
				EXPRESSION:pointLightingLocationUniform 
						VARIABLE:pointLightingLocationUniform 
								NAME:pointLightingLocationUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:-5.1
						VALUE:-5.1
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniform3f ( pointLightingColorUniform , 0.7, 0.7, 0.7 )
OPENGL_CALL:gl. uniform3f ( pointLightingColorUniform , 0.7, 0.7, 0.7 )
		KEYWORD:gl.
		NAME:uniform3f
		KEYWORD:(
		SEQUENCE:pointLightingColorUniform , 0.7, 0.7, 0.7
				EXPRESSION:pointLightingColorUniform 
						VARIABLE:pointLightingColorUniform 
								NAME:pointLightingColorUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0.7
						VALUE:0.7
				KEYWORD:, 
				EXPRESSION:0.7
						VALUE:0.7
				KEYWORD:, 
				EXPRESSION:0.7
						VALUE:0.7
		KEYWORD:)


[METHOD_DECLARATION] -------> , initBuffers : function ( gl  )
KEYWORD:,
NAME:initBuffers
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var latitudeBands  = 15
VARIABLE:var latitudeBands 
		KEYWORD:var
		NAME:latitudeBands 
				NAME:latitudeBands
				IGNORED:
KEYWORD:=
EXPRESSION:15
		VALUE:15


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var longitudeBands  = 15
VARIABLE:var longitudeBands 
		KEYWORD:var
		NAME:longitudeBands 
				NAME:longitudeBands
				IGNORED:
KEYWORD:=
EXPRESSION:15
		VALUE:15


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var radius  = 2
VARIABLE:var radius 
		KEYWORD:var
		NAME:radius 
				NAME:radius
				IGNORED:
KEYWORD:=
EXPRESSION:2
		VALUE:2


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var vertices  = new  Array  (  )
VARIABLE:var vertices 
		KEYWORD:var
		NAME:vertices 
				NAME:vertices
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var normals  = new  Array  (  )
VARIABLE:var normals 
		KEYWORD:var
		NAME:normals 
				NAME:normals
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var sphereVertexIndices  = new  Array  (  )
VARIABLE:var sphereVertexIndices 
		KEYWORD:var
		NAME:sphereVertexIndices 
				NAME:sphereVertexIndices
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[FOR, ASSIGNMENT, LINE_OF_CODE] -------> for ( var i  = 0 ; i  <= latitudeBands  ; i  ++  )
KEYWORD:for
KEYWORD:(
COMPOSITE:var i  = 0
		VARIABLE:var i 
				KEYWORD:var
				NAME:i 
						NAME:i
						IGNORED:
		KEYWORD:=
		EXPRESSION:0
				VALUE:0
KEYWORD:;
VALUE:i 
		VALUE:i
		IGNORED:
KEYWORD:<=
EXPRESSION:latitudeBands 
		VARIABLE:latitudeBands 
				NAME:latitudeBands
				IGNORED:
KEYWORD:;
SEQUENCE:i  ++ 
		COMPOSITE:i  ++ 
				VARIABLE:i 
						VARIABLE:i
						IGNORED:
				KEYWORD:++
				EXPRESSION:
						IGNORED:
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var theta  = i *Math.PI /latitudeBands 
VARIABLE:var theta 
		KEYWORD:var
		NAME:theta 
				NAME:theta
				IGNORED:
KEYWORD:=
EXPRESSION:i *Math.PI /latitudeBands 
		VARIABLE:i 
				NAME:i
				IGNORED:
		OPERATOR:*
		VARIABLE:Math.PI 
				NAME:Math.PI
				IGNORED:
		OPERATOR:/
		VARIABLE:latitudeBands 
				NAME:latitudeBands
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var sinTheta  =  Math.sin  ( theta  )
VARIABLE:var sinTheta 
		KEYWORD:var
		NAME:sinTheta 
				NAME:sinTheta
				IGNORED:
KEYWORD:=
CALL: Math.sin  ( theta  )
		IGNORED:
		SEQUENCE:Math.sin  ( theta  )
				COMPOSITE:Math.sin  ( theta  )
						COMPOSITE:Math.sin 
								NAME:Math.sin
								IGNORED:
						KEYWORD:(
						SEQUENCE:theta 
								EXPRESSION:theta 
										VARIABLE:theta 
												NAME:theta
												IGNORED:
						KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cosTheta  =  Math.cos  ( theta  )
VARIABLE:var cosTheta 
		KEYWORD:var
		NAME:cosTheta 
				NAME:cosTheta
				IGNORED:
KEYWORD:=
CALL: Math.cos  ( theta  )
		IGNORED:
		SEQUENCE:Math.cos  ( theta  )
				COMPOSITE:Math.cos  ( theta  )
						COMPOSITE:Math.cos 
								NAME:Math.cos
								IGNORED:
						KEYWORD:(
						SEQUENCE:theta 
								EXPRESSION:theta 
										VARIABLE:theta 
												NAME:theta
												IGNORED:
						KEYWORD:)


[FOR, ASSIGNMENT, LINE_OF_CODE] -------> for ( var j  = 0 ; j  <= longitudeBands  ; j  ++  )
KEYWORD:for
KEYWORD:(
COMPOSITE:var j  = 0
		VARIABLE:var j 
				KEYWORD:var
				NAME:j 
						NAME:j
						IGNORED:
		KEYWORD:=
		EXPRESSION:0
				VALUE:0
KEYWORD:;
VALUE:j 
		VALUE:j
		IGNORED:
KEYWORD:<=
EXPRESSION:longitudeBands 
		VARIABLE:longitudeBands 
				NAME:longitudeBands
				IGNORED:
KEYWORD:;
SEQUENCE:j  ++ 
		COMPOSITE:j  ++ 
				VARIABLE:j 
						VARIABLE:j
						IGNORED:
				KEYWORD:++
				EXPRESSION:
						IGNORED:
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var phi  = ( j *2*Math.PI /longitudeBands  )
VARIABLE:var phi 
		KEYWORD:var
		NAME:phi 
				NAME:phi
				IGNORED:
KEYWORD:=
EXPRESSION:( j *2*Math.PI /longitudeBands  )
		COMPOSITE:( j *2*Math.PI /longitudeBands  )
				KEYWORD:(
				EXPRESSION:j *2*Math.PI /longitudeBands 
						VARIABLE:j 
								NAME:j
								IGNORED:
						OPERATOR:*
						VALUE:2
						OPERATOR:*
						VARIABLE:Math.PI 
								NAME:Math.PI
								IGNORED:
						OPERATOR:/
						VARIABLE:longitudeBands 
								NAME:longitudeBands
								IGNORED:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var sinPhi  =  Math.sin  ( phi  )
VARIABLE:var sinPhi 
		KEYWORD:var
		NAME:sinPhi 
				NAME:sinPhi
				IGNORED:
KEYWORD:=
CALL: Math.sin  ( phi  )
		IGNORED:
		SEQUENCE:Math.sin  ( phi  )
				COMPOSITE:Math.sin  ( phi  )
						COMPOSITE:Math.sin 
								NAME:Math.sin
								IGNORED:
						KEYWORD:(
						SEQUENCE:phi 
								EXPRESSION:phi 
										VARIABLE:phi 
												NAME:phi
												IGNORED:
						KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cosPhi  =  Math.cos  ( phi  )
VARIABLE:var cosPhi 
		KEYWORD:var
		NAME:cosPhi 
				NAME:cosPhi
				IGNORED:
KEYWORD:=
CALL: Math.cos  ( phi  )
		IGNORED:
		SEQUENCE:Math.cos  ( phi  )
				COMPOSITE:Math.cos  ( phi  )
						COMPOSITE:Math.cos 
								NAME:Math.cos
								IGNORED:
						KEYWORD:(
						SEQUENCE:phi 
								EXPRESSION:phi 
										VARIABLE:phi 
												NAME:phi
												IGNORED:
						KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var x  = cosPhi *sinTheta 
VARIABLE:var x 
		KEYWORD:var
		NAME:x 
				NAME:x
				IGNORED:
KEYWORD:=
EXPRESSION:cosPhi *sinTheta 
		VARIABLE:cosPhi 
				NAME:cosPhi
				IGNORED:
		OPERATOR:*
		VARIABLE:sinTheta 
				NAME:sinTheta
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var y  = cosTheta 
VARIABLE:var y 
		KEYWORD:var
		NAME:y 
				NAME:y
				IGNORED:
KEYWORD:=
EXPRESSION:cosTheta 
		VARIABLE:cosTheta 
				NAME:cosTheta
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var z  = sinPhi *sinTheta 
VARIABLE:var z 
		KEYWORD:var
		NAME:z 
				NAME:z
				IGNORED:
KEYWORD:=
EXPRESSION:sinPhi *sinTheta 
		VARIABLE:sinPhi 
				NAME:sinPhi
				IGNORED:
		OPERATOR:*
		VARIABLE:sinTheta 
				NAME:sinTheta
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var index  = 3*( j +i *( longitudeBands +1 ) )
VARIABLE:var index 
		KEYWORD:var
		NAME:index 
				NAME:index
				IGNORED:
KEYWORD:=
EXPRESSION:3*( j +i *( longitudeBands +1 ) )
		VALUE:3
		OPERATOR:*
		COMPOSITE:( j +i *( longitudeBands +1 ) )
				KEYWORD:(
				EXPRESSION:j +i *( longitudeBands +1 )
						VARIABLE:j 
								NAME:j
								IGNORED:
						OPERATOR:+
						VARIABLE:i 
								NAME:i
								IGNORED:
						OPERATOR:*
						COMPOSITE:( longitudeBands +1 )
								KEYWORD:(
								EXPRESSION:longitudeBands +1
										VARIABLE:longitudeBands 
												NAME:longitudeBands
												IGNORED:
										OPERATOR:+
										VALUE:1
								KEYWORD:)
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> vertices [ index  ]  = radius *x 
NAME:vertices [ index  ]
		NAME:vertices
		COMPOSITE:[ index  ]
				KEYWORD:[
				EXPRESSION:index 
						NAME:index 
								NAME:index
								IGNORED:
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:radius *x 
		VARIABLE:radius 
				NAME:radius
				IGNORED:
		OPERATOR:*
		VARIABLE:x 
				NAME:x
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> vertices [ index +1 ]  = radius *y 
NAME:vertices [ index +1 ]
		NAME:vertices
		COMPOSITE:[ index +1 ]
				KEYWORD:[
				EXPRESSION:index +1
						NAME:index 
								NAME:index
								IGNORED:
						OPERATOR:+
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:radius *y 
		VARIABLE:radius 
				NAME:radius
				IGNORED:
		OPERATOR:*
		VARIABLE:y 
				NAME:y
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> vertices [ index +2 ]  = radius *z 
NAME:vertices [ index +2 ]
		NAME:vertices
		COMPOSITE:[ index +2 ]
				KEYWORD:[
				EXPRESSION:index +2
						NAME:index 
								NAME:index
								IGNORED:
						OPERATOR:+
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:radius *z 
		VARIABLE:radius 
				NAME:radius
				IGNORED:
		OPERATOR:*
		VARIABLE:z 
				NAME:z
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> normals [ index  ]  = x 
NAME:normals [ index  ]
		NAME:normals
		COMPOSITE:[ index  ]
				KEYWORD:[
				EXPRESSION:index 
						NAME:index 
								NAME:index
								IGNORED:
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:x 
		VARIABLE:x 
				NAME:x
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> normals [ index +1 ]  = y 
NAME:normals [ index +1 ]
		NAME:normals
		COMPOSITE:[ index +1 ]
				KEYWORD:[
				EXPRESSION:index +1
						NAME:index 
								NAME:index
								IGNORED:
						OPERATOR:+
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:y 
		VARIABLE:y 
				NAME:y
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> normals [ index +2 ]  = z 
NAME:normals [ index +2 ]
		NAME:normals
		COMPOSITE:[ index +2 ]
				KEYWORD:[
				EXPRESSION:index +2
						NAME:index 
								NAME:index
								IGNORED:
						OPERATOR:+
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:z 
		VARIABLE:z 
				NAME:z
				IGNORED:


[FOR, ASSIGNMENT, LINE_OF_CODE] -------> for ( var i  = 0 ; i  < latitudeBands  ; i  ++  )
KEYWORD:for
KEYWORD:(
COMPOSITE:var i  = 0
		VARIABLE:var i 
				KEYWORD:var
				NAME:i 
						NAME:i
						IGNORED:
		KEYWORD:=
		EXPRESSION:0
				VALUE:0
KEYWORD:;
VALUE:i 
		VALUE:i
		IGNORED:
KEYWORD:<
EXPRESSION:latitudeBands 
		VARIABLE:latitudeBands 
				NAME:latitudeBands
				IGNORED:
KEYWORD:;
SEQUENCE:i  ++ 
		COMPOSITE:i  ++ 
				VARIABLE:i 
						VARIABLE:i
						IGNORED:
				KEYWORD:++
				EXPRESSION:
						IGNORED:
KEYWORD:)


[FOR, ASSIGNMENT, LINE_OF_CODE] -------> for ( var j  = 0 ; j  < longitudeBands  ; j  ++  )
KEYWORD:for
KEYWORD:(
COMPOSITE:var j  = 0
		VARIABLE:var j 
				KEYWORD:var
				NAME:j 
						NAME:j
						IGNORED:
		KEYWORD:=
		EXPRESSION:0
				VALUE:0
KEYWORD:;
VALUE:j 
		VALUE:j
		IGNORED:
KEYWORD:<
EXPRESSION:longitudeBands 
		VARIABLE:longitudeBands 
				NAME:longitudeBands
				IGNORED:
KEYWORD:;
SEQUENCE:j  ++ 
		COMPOSITE:j  ++ 
				VARIABLE:j 
						VARIABLE:j
						IGNORED:
				KEYWORD:++
				EXPRESSION:
						IGNORED:
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var first  = ( i *( longitudeBands +1 ) )+j 
VARIABLE:var first 
		KEYWORD:var
		NAME:first 
				NAME:first
				IGNORED:
KEYWORD:=
EXPRESSION:( i *( longitudeBands +1 ) )+j 
		COMPOSITE:( i *( longitudeBands +1 ) )
				KEYWORD:(
				EXPRESSION:i *( longitudeBands +1 )
						VARIABLE:i 
								NAME:i
								IGNORED:
						OPERATOR:*
						COMPOSITE:( longitudeBands +1 )
								KEYWORD:(
								EXPRESSION:longitudeBands +1
										VARIABLE:longitudeBands 
												NAME:longitudeBands
												IGNORED:
										OPERATOR:+
										VALUE:1
								KEYWORD:)
				KEYWORD:)
		OPERATOR:+
		VARIABLE:j 
				NAME:j
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var second  = first +longitudeBands +1
VARIABLE:var second 
		KEYWORD:var
		NAME:second 
				NAME:second
				IGNORED:
KEYWORD:=
EXPRESSION:first +longitudeBands +1
		VARIABLE:first 
				NAME:first
				IGNORED:
		OPERATOR:+
		VARIABLE:longitudeBands 
				NAME:longitudeBands
				IGNORED:
		OPERATOR:+
		VALUE:1


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var index  = 6*( j +i *longitudeBands  )
VARIABLE:var index 
		KEYWORD:var
		NAME:index 
				NAME:index
				IGNORED:
KEYWORD:=
EXPRESSION:6*( j +i *longitudeBands  )
		VALUE:6
		OPERATOR:*
		COMPOSITE:( j +i *longitudeBands  )
				KEYWORD:(
				EXPRESSION:j +i *longitudeBands 
						VARIABLE:j 
								NAME:j
								IGNORED:
						OPERATOR:+
						VARIABLE:i 
								NAME:i
								IGNORED:
						OPERATOR:*
						VARIABLE:longitudeBands 
								NAME:longitudeBands
								IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> sphereVertexIndices [ index  ]  = first 
NAME:sphereVertexIndices [ index  ]
		NAME:sphereVertexIndices
		COMPOSITE:[ index  ]
				KEYWORD:[
				EXPRESSION:index 
						NAME:index 
								NAME:index
								IGNORED:
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:first 
		VARIABLE:first 
				NAME:first
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> sphereVertexIndices [ index +1 ]  = second 
NAME:sphereVertexIndices [ index +1 ]
		NAME:sphereVertexIndices
		COMPOSITE:[ index +1 ]
				KEYWORD:[
				EXPRESSION:index +1
						NAME:index 
								NAME:index
								IGNORED:
						OPERATOR:+
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:second 
		VARIABLE:second 
				NAME:second
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> sphereVertexIndices [ index +2 ]  = first +1
NAME:sphereVertexIndices [ index +2 ]
		NAME:sphereVertexIndices
		COMPOSITE:[ index +2 ]
				KEYWORD:[
				EXPRESSION:index +2
						NAME:index 
								NAME:index
								IGNORED:
						OPERATOR:+
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:first +1
		VARIABLE:first 
				NAME:first
				IGNORED:
		OPERATOR:+
		VALUE:1


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> sphereVertexIndices [ index +3 ]  = second 
NAME:sphereVertexIndices [ index +3 ]
		NAME:sphereVertexIndices
		COMPOSITE:[ index +3 ]
				KEYWORD:[
				EXPRESSION:index +3
						NAME:index 
								NAME:index
								IGNORED:
						OPERATOR:+
						VALUE:3
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:second 
		VARIABLE:second 
				NAME:second
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> sphereVertexIndices [ index +4 ]  = second +1
NAME:sphereVertexIndices [ index +4 ]
		NAME:sphereVertexIndices
		COMPOSITE:[ index +4 ]
				KEYWORD:[
				EXPRESSION:index +4
						NAME:index 
								NAME:index
								IGNORED:
						OPERATOR:+
						VALUE:4
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:second +1
		VARIABLE:second 
				NAME:second
				IGNORED:
		OPERATOR:+
		VALUE:1


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> sphereVertexIndices [ index +5 ]  = first +1
NAME:sphereVertexIndices [ index +5 ]
		NAME:sphereVertexIndices
		COMPOSITE:[ index +5 ]
				KEYWORD:[
				EXPRESSION:index +5
						NAME:index 
								NAME:index
								IGNORED:
						OPERATOR:+
						VALUE:5
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:first +1
		VARIABLE:first 
				NAME:first
				IGNORED:
		OPERATOR:+
		VALUE:1


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> sphereVertexPositionBuffer [ 0 ]  = gl. createBuffer (  )
NAME:sphereVertexPositionBuffer [ 0 ]
		NAME:sphereVertexPositionBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, sphereVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, sphereVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, sphereVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:sphereVertexPositionBuffer [ 0 ]
						VARIABLE:sphereVertexPositionBuffer [ 0 ]
								NAME:sphereVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( vertices  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( vertices  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( vertices  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( vertices  )
						NEW_STATEMENT:new  Float32Array  ( vertices  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( vertices  )
										KEYWORD:(
										SEQUENCE:vertices 
												EXPRESSION:vertices 
														VARIABLE:vertices 
																NAME:vertices
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> sphereVertexPositionBuffer [ 1 ]  = 3
NAME:sphereVertexPositionBuffer [ 1 ]
		NAME:sphereVertexPositionBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:3
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> sphereVertexPositionBuffer [ 2 ]  = vertices.length /3
NAME:sphereVertexPositionBuffer [ 2 ]
		NAME:sphereVertexPositionBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:vertices.length /3
		VARIABLE:vertices.length 
				NAME:vertices.length
				IGNORED:
		OPERATOR:/
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> sphereVertexNormalBuffer [ 0 ]  = gl. createBuffer (  )
NAME:sphereVertexNormalBuffer [ 0 ]
		NAME:sphereVertexNormalBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, sphereVertexNormalBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, sphereVertexNormalBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, sphereVertexNormalBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:sphereVertexNormalBuffer [ 0 ]
						VARIABLE:sphereVertexNormalBuffer [ 0 ]
								NAME:sphereVertexNormalBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( normals  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( normals  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( normals  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( normals  )
						NEW_STATEMENT:new  Float32Array  ( normals  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( normals  )
										KEYWORD:(
										SEQUENCE:normals 
												EXPRESSION:normals 
														VARIABLE:normals 
																NAME:normals
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> sphereVertexNormalBuffer [ 1 ]  = 3
NAME:sphereVertexNormalBuffer [ 1 ]
		NAME:sphereVertexNormalBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:3
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> sphereVertexNormalBuffer [ 2 ]  = vertices.length /3
NAME:sphereVertexNormalBuffer [ 2 ]
		NAME:sphereVertexNormalBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:vertices.length /3
		VARIABLE:vertices.length 
				NAME:vertices.length
				IGNORED:
		OPERATOR:/
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> sphereVertexIndexBuffer [ 0 ]  = gl. createBuffer (  )
NAME:sphereVertexIndexBuffer [ 0 ]
		NAME:sphereVertexIndexBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, sphereVertexIndexBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, sphereVertexIndexBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ELEMENT_ARRAY_BUFFER, sphereVertexIndexBuffer [ 0 ]
				EXPRESSION:gl. ELEMENT_ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ELEMENT_ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ELEMENT_ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:sphereVertexIndexBuffer [ 0 ]
						VARIABLE:sphereVertexIndexBuffer [ 0 ]
								NAME:sphereVertexIndexBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ELEMENT_ARRAY_BUFFER, new  Uint16Array  ( sphereVertexIndices  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ELEMENT_ARRAY_BUFFER, new  Uint16Array  ( sphereVertexIndices  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ELEMENT_ARRAY_BUFFER, new  Uint16Array  ( sphereVertexIndices  ), gl. STATIC_DRAW
				EXPRESSION:gl. ELEMENT_ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ELEMENT_ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ELEMENT_ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Uint16Array  ( sphereVertexIndices  )
						NEW_STATEMENT:new  Uint16Array  ( sphereVertexIndices  )
								KEYWORD:new 
								VARIABLE:Uint16Array 
										NAME:Uint16Array
										IGNORED:
								COMPOSITE:( sphereVertexIndices  )
										KEYWORD:(
										SEQUENCE:sphereVertexIndices 
												EXPRESSION:sphereVertexIndices 
														VARIABLE:sphereVertexIndices 
																NAME:sphereVertexIndices
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> sphereVertexIndexBuffer [ 1 ]  = 1
NAME:sphereVertexIndexBuffer [ 1 ]
		NAME:sphereVertexIndexBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:1
		VALUE:1


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> sphereVertexIndexBuffer [ 2 ]  = sphereVertexIndices.length 
NAME:sphereVertexIndexBuffer [ 2 ]
		NAME:sphereVertexIndexBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:sphereVertexIndices.length 
		VARIABLE:sphereVertexIndices.length 
				NAME:sphereVertexIndices.length
				IGNORED:


[METHOD_DECLARATION] -------> , drawScene : function ( gl  )
KEYWORD:,
NAME:drawScene
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. clearColor ( 0.0, 0.0, 0.0, 1.0 )
OPENGL_CALL:gl. clearColor ( 0.0, 0.0, 0.0, 1.0 )
		KEYWORD:gl.
		NAME:clearColor
		KEYWORD:(
		SEQUENCE:0.0, 0.0, 0.0, 1.0
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:, 
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:, 
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:, 
				EXPRESSION:1.0
						VALUE:1.0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enable ( gl. DEPTH_TEST )
OPENGL_CALL:gl. enable ( gl. DEPTH_TEST )
		KEYWORD:gl.
		NAME:enable
		KEYWORD:(
		SEQUENCE:gl. DEPTH_TEST
				EXPRESSION:gl. DEPTH_TEST
						OPENGL_CONSTANT:gl. DEPTH_TEST
								KEYWORD:gl.
								NAME:DEPTH_TEST
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. cullFace ( gl. BACK )
OPENGL_CALL:gl. cullFace ( gl. BACK )
		KEYWORD:gl.
		NAME:cullFace
		KEYWORD:(
		SEQUENCE:gl. BACK
				EXPRESSION:gl. BACK
						OPENGL_CONSTANT:gl. BACK
								KEYWORD:gl.
								NAME:BACK
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enable ( gl. CULL_FACE )
OPENGL_CALL:gl. enable ( gl. CULL_FACE )
		KEYWORD:gl.
		NAME:enable
		KEYWORD:(
		SEQUENCE:gl. CULL_FACE
				EXPRESSION:gl. CULL_FACE
						OPENGL_CONSTANT:gl. CULL_FACE
								KEYWORD:gl.
								NAME:CULL_FACE
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.handleKeys  (  )
CALL: this.handleKeys  (  )
		IGNORED:
		SEQUENCE:this.handleKeys  (  )
				COMPOSITE:this.handleKeys  (  )
						COMPOSITE:this.handleKeys 
								NAME:this.handleKeys
								IGNORED:
						KEYWORD:(
						SEQUENCE:
						KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. viewport ( 0, 0, 500, 500 )
OPENGL_CALL:gl. viewport ( 0, 0, 500, 500 )
		KEYWORD:gl.
		NAME:viewport
		KEYWORD:(
		SEQUENCE:0, 0, 500, 500
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:500
						VALUE:500
				KEYWORD:, 
				EXPRESSION:500
						VALUE:500
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. clear ( gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT )
OPENGL_CALL:gl. clear ( gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT )
		KEYWORD:gl.
		NAME:clear
		KEYWORD:(
		SEQUENCE:gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT
				EXPRESSION:gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT
						OPENGL_CONSTANT:gl. COLOR_BUFFER_BIT
								KEYWORD:gl.
								NAME:COLOR_BUFFER_BIT
						OPERATOR:|
						OPENGL_CONSTANT:gl. DEPTH_BUFFER_BIT
								KEYWORD:gl.
								NAME:DEPTH_BUFFER_BIT
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniform1i ( shaderUniform , shaderChoice  )
OPENGL_CALL:gl. uniform1i ( shaderUniform , shaderChoice  )
		KEYWORD:gl.
		NAME:uniform1i
		KEYWORD:(
		SEQUENCE:shaderUniform , shaderChoice 
				EXPRESSION:shaderUniform 
						VARIABLE:shaderUniform 
								NAME:shaderUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:shaderChoice 
						VARIABLE:shaderChoice 
								NAME:shaderChoice
								IGNORED:
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cx  =  Math.cos  ( rAnglex  )
VARIABLE:var cx 
		KEYWORD:var
		NAME:cx 
				NAME:cx
				IGNORED:
KEYWORD:=
CALL: Math.cos  ( rAnglex  )
		IGNORED:
		SEQUENCE:Math.cos  ( rAnglex  )
				COMPOSITE:Math.cos  ( rAnglex  )
						COMPOSITE:Math.cos 
								NAME:Math.cos
								IGNORED:
						KEYWORD:(
						SEQUENCE:rAnglex 
								EXPRESSION:rAnglex 
										VARIABLE:rAnglex 
												NAME:rAnglex
												IGNORED:
						KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var sx  =  Math.sin  ( rAnglex  )
VARIABLE:var sx 
		KEYWORD:var
		NAME:sx 
				NAME:sx
				IGNORED:
KEYWORD:=
CALL: Math.sin  ( rAnglex  )
		IGNORED:
		SEQUENCE:Math.sin  ( rAnglex  )
				COMPOSITE:Math.sin  ( rAnglex  )
						COMPOSITE:Math.sin 
								NAME:Math.sin
								IGNORED:
						KEYWORD:(
						SEQUENCE:rAnglex 
								EXPRESSION:rAnglex 
										VARIABLE:rAnglex 
												NAME:rAnglex
												IGNORED:
						KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cy  =  Math.cos  ( rAngley  )
VARIABLE:var cy 
		KEYWORD:var
		NAME:cy 
				NAME:cy
				IGNORED:
KEYWORD:=
CALL: Math.cos  ( rAngley  )
		IGNORED:
		SEQUENCE:Math.cos  ( rAngley  )
				COMPOSITE:Math.cos  ( rAngley  )
						COMPOSITE:Math.cos 
								NAME:Math.cos
								IGNORED:
						KEYWORD:(
						SEQUENCE:rAngley 
								EXPRESSION:rAngley 
										VARIABLE:rAngley 
												NAME:rAngley
												IGNORED:
						KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var sy  =  Math.sin  ( rAngley  )
VARIABLE:var sy 
		KEYWORD:var
		NAME:sy 
				NAME:sy
				IGNORED:
KEYWORD:=
CALL: Math.sin  ( rAngley  )
		IGNORED:
		SEQUENCE:Math.sin  ( rAngley  )
				COMPOSITE:Math.sin  ( rAngley  )
						COMPOSITE:Math.sin 
								NAME:Math.sin
								IGNORED:
						KEYWORD:(
						SEQUENCE:rAngley 
								EXPRESSION:rAngley 
										VARIABLE:rAngley 
												NAME:rAngley
												IGNORED:
						KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pMatrix   = new  Float32Array  ( [ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ] )
NAME:pMatrix 
		NAME:pMatrix
		IGNORED:
IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Float32Array  ( [ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ] )
		KEYWORD:new 
		TYPE:Float32Array 
				TYPE:Float32Array
				IGNORED:
		COMPOSITE:( [ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ] )
				KEYWORD:(
				SEQUENCE:[ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ]
						ARRAY_CONTENT:[ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ]
								KEYWORD:[
								SEQUENCE:2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0
										EXPRESSION:2.4142136573791504
												VALUE:2.4142136573791504
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:2.4142136573791504
												VALUE:2.4142136573791504
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:-1.0020020008087158
												VALUE:-1.0020020008087158
										KEYWORD:,
										EXPRESSION:-1
												VALUE:-1
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:-0.20020020008087158
												VALUE:-0.20020020008087158
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
								KEYWORD:]
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix   = new  Float32Array  ( [ cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,0,0,zoom ,1 ] )
NAME:mvMatrix 
		NAME:mvMatrix
		IGNORED:
IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Float32Array  ( [ cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,0,0,zoom ,1 ] )
		KEYWORD:new 
		TYPE:Float32Array 
				TYPE:Float32Array
				IGNORED:
		COMPOSITE:( [ cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,0,0,zoom ,1 ] )
				KEYWORD:(
				SEQUENCE:[ cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,0,0,zoom ,1 ]
						ARRAY_CONTENT:[ cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,0,0,zoom ,1 ]
								KEYWORD:[
								SEQUENCE:cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,0,0,zoom ,1
										EXPRESSION:cy 
												VARIABLE:cy 
														NAME:cy
														IGNORED:
										KEYWORD:,
										EXPRESSION:sx *sy 
												VARIABLE:sx 
														NAME:sx
														IGNORED:
												OPERATOR:*
												VARIABLE:sy 
														NAME:sy
														IGNORED:
										KEYWORD:,
										EXPRESSION:-cx*sy 
												VALUE:-cx
												OPERATOR:*
												VARIABLE:sy 
														NAME:sy
														IGNORED:
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:cx 
												VARIABLE:cx 
														NAME:cx
														IGNORED:
										KEYWORD:,
										EXPRESSION:sx 
												VARIABLE:sx 
														NAME:sx
														IGNORED:
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:sy 
												VARIABLE:sy 
														NAME:sy
														IGNORED:
										KEYWORD:,
										EXPRESSION:-cy*sx 
												VALUE:-cy
												OPERATOR:*
												VARIABLE:sx 
														NAME:sx
														IGNORED:
										KEYWORD:,
										EXPRESSION:cx *cy 
												VARIABLE:cx 
														NAME:cx
														IGNORED:
												OPERATOR:*
												VARIABLE:cy 
														NAME:cy
														IGNORED:
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:zoom 
												VARIABLE:zoom 
														NAME:zoom
														IGNORED:
										KEYWORD:,
										EXPRESSION:1
												VALUE:1
								KEYWORD:]
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> normalMatrix   = new  Float32Array  ( 9 )
NAME:normalMatrix 
		NAME:normalMatrix
		IGNORED:
IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Float32Array  ( 9 )
		KEYWORD:new 
		TYPE:Float32Array 
				TYPE:Float32Array
				IGNORED:
		COMPOSITE:( 9 )
				KEYWORD:(
				SEQUENCE:9
						EXPRESSION:9
								VALUE:9
				KEYWORD:)


[FOR, ASSIGNMENT, LINE_OF_CODE] -------> for ( var i  = 0 ; i  < 3 ; i  ++  )
KEYWORD:for
KEYWORD:(
COMPOSITE:var i  = 0
		VARIABLE:var i 
				KEYWORD:var
				NAME:i 
						NAME:i
						IGNORED:
		KEYWORD:=
		EXPRESSION:0
				VALUE:0
KEYWORD:;
VALUE:i 
		VALUE:i
		IGNORED:
KEYWORD:<
EXPRESSION:3
		VALUE:3
KEYWORD:;
SEQUENCE:i  ++ 
		COMPOSITE:i  ++ 
				VARIABLE:i 
						VARIABLE:i
						IGNORED:
				KEYWORD:++
				EXPRESSION:
						IGNORED:
KEYWORD:)


[FOR, ASSIGNMENT, LINE_OF_CODE] -------> for ( var j  = 0 ; j  < 3 ; j  ++  )
KEYWORD:for
KEYWORD:(
COMPOSITE:var j  = 0
		VARIABLE:var j 
				KEYWORD:var
				NAME:j 
						NAME:j
						IGNORED:
		KEYWORD:=
		EXPRESSION:0
				VALUE:0
KEYWORD:;
VALUE:j 
		VALUE:j
		IGNORED:
KEYWORD:<
EXPRESSION:3
		VALUE:3
KEYWORD:;
SEQUENCE:j  ++ 
		COMPOSITE:j  ++ 
				VARIABLE:j 
						VARIABLE:j
						IGNORED:
				KEYWORD:++
				EXPRESSION:
						IGNORED:
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> normalMatrix [ i +3*j  ]  = mvMatrix [ i +4*j  ]
NAME:normalMatrix [ i +3*j  ]
		NAME:normalMatrix
		COMPOSITE:[ i +3*j  ]
				KEYWORD:[
				EXPRESSION:i +3*j 
						NAME:i 
								NAME:i
								IGNORED:
						OPERATOR:+
						VALUE:3
						OPERATOR:*
						NAME:j 
								NAME:j
								IGNORED:
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:mvMatrix [ i +4*j  ]
		VARIABLE:mvMatrix [ i +4*j  ]
				NAME:mvMatrix
				COMPOSITE:[ i +4*j  ]
						KEYWORD:[
						EXPRESSION:i +4*j 
								VARIABLE:i 
										NAME:i
										IGNORED:
								OPERATOR:+
								VALUE:4
								OPERATOR:*
								VARIABLE:j 
										NAME:j
										IGNORED:
						KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. frontFace ( gl. CW )
OPENGL_CALL:gl. frontFace ( gl. CW )
		KEYWORD:gl.
		NAME:frontFace
		KEYWORD:(
		SEQUENCE:gl. CW
				EXPRESSION:gl. CW
						OPENGL_CONSTANT:gl. CW
								KEYWORD:gl.
								NAME:CW
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, sphereVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, sphereVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, sphereVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:sphereVertexPositionBuffer [ 0 ]
						VARIABLE:sphereVertexPositionBuffer [ 0 ]
								NAME:sphereVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( vertexPositionAttribute , sphereVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( vertexPositionAttribute , sphereVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:vertexPositionAttribute , sphereVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:vertexPositionAttribute 
						VARIABLE:vertexPositionAttribute 
								NAME:vertexPositionAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:sphereVertexPositionBuffer [ 1 ]
						VARIABLE:sphereVertexPositionBuffer [ 1 ]
								NAME:sphereVertexPositionBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, sphereVertexNormalBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, sphereVertexNormalBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, sphereVertexNormalBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:sphereVertexNormalBuffer [ 0 ]
						VARIABLE:sphereVertexNormalBuffer [ 0 ]
								NAME:sphereVertexNormalBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( vertexNormalAttribute , sphereVertexNormalBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( vertexNormalAttribute , sphereVertexNormalBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:vertexNormalAttribute , sphereVertexNormalBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:vertexNormalAttribute 
						VARIABLE:vertexNormalAttribute 
								NAME:vertexNormalAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:sphereVertexNormalBuffer [ 1 ]
						VARIABLE:sphereVertexNormalBuffer [ 1 ]
								NAME:sphereVertexNormalBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, sphereVertexIndexBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, sphereVertexIndexBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ELEMENT_ARRAY_BUFFER, sphereVertexIndexBuffer [ 0 ]
				EXPRESSION:gl. ELEMENT_ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ELEMENT_ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ELEMENT_ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:sphereVertexIndexBuffer [ 0 ]
						VARIABLE:sphereVertexIndexBuffer [ 0 ]
								NAME:sphereVertexIndexBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.setMatrixUniforms  ( gl  )
CALL: this.setMatrixUniforms  ( gl  )
		IGNORED:
		SEQUENCE:this.setMatrixUniforms  ( gl  )
				COMPOSITE:this.setMatrixUniforms  ( gl  )
						COMPOSITE:this.setMatrixUniforms 
								NAME:this.setMatrixUniforms
								IGNORED:
						KEYWORD:(
						SEQUENCE:gl 
								EXPRESSION:gl 
										VARIABLE:gl 
												NAME:gl
												IGNORED:
						KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. drawElements ( gl. TRIANGLES, sphereVertexIndexBuffer [ 2 ], gl. UNSIGNED_SHORT, 0 )
OPENGL_CALL:gl. drawElements ( gl. TRIANGLES, sphereVertexIndexBuffer [ 2 ], gl. UNSIGNED_SHORT, 0 )
		KEYWORD:gl.
		NAME:drawElements
		KEYWORD:(
		SEQUENCE:gl. TRIANGLES, sphereVertexIndexBuffer [ 2 ], gl. UNSIGNED_SHORT, 0
				EXPRESSION:gl. TRIANGLES
						OPENGL_CONSTANT:gl. TRIANGLES
								KEYWORD:gl.
								NAME:TRIANGLES
				KEYWORD:, 
				EXPRESSION:sphereVertexIndexBuffer [ 2 ]
						VARIABLE:sphereVertexIndexBuffer [ 2 ]
								NAME:sphereVertexIndexBuffer
								COMPOSITE:[ 2 ]
										KEYWORD:[
										EXPRESSION:2
												VALUE:2
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. UNSIGNED_SHORT
						OPENGL_CONSTANT:gl. UNSIGNED_SHORT
								KEYWORD:gl.
								NAME:UNSIGNED_SHORT
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.animate  (  )
CALL: this.animate  (  )
		IGNORED:
		SEQUENCE:this.animate  (  )
				COMPOSITE:this.animate  (  )
						COMPOSITE:this.animate 
								NAME:this.animate
								IGNORED:
						KEYWORD:(
						SEQUENCE:
						KEYWORD:)


[METHOD_DECLARATION] -------> , animate : function (  )
KEYWORD:,
NAME:animate
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var timeNow  = new  Date  (  ) . getTime  (  )
VARIABLE:var timeNow 
		KEYWORD:var
		NAME:timeNow 
				NAME:timeNow
				IGNORED:
KEYWORD:=
CALL:new  Date  (  ) . getTime  (  )
		COMPOSITE:new  Date  (  ) .
				NEW_STATEMENT:new  Date  (  )
						KEYWORD:new 
						TYPE:Date 
								TYPE:Date
								IGNORED:
						COMPOSITE:(  )
								KEYWORD:(
								SEQUENCE:
								KEYWORD:)
				KEYWORD:.
		SEQUENCE:getTime  (  )
				COMPOSITE:getTime  (  )
						COMPOSITE:getTime 
								NAME:getTime
								IGNORED:
						KEYWORD:(
						SEQUENCE:
						KEYWORD:)


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( lastTime !=0 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:lastTime !=0
		VARIABLE:lastTime 
				NAME:lastTime
				IGNORED:
		OPERATOR:!=
		VALUE:0
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var elapsed  = timeNow -lastTime 
VARIABLE:var elapsed 
		KEYWORD:var
		NAME:elapsed 
				NAME:elapsed
				IGNORED:
KEYWORD:=
EXPRESSION:timeNow -lastTime 
		VARIABLE:timeNow 
				NAME:timeNow
				IGNORED:
		OPERATOR:-
		VARIABLE:lastTime 
				NAME:lastTime
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> rAnglex  + = speedx *elapsed *0.001
NAME:rAnglex 
		NAME:rAnglex
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION:speedx *elapsed *0.001
		VARIABLE:speedx 
				NAME:speedx
				IGNORED:
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> rAngley  + = speedy *elapsed *0.001
NAME:rAngley 
		NAME:rAngley
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION:speedy *elapsed *0.001
		VARIABLE:speedy 
				NAME:speedy
				IGNORED:
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> lastTime   = timeNow 
NAME:lastTime 
		NAME:lastTime
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:timeNow 
		VARIABLE:timeNow 
				NAME:timeNow
				IGNORED:


[METHOD_DECLARATION] -------> , handleKeys : function (  )
KEYWORD:,
NAME:handleKeys
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var timeNow  = new  Date  (  ) . getTime  (  )
VARIABLE:var timeNow 
		KEYWORD:var
		NAME:timeNow 
				NAME:timeNow
				IGNORED:
KEYWORD:=
CALL:new  Date  (  ) . getTime  (  )
		COMPOSITE:new  Date  (  ) .
				NEW_STATEMENT:new  Date  (  )
						KEYWORD:new 
						TYPE:Date 
								TYPE:Date
								IGNORED:
						COMPOSITE:(  )
								KEYWORD:(
								SEQUENCE:
								KEYWORD:)
				KEYWORD:.
		SEQUENCE:getTime  (  )
				COMPOSITE:getTime  (  )
						COMPOSITE:getTime 
								NAME:getTime
								IGNORED:
						KEYWORD:(
						SEQUENCE:
						KEYWORD:)


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( lastTime2 !=0 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:lastTime2 !=0
		VARIABLE:lastTime2 
				NAME:lastTime2
				IGNORED:
		OPERATOR:!=
		VALUE:0
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var elapsed  = timeNow -lastTime2 
VARIABLE:var elapsed 
		KEYWORD:var
		NAME:elapsed 
				NAME:elapsed
				IGNORED:
KEYWORD:=
EXPRESSION:timeNow -lastTime2 
		VARIABLE:timeNow 
				NAME:timeNow
				IGNORED:
		OPERATOR:-
		VARIABLE:lastTime2 
				NAME:lastTime2
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands [ 0 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands [ 0 ]
		VARIABLE:commands [ 0 ]
				NAME:commands
				COMPOSITE:[ 0 ]
						KEYWORD:[
						EXPRESSION:0
								VALUE:0
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> zoom  + = 5*elapsed *0.001
NAME:zoom 
		NAME:zoom
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION:5*elapsed *0.001
		VALUE:5
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands [ 1 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands [ 1 ]
		VARIABLE:commands [ 1 ]
				NAME:commands
				COMPOSITE:[ 1 ]
						KEYWORD:[
						EXPRESSION:1
								VALUE:1
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> zoom  - = 5*elapsed *0.001
NAME:zoom 
		NAME:zoom
		IGNORED:
KEYWORD:-
KEYWORD:=
EXPRESSION:5*elapsed *0.001
		VALUE:5
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands [ 2 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands [ 2 ]
		VARIABLE:commands [ 2 ]
				NAME:commands
				COMPOSITE:[ 2 ]
						KEYWORD:[
						EXPRESSION:2
								VALUE:2
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> speedx  - = 2*elapsed *0.001
NAME:speedx 
		NAME:speedx
		IGNORED:
KEYWORD:-
KEYWORD:=
EXPRESSION:2*elapsed *0.001
		VALUE:2
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands [ 3 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands [ 3 ]
		VARIABLE:commands [ 3 ]
				NAME:commands
				COMPOSITE:[ 3 ]
						KEYWORD:[
						EXPRESSION:3
								VALUE:3
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> speedx  + = 2*elapsed *0.001
NAME:speedx 
		NAME:speedx
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION:2*elapsed *0.001
		VALUE:2
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands [ 4 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands [ 4 ]
		VARIABLE:commands [ 4 ]
				NAME:commands
				COMPOSITE:[ 4 ]
						KEYWORD:[
						EXPRESSION:4
								VALUE:4
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> speedy  - = 2*elapsed *0.001
NAME:speedy 
		NAME:speedy
		IGNORED:
KEYWORD:-
KEYWORD:=
EXPRESSION:2*elapsed *0.001
		VALUE:2
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands [ 5 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands [ 5 ]
		VARIABLE:commands [ 5 ]
				NAME:commands
				COMPOSITE:[ 5 ]
						KEYWORD:[
						EXPRESSION:5
								VALUE:5
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> speedy  + = 2*elapsed *0.001
NAME:speedy 
		NAME:speedy
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION:2*elapsed *0.001
		VALUE:2
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> lastTime2   = timeNow 
NAME:lastTime2 
		NAME:lastTime2
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:timeNow 
		VARIABLE:timeNow 
				NAME:timeNow
				IGNORED:


[METHOD_DECLARATION] -------> , setCommands : function ( e , value  )
KEYWORD:,
NAME:setCommands
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:e , value 
		VARIABLE:e 
				NAME:e
				IGNORED:
		KEYWORD:, 
		VARIABLE:value 
				NAME:value
				IGNORED:
KEYWORD:)


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==65 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==65
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:65
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 0 ]  = value 
NAME:commands [ 0 ]
		NAME:commands
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==90 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==90
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:90
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 1 ]  = value 
NAME:commands [ 1 ]
		NAME:commands
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==38 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==38
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:38
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 2 ]  = value 
NAME:commands [ 2 ]
		NAME:commands
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==40 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==40
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:40
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 3 ]  = value 
NAME:commands [ 3 ]
		NAME:commands
		COMPOSITE:[ 3 ]
				KEYWORD:[
				EXPRESSION:3
						VALUE:3
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==37 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==37
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:37
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 4 ]  = value 
NAME:commands [ 4 ]
		NAME:commands
		COMPOSITE:[ 4 ]
				KEYWORD:[
				EXPRESSION:4
						VALUE:4
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==39 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==39
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:39
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 5 ]  = value 
NAME:commands [ 5 ]
		NAME:commands
		COMPOSITE:[ 5 ]
				KEYWORD:[
				EXPRESSION:5
						VALUE:5
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[METHOD_DECLARATION] -------> , keyPressed : function ( e  )
KEYWORD:,
NAME:keyPressed
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:e 
		VARIABLE:e 
				NAME:e
				IGNORED:
KEYWORD:)


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==83 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==83
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:83
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> shaderChoice   = shaderChoice ==1 ? 0 : ( shaderChoice +1 )
NAME:shaderChoice 
		NAME:shaderChoice
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:shaderChoice ==1 ? 0 : ( shaderChoice +1 )
		TERNARY_OPERATOR:shaderChoice ==1 ? 0 : ( shaderChoice +1 )
				EXPRESSION:shaderChoice ==1
						VARIABLE:shaderChoice 
								NAME:shaderChoice
								IGNORED:
						OPERATOR:==
						VALUE:1
				KEYWORD:?
				EXPRESSION:0
						VALUE:0
				KEYWORD::
				EXPRESSION:( shaderChoice +1 )
						COMPOSITE:( shaderChoice +1 )
								KEYWORD:(
								EXPRESSION:shaderChoice +1
										VARIABLE:shaderChoice 
												NAME:shaderChoice
												IGNORED:
										OPERATOR:+
										VALUE:1
								KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.setCommands  ( e , true  )
CALL: this.setCommands  ( e , true  )
		IGNORED:
		SEQUENCE:this.setCommands  ( e , true  )
				COMPOSITE:this.setCommands  ( e , true  )
						COMPOSITE:this.setCommands 
								NAME:this.setCommands
								IGNORED:
						KEYWORD:(
						SEQUENCE:e , true 
								EXPRESSION:e 
										VARIABLE:e 
												NAME:e
												IGNORED:
								KEYWORD:, 
								EXPRESSION:true 
										VARIABLE:true 
												NAME:true
												IGNORED:
						KEYWORD:)


[METHOD_DECLARATION] -------> , keyReleased : function ( e  )
KEYWORD:,
NAME:keyReleased
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:e 
		VARIABLE:e 
				NAME:e
				IGNORED:
KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.setCommands  ( e , false  )
CALL: this.setCommands  ( e , false  )
		IGNORED:
		SEQUENCE:this.setCommands  ( e , false  )
				COMPOSITE:this.setCommands  ( e , false  )
						COMPOSITE:this.setCommands 
								NAME:this.setCommands
								IGNORED:
						KEYWORD:(
						SEQUENCE:e , false 
								EXPRESSION:e 
										VARIABLE:e 
												NAME:e
												IGNORED:
								KEYWORD:, 
								EXPRESSION:false 
										VARIABLE:false 
												NAME:false
												IGNORED:
						KEYWORD:)



test_sv8Drawer.js
[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var vertexPositionAttribute 
VARIABLE:var vertexPositionAttribute 
		KEYWORD:var
		NAME:vertexPositionAttribute 
				NAME:vertexPositionAttribute
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var vertexNormalAttribute 
VARIABLE:var vertexNormalAttribute 
		KEYWORD:var
		NAME:vertexNormalAttribute 
				NAME:vertexNormalAttribute
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var pMatrixUniform 
VARIABLE:var pMatrixUniform 
		KEYWORD:var
		NAME:pMatrixUniform 
				NAME:pMatrixUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var mvMatrixUniform 
VARIABLE:var mvMatrixUniform 
		KEYWORD:var
		NAME:mvMatrixUniform 
				NAME:mvMatrixUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var nMatrixUniform 
VARIABLE:var nMatrixUniform 
		KEYWORD:var
		NAME:nMatrixUniform 
				NAME:nMatrixUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var ambientColorUniform 
VARIABLE:var ambientColorUniform 
		KEYWORD:var
		NAME:ambientColorUniform 
				NAME:ambientColorUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var pointLightingLocationUniform 
VARIABLE:var pointLightingLocationUniform 
		KEYWORD:var
		NAME:pointLightingLocationUniform 
				NAME:pointLightingLocationUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var pointLightingSpecularColorUniform 
VARIABLE:var pointLightingSpecularColorUniform 
		KEYWORD:var
		NAME:pointLightingSpecularColorUniform 
				NAME:pointLightingSpecularColorUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var pointLightingDiffuseColorUniform 
VARIABLE:var pointLightingDiffuseColorUniform 
		KEYWORD:var
		NAME:pointLightingDiffuseColorUniform 
				NAME:pointLightingDiffuseColorUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var materialShininessUniform 
VARIABLE:var materialShininessUniform 
		KEYWORD:var
		NAME:materialShininessUniform 
				NAME:materialShininessUniform
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var teapotVertexPositionBuffer  = new  Array  (  )
VARIABLE:var teapotVertexPositionBuffer 
		KEYWORD:var
		NAME:teapotVertexPositionBuffer 
				NAME:teapotVertexPositionBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var teapotVertexNormalBuffer  = new  Array  (  )
VARIABLE:var teapotVertexNormalBuffer 
		KEYWORD:var
		NAME:teapotVertexNormalBuffer 
				NAME:teapotVertexNormalBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var teapotVertexIndexBuffer  = new  Array  (  )
VARIABLE:var teapotVertexIndexBuffer 
		KEYWORD:var
		NAME:teapotVertexIndexBuffer 
				NAME:teapotVertexIndexBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var pMatrix 
VARIABLE:var pMatrix 
		KEYWORD:var
		NAME:pMatrix 
				NAME:pMatrix
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var mvMatrix 
VARIABLE:var mvMatrix 
		KEYWORD:var
		NAME:mvMatrix 
				NAME:mvMatrix
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var normalMatrix 
VARIABLE:var normalMatrix 
		KEYWORD:var
		NAME:normalMatrix 
				NAME:normalMatrix
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var rAnglex  = 0
VARIABLE:var rAnglex 
		KEYWORD:var
		NAME:rAnglex 
				NAME:rAnglex
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var speedx  = 0
VARIABLE:var speedx 
		KEYWORD:var
		NAME:speedx 
				NAME:speedx
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var rAngley  = 0
VARIABLE:var rAngley 
		KEYWORD:var
		NAME:rAngley 
				NAME:rAngley
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var speedy  = 0
VARIABLE:var speedy 
		KEYWORD:var
		NAME:speedy 
				NAME:speedy
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var zoom  = -8
VARIABLE:var zoom 
		KEYWORD:var
		NAME:zoom 
				NAME:zoom
				IGNORED:
KEYWORD:=
EXPRESSION:-8
		VALUE:-8


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var lastTime  = 0
VARIABLE:var lastTime 
		KEYWORD:var
		NAME:lastTime 
				NAME:lastTime
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var lastTime2  = 0
VARIABLE:var lastTime2 
		KEYWORD:var
		NAME:lastTime2 
				NAME:lastTime2
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var commands  = new  Array  (  )
VARIABLE:var commands 
		KEYWORD:var
		NAME:commands 
				NAME:commands
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[CONSTRUCTOR_DECLARATION] -------> function Test_sv8Drawer  (  )
KEYWORD:function
NAME:Test_sv8Drawer 
		NAME:Test_sv8Drawer
		IGNORED:
KEYWORD:(
METHOD_VARIABLES:
KEYWORD:)


[CLASS_DECLARATION] -------> Test_sv8Drawer . prototype =
NAME:Test_sv8Drawer
KEYWORD:.
KEYWORD:prototype
KEYWORD:=


[METHOD_DECLARATION] ------->  initShaders : function ( gl  )
IGNORED:
NAME:initShaders
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var shaderProgram  =  getShaderProgram  ( gl , "shaders /shader5.fs" , "shaders /shader5.vs"  )
VARIABLE:var shaderProgram 
		KEYWORD:var
		NAME:shaderProgram 
				NAME:shaderProgram
				IGNORED:
KEYWORD:=
CALL: getShaderProgram  ( gl , "shaders /shader5.fs" , "shaders /shader5.vs"  )
		IGNORED:
		SEQUENCE:getShaderProgram  ( gl , "shaders /shader5.fs" , "shaders /shader5.vs"  )
				COMPOSITE:getShaderProgram  ( gl , "shaders /shader5.fs" , "shaders /shader5.vs"  )
						COMPOSITE:getShaderProgram 
								NAME:getShaderProgram
								IGNORED:
						KEYWORD:(
						SEQUENCE:gl , "shaders /shader5.fs" , "shaders /shader5.vs" 
								EXPRESSION:gl 
										VARIABLE:gl 
												NAME:gl
												IGNORED:
								KEYWORD:, 
								EXPRESSION:"shaders /shader5.fs" 
										VARIABLE:"shaders 
												NAME:"shaders
												IGNORED:
										OPERATOR:/
										VARIABLE:shader5.fs" 
												NAME:shader5.fs"
												IGNORED:
								KEYWORD:, 
								EXPRESSION:"shaders /shader5.vs" 
										VARIABLE:"shaders 
												NAME:"shaders
												IGNORED:
										OPERATOR:/
										VARIABLE:shader5.vs" 
												NAME:shader5.vs"
												IGNORED:
						KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> vertexPositionAttribute   = gl. getAttribLocation ( shaderProgram , "aVertexPosition"  )
NAME:vertexPositionAttribute 
		NAME:vertexPositionAttribute
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getAttribLocation ( shaderProgram , "aVertexPosition"  )
		OPENGL_CALL:gl. getAttribLocation ( shaderProgram , "aVertexPosition"  )
				KEYWORD:gl.
				NAME:getAttribLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "aVertexPosition" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"aVertexPosition" 
								VARIABLE:"aVertexPosition" 
										NAME:"aVertexPosition"
										IGNORED:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enableVertexAttribArray ( vertexPositionAttribute  )
OPENGL_CALL:gl. enableVertexAttribArray ( vertexPositionAttribute  )
		KEYWORD:gl.
		NAME:enableVertexAttribArray
		KEYWORD:(
		SEQUENCE:vertexPositionAttribute 
				EXPRESSION:vertexPositionAttribute 
						VARIABLE:vertexPositionAttribute 
								NAME:vertexPositionAttribute
								IGNORED:
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> vertexNormalAttribute   = gl. getAttribLocation ( shaderProgram , "aVertexNormal"  )
NAME:vertexNormalAttribute 
		NAME:vertexNormalAttribute
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getAttribLocation ( shaderProgram , "aVertexNormal"  )
		OPENGL_CALL:gl. getAttribLocation ( shaderProgram , "aVertexNormal"  )
				KEYWORD:gl.
				NAME:getAttribLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "aVertexNormal" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"aVertexNormal" 
								VARIABLE:"aVertexNormal" 
										NAME:"aVertexNormal"
										IGNORED:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enableVertexAttribArray ( vertexNormalAttribute  )
OPENGL_CALL:gl. enableVertexAttribArray ( vertexNormalAttribute  )
		KEYWORD:gl.
		NAME:enableVertexAttribArray
		KEYWORD:(
		SEQUENCE:vertexNormalAttribute 
				EXPRESSION:vertexNormalAttribute 
						VARIABLE:vertexNormalAttribute 
								NAME:vertexNormalAttribute
								IGNORED:
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pMatrixUniform   = gl. getUniformLocation ( shaderProgram , "uPMatrix"  )
NAME:pMatrixUniform 
		NAME:pMatrixUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uPMatrix"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uPMatrix"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uPMatrix" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uPMatrix" 
								VARIABLE:"uPMatrix" 
										NAME:"uPMatrix"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrixUniform   = gl. getUniformLocation ( shaderProgram , "uMVMatrix"  )
NAME:mvMatrixUniform 
		NAME:mvMatrixUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uMVMatrix"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uMVMatrix"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uMVMatrix" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uMVMatrix" 
								VARIABLE:"uMVMatrix" 
										NAME:"uMVMatrix"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> nMatrixUniform   = gl. getUniformLocation ( shaderProgram , "uNMatrix"  )
NAME:nMatrixUniform 
		NAME:nMatrixUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uNMatrix"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uNMatrix"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uNMatrix" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uNMatrix" 
								VARIABLE:"uNMatrix" 
										NAME:"uNMatrix"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> ambientColorUniform   = gl. getUniformLocation ( shaderProgram , "uAmbientColor"  )
NAME:ambientColorUniform 
		NAME:ambientColorUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uAmbientColor"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uAmbientColor"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uAmbientColor" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uAmbientColor" 
								VARIABLE:"uAmbientColor" 
										NAME:"uAmbientColor"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pointLightingLocationUniform   = gl. getUniformLocation ( shaderProgram , "uPointLightingLocation"  )
NAME:pointLightingLocationUniform 
		NAME:pointLightingLocationUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uPointLightingLocation"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uPointLightingLocation"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uPointLightingLocation" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uPointLightingLocation" 
								VARIABLE:"uPointLightingLocation" 
										NAME:"uPointLightingLocation"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pointLightingSpecularColorUniform   = gl. getUniformLocation ( shaderProgram , "uPointLightingSpecularColor"  )
NAME:pointLightingSpecularColorUniform 
		NAME:pointLightingSpecularColorUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uPointLightingSpecularColor"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uPointLightingSpecularColor"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uPointLightingSpecularColor" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uPointLightingSpecularColor" 
								VARIABLE:"uPointLightingSpecularColor" 
										NAME:"uPointLightingSpecularColor"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pointLightingDiffuseColorUniform   = gl. getUniformLocation ( shaderProgram , "uPointLightingDiffuseColor"  )
NAME:pointLightingDiffuseColorUniform 
		NAME:pointLightingDiffuseColorUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uPointLightingDiffuseColor"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uPointLightingDiffuseColor"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uPointLightingDiffuseColor" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uPointLightingDiffuseColor" 
								VARIABLE:"uPointLightingDiffuseColor" 
										NAME:"uPointLightingDiffuseColor"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> materialShininessUniform   = gl. getUniformLocation ( shaderProgram , "uMaterialShininess"  )
NAME:materialShininessUniform 
		NAME:materialShininessUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uMaterialShininess"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uMaterialShininess"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uMaterialShininess" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uMaterialShininess" 
								VARIABLE:"uMaterialShininess" 
										NAME:"uMaterialShininess"
										IGNORED:
				KEYWORD:)


[METHOD_DECLARATION] -------> , setMatrixUniforms : function ( gl  )
KEYWORD:,
NAME:setMatrixUniforms
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniformMatrix4fv ( pMatrixUniform , false , pMatrix  )
OPENGL_CALL:gl. uniformMatrix4fv ( pMatrixUniform , false , pMatrix  )
		KEYWORD:gl.
		NAME:uniformMatrix4fv
		KEYWORD:(
		SEQUENCE:pMatrixUniform , false , pMatrix 
				EXPRESSION:pMatrixUniform 
						VARIABLE:pMatrixUniform 
								NAME:pMatrixUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:pMatrix 
						VARIABLE:pMatrix 
								NAME:pMatrix
								IGNORED:
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniformMatrix4fv ( mvMatrixUniform , false , mvMatrix  )
OPENGL_CALL:gl. uniformMatrix4fv ( mvMatrixUniform , false , mvMatrix  )
		KEYWORD:gl.
		NAME:uniformMatrix4fv
		KEYWORD:(
		SEQUENCE:mvMatrixUniform , false , mvMatrix 
				EXPRESSION:mvMatrixUniform 
						VARIABLE:mvMatrixUniform 
								NAME:mvMatrixUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:mvMatrix 
						VARIABLE:mvMatrix 
								NAME:mvMatrix
								IGNORED:
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniformMatrix3fv ( nMatrixUniform , false , normalMatrix  )
OPENGL_CALL:gl. uniformMatrix3fv ( nMatrixUniform , false , normalMatrix  )
		KEYWORD:gl.
		NAME:uniformMatrix3fv
		KEYWORD:(
		SEQUENCE:nMatrixUniform , false , normalMatrix 
				EXPRESSION:nMatrixUniform 
						VARIABLE:nMatrixUniform 
								NAME:nMatrixUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:normalMatrix 
						VARIABLE:normalMatrix 
								NAME:normalMatrix
								IGNORED:
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniform3f ( ambientColorUniform , 0.1, 0.1, 0.1 )
OPENGL_CALL:gl. uniform3f ( ambientColorUniform , 0.1, 0.1, 0.1 )
		KEYWORD:gl.
		NAME:uniform3f
		KEYWORD:(
		SEQUENCE:ambientColorUniform , 0.1, 0.1, 0.1
				EXPRESSION:ambientColorUniform 
						VARIABLE:ambientColorUniform 
								NAME:ambientColorUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0.1
						VALUE:0.1
				KEYWORD:, 
				EXPRESSION:0.1
						VALUE:0.1
				KEYWORD:, 
				EXPRESSION:0.1
						VALUE:0.1
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniform3f ( pointLightingLocationUniform , -1, 0, -5.1 )
OPENGL_CALL:gl. uniform3f ( pointLightingLocationUniform , -1, 0, -5.1 )
		KEYWORD:gl.
		NAME:uniform3f
		KEYWORD:(
		SEQUENCE:pointLightingLocationUniform , -1, 0, -5.1
				EXPRESSION:pointLightingLocationUniform 
						VARIABLE:pointLightingLocationUniform 
								NAME:pointLightingLocationUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:-1
						VALUE:-1
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:-5.1
						VALUE:-5.1
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniform3f ( pointLightingDiffuseColorUniform , 0.7, 0.7, 0.7 )
OPENGL_CALL:gl. uniform3f ( pointLightingDiffuseColorUniform , 0.7, 0.7, 0.7 )
		KEYWORD:gl.
		NAME:uniform3f
		KEYWORD:(
		SEQUENCE:pointLightingDiffuseColorUniform , 0.7, 0.7, 0.7
				EXPRESSION:pointLightingDiffuseColorUniform 
						VARIABLE:pointLightingDiffuseColorUniform 
								NAME:pointLightingDiffuseColorUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0.7
						VALUE:0.7
				KEYWORD:, 
				EXPRESSION:0.7
						VALUE:0.7
				KEYWORD:, 
				EXPRESSION:0.7
						VALUE:0.7
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniform3f ( pointLightingSpecularColorUniform , 0.7, 0.7, 0.7 )
OPENGL_CALL:gl. uniform3f ( pointLightingSpecularColorUniform , 0.7, 0.7, 0.7 )
		KEYWORD:gl.
		NAME:uniform3f
		KEYWORD:(
		SEQUENCE:pointLightingSpecularColorUniform , 0.7, 0.7, 0.7
				EXPRESSION:pointLightingSpecularColorUniform 
						VARIABLE:pointLightingSpecularColorUniform 
								NAME:pointLightingSpecularColorUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0.7
						VALUE:0.7
				KEYWORD:, 
				EXPRESSION:0.7
						VALUE:0.7
				KEYWORD:, 
				EXPRESSION:0.7
						VALUE:0.7
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniform1f ( materialShininessUniform , 10 )
OPENGL_CALL:gl. uniform1f ( materialShininessUniform , 10 )
		KEYWORD:gl.
		NAME:uniform1f
		KEYWORD:(
		SEQUENCE:materialShininessUniform , 10
				EXPRESSION:materialShininessUniform 
						VARIABLE:materialShininessUniform 
								NAME:materialShininessUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:10
						VALUE:10
		KEYWORD:)


[METHOD_DECLARATION] -------> , initBuffers : function ( gl  )
KEYWORD:,
NAME:initBuffers
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var teapot  =  loadObj  ( "models /teapot.obj"  )
VARIABLE:var teapot 
		KEYWORD:var
		NAME:teapot 
				NAME:teapot
				IGNORED:
KEYWORD:=
CALL: loadObj  ( "models /teapot.obj"  )
		IGNORED:
		SEQUENCE:loadObj  ( "models /teapot.obj"  )
				COMPOSITE:loadObj  ( "models /teapot.obj"  )
						COMPOSITE:loadObj 
								NAME:loadObj
								IGNORED:
						KEYWORD:(
						SEQUENCE:"models /teapot.obj" 
								EXPRESSION:"models /teapot.obj" 
										VARIABLE:"models 
												NAME:"models
												IGNORED:
										OPERATOR:/
										VARIABLE:teapot.obj" 
												NAME:teapot.obj"
												IGNORED:
						KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> teapotVertexPositionBuffer [ 0 ]  = gl. createBuffer (  )
NAME:teapotVertexPositionBuffer [ 0 ]
		NAME:teapotVertexPositionBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, teapotVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, teapotVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, teapotVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:teapotVertexPositionBuffer [ 0 ]
						VARIABLE:teapotVertexPositionBuffer [ 0 ]
								NAME:teapotVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( teapot.vertexPositions  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( teapot.vertexPositions  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( teapot.vertexPositions  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( teapot.vertexPositions  )
						NEW_STATEMENT:new  Float32Array  ( teapot.vertexPositions  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( teapot.vertexPositions  )
										KEYWORD:(
										SEQUENCE:teapot.vertexPositions 
												EXPRESSION:teapot.vertexPositions 
														VARIABLE:teapot.vertexPositions 
																NAME:teapot.vertexPositions
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> teapotVertexPositionBuffer [ 1 ]  = 3
NAME:teapotVertexPositionBuffer [ 1 ]
		NAME:teapotVertexPositionBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:3
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> teapotVertexPositionBuffer [ 2 ]  = teapot.vertexPositions.length /3
NAME:teapotVertexPositionBuffer [ 2 ]
		NAME:teapotVertexPositionBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:teapot.vertexPositions.length /3
		VARIABLE:teapot.vertexPositions.length 
				NAME:teapot.vertexPositions.length
				IGNORED:
		OPERATOR:/
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> teapotVertexNormalBuffer [ 0 ]  = gl. createBuffer (  )
NAME:teapotVertexNormalBuffer [ 0 ]
		NAME:teapotVertexNormalBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, teapotVertexNormalBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, teapotVertexNormalBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, teapotVertexNormalBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:teapotVertexNormalBuffer [ 0 ]
						VARIABLE:teapotVertexNormalBuffer [ 0 ]
								NAME:teapotVertexNormalBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( teapot.vertexNormals  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( teapot.vertexNormals  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( teapot.vertexNormals  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( teapot.vertexNormals  )
						NEW_STATEMENT:new  Float32Array  ( teapot.vertexNormals  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( teapot.vertexNormals  )
										KEYWORD:(
										SEQUENCE:teapot.vertexNormals 
												EXPRESSION:teapot.vertexNormals 
														VARIABLE:teapot.vertexNormals 
																NAME:teapot.vertexNormals
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> teapotVertexNormalBuffer [ 1 ]  = 3
NAME:teapotVertexNormalBuffer [ 1 ]
		NAME:teapotVertexNormalBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:3
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> teapotVertexNormalBuffer [ 2 ]  = teapot.vertexNormals.length /3
NAME:teapotVertexNormalBuffer [ 2 ]
		NAME:teapotVertexNormalBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:teapot.vertexNormals.length /3
		VARIABLE:teapot.vertexNormals.length 
				NAME:teapot.vertexNormals.length
				IGNORED:
		OPERATOR:/
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> teapotVertexIndexBuffer [ 0 ]  = gl. createBuffer (  )
NAME:teapotVertexIndexBuffer [ 0 ]
		NAME:teapotVertexIndexBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, teapotVertexIndexBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, teapotVertexIndexBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ELEMENT_ARRAY_BUFFER, teapotVertexIndexBuffer [ 0 ]
				EXPRESSION:gl. ELEMENT_ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ELEMENT_ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ELEMENT_ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:teapotVertexIndexBuffer [ 0 ]
						VARIABLE:teapotVertexIndexBuffer [ 0 ]
								NAME:teapotVertexIndexBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ELEMENT_ARRAY_BUFFER, new  Uint16Array  ( teapot.indices  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ELEMENT_ARRAY_BUFFER, new  Uint16Array  ( teapot.indices  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ELEMENT_ARRAY_BUFFER, new  Uint16Array  ( teapot.indices  ), gl. STATIC_DRAW
				EXPRESSION:gl. ELEMENT_ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ELEMENT_ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ELEMENT_ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Uint16Array  ( teapot.indices  )
						NEW_STATEMENT:new  Uint16Array  ( teapot.indices  )
								KEYWORD:new 
								VARIABLE:Uint16Array 
										NAME:Uint16Array
										IGNORED:
								COMPOSITE:( teapot.indices  )
										KEYWORD:(
										SEQUENCE:teapot.indices 
												EXPRESSION:teapot.indices 
														VARIABLE:teapot.indices 
																NAME:teapot.indices
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> teapotVertexIndexBuffer [ 1 ]  = 1
NAME:teapotVertexIndexBuffer [ 1 ]
		NAME:teapotVertexIndexBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:1
		VALUE:1


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> teapotVertexIndexBuffer [ 2 ]  = teapot.indices.length 
NAME:teapotVertexIndexBuffer [ 2 ]
		NAME:teapotVertexIndexBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:teapot.indices.length 
		VARIABLE:teapot.indices.length 
				NAME:teapot.indices.length
				IGNORED:


[METHOD_DECLARATION] -------> , drawScene : function ( gl  )
KEYWORD:,
NAME:drawScene
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. clearColor ( 0.0, 0.0, 0.0, 1.0 )
OPENGL_CALL:gl. clearColor ( 0.0, 0.0, 0.0, 1.0 )
		KEYWORD:gl.
		NAME:clearColor
		KEYWORD:(
		SEQUENCE:0.0, 0.0, 0.0, 1.0
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:, 
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:, 
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:, 
				EXPRESSION:1.0
						VALUE:1.0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enable ( gl. DEPTH_TEST )
OPENGL_CALL:gl. enable ( gl. DEPTH_TEST )
		KEYWORD:gl.
		NAME:enable
		KEYWORD:(
		SEQUENCE:gl. DEPTH_TEST
				EXPRESSION:gl. DEPTH_TEST
						OPENGL_CONSTANT:gl. DEPTH_TEST
								KEYWORD:gl.
								NAME:DEPTH_TEST
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. cullFace ( gl. BACK )
OPENGL_CALL:gl. cullFace ( gl. BACK )
		KEYWORD:gl.
		NAME:cullFace
		KEYWORD:(
		SEQUENCE:gl. BACK
				EXPRESSION:gl. BACK
						OPENGL_CONSTANT:gl. BACK
								KEYWORD:gl.
								NAME:BACK
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enable ( gl. CULL_FACE )
OPENGL_CALL:gl. enable ( gl. CULL_FACE )
		KEYWORD:gl.
		NAME:enable
		KEYWORD:(
		SEQUENCE:gl. CULL_FACE
				EXPRESSION:gl. CULL_FACE
						OPENGL_CONSTANT:gl. CULL_FACE
								KEYWORD:gl.
								NAME:CULL_FACE
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.handleKeys  (  )
CALL: this.handleKeys  (  )
		IGNORED:
		SEQUENCE:this.handleKeys  (  )
				COMPOSITE:this.handleKeys  (  )
						COMPOSITE:this.handleKeys 
								NAME:this.handleKeys
								IGNORED:
						KEYWORD:(
						SEQUENCE:
						KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. viewport ( 0, 0, 500, 500 )
OPENGL_CALL:gl. viewport ( 0, 0, 500, 500 )
		KEYWORD:gl.
		NAME:viewport
		KEYWORD:(
		SEQUENCE:0, 0, 500, 500
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:500
						VALUE:500
				KEYWORD:, 
				EXPRESSION:500
						VALUE:500
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. clear ( gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT )
OPENGL_CALL:gl. clear ( gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT )
		KEYWORD:gl.
		NAME:clear
		KEYWORD:(
		SEQUENCE:gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT
				EXPRESSION:gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT
						OPENGL_CONSTANT:gl. COLOR_BUFFER_BIT
								KEYWORD:gl.
								NAME:COLOR_BUFFER_BIT
						OPERATOR:|
						OPENGL_CONSTANT:gl. DEPTH_BUFFER_BIT
								KEYWORD:gl.
								NAME:DEPTH_BUFFER_BIT
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cx  =  Math.cos  ( rAnglex  )
VARIABLE:var cx 
		KEYWORD:var
		NAME:cx 
				NAME:cx
				IGNORED:
KEYWORD:=
CALL: Math.cos  ( rAnglex  )
		IGNORED:
		SEQUENCE:Math.cos  ( rAnglex  )
				COMPOSITE:Math.cos  ( rAnglex  )
						COMPOSITE:Math.cos 
								NAME:Math.cos
								IGNORED:
						KEYWORD:(
						SEQUENCE:rAnglex 
								EXPRESSION:rAnglex 
										VARIABLE:rAnglex 
												NAME:rAnglex
												IGNORED:
						KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var sx  =  Math.sin  ( rAnglex  )
VARIABLE:var sx 
		KEYWORD:var
		NAME:sx 
				NAME:sx
				IGNORED:
KEYWORD:=
CALL: Math.sin  ( rAnglex  )
		IGNORED:
		SEQUENCE:Math.sin  ( rAnglex  )
				COMPOSITE:Math.sin  ( rAnglex  )
						COMPOSITE:Math.sin 
								NAME:Math.sin
								IGNORED:
						KEYWORD:(
						SEQUENCE:rAnglex 
								EXPRESSION:rAnglex 
										VARIABLE:rAnglex 
												NAME:rAnglex
												IGNORED:
						KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cy  =  Math.cos  ( rAngley  )
VARIABLE:var cy 
		KEYWORD:var
		NAME:cy 
				NAME:cy
				IGNORED:
KEYWORD:=
CALL: Math.cos  ( rAngley  )
		IGNORED:
		SEQUENCE:Math.cos  ( rAngley  )
				COMPOSITE:Math.cos  ( rAngley  )
						COMPOSITE:Math.cos 
								NAME:Math.cos
								IGNORED:
						KEYWORD:(
						SEQUENCE:rAngley 
								EXPRESSION:rAngley 
										VARIABLE:rAngley 
												NAME:rAngley
												IGNORED:
						KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var sy  =  Math.sin  ( rAngley  )
VARIABLE:var sy 
		KEYWORD:var
		NAME:sy 
				NAME:sy
				IGNORED:
KEYWORD:=
CALL: Math.sin  ( rAngley  )
		IGNORED:
		SEQUENCE:Math.sin  ( rAngley  )
				COMPOSITE:Math.sin  ( rAngley  )
						COMPOSITE:Math.sin 
								NAME:Math.sin
								IGNORED:
						KEYWORD:(
						SEQUENCE:rAngley 
								EXPRESSION:rAngley 
										VARIABLE:rAngley 
												NAME:rAngley
												IGNORED:
						KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pMatrix   = new  Float32Array  ( [ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ] )
NAME:pMatrix 
		NAME:pMatrix
		IGNORED:
IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Float32Array  ( [ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ] )
		KEYWORD:new 
		TYPE:Float32Array 
				TYPE:Float32Array
				IGNORED:
		COMPOSITE:( [ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ] )
				KEYWORD:(
				SEQUENCE:[ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ]
						ARRAY_CONTENT:[ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ]
								KEYWORD:[
								SEQUENCE:2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0
										EXPRESSION:2.4142136573791504
												VALUE:2.4142136573791504
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:2.4142136573791504
												VALUE:2.4142136573791504
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:-1.0020020008087158
												VALUE:-1.0020020008087158
										KEYWORD:,
										EXPRESSION:-1
												VALUE:-1
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:-0.20020020008087158
												VALUE:-0.20020020008087158
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
								KEYWORD:]
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix   = new  Float32Array  ( [ cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,0,0,zoom ,1 ] )
NAME:mvMatrix 
		NAME:mvMatrix
		IGNORED:
IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Float32Array  ( [ cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,0,0,zoom ,1 ] )
		KEYWORD:new 
		TYPE:Float32Array 
				TYPE:Float32Array
				IGNORED:
		COMPOSITE:( [ cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,0,0,zoom ,1 ] )
				KEYWORD:(
				SEQUENCE:[ cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,0,0,zoom ,1 ]
						ARRAY_CONTENT:[ cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,0,0,zoom ,1 ]
								KEYWORD:[
								SEQUENCE:cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,0,0,zoom ,1
										EXPRESSION:cy 
												VARIABLE:cy 
														NAME:cy
														IGNORED:
										KEYWORD:,
										EXPRESSION:sx *sy 
												VARIABLE:sx 
														NAME:sx
														IGNORED:
												OPERATOR:*
												VARIABLE:sy 
														NAME:sy
														IGNORED:
										KEYWORD:,
										EXPRESSION:-cx*sy 
												VALUE:-cx
												OPERATOR:*
												VARIABLE:sy 
														NAME:sy
														IGNORED:
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:cx 
												VARIABLE:cx 
														NAME:cx
														IGNORED:
										KEYWORD:,
										EXPRESSION:sx 
												VARIABLE:sx 
														NAME:sx
														IGNORED:
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:sy 
												VARIABLE:sy 
														NAME:sy
														IGNORED:
										KEYWORD:,
										EXPRESSION:-cy*sx 
												VALUE:-cy
												OPERATOR:*
												VARIABLE:sx 
														NAME:sx
														IGNORED:
										KEYWORD:,
										EXPRESSION:cx *cy 
												VARIABLE:cx 
														NAME:cx
														IGNORED:
												OPERATOR:*
												VARIABLE:cy 
														NAME:cy
														IGNORED:
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:zoom 
												VARIABLE:zoom 
														NAME:zoom
														IGNORED:
										KEYWORD:,
										EXPRESSION:1
												VALUE:1
								KEYWORD:]
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> normalMatrix   = new  Float32Array  ( 9 )
NAME:normalMatrix 
		NAME:normalMatrix
		IGNORED:
IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Float32Array  ( 9 )
		KEYWORD:new 
		TYPE:Float32Array 
				TYPE:Float32Array
				IGNORED:
		COMPOSITE:( 9 )
				KEYWORD:(
				SEQUENCE:9
						EXPRESSION:9
								VALUE:9
				KEYWORD:)


[FOR, ASSIGNMENT, LINE_OF_CODE] -------> for ( var i  = 0 ; i  < 3 ; i  ++  )
KEYWORD:for
KEYWORD:(
COMPOSITE:var i  = 0
		VARIABLE:var i 
				KEYWORD:var
				NAME:i 
						NAME:i
						IGNORED:
		KEYWORD:=
		EXPRESSION:0
				VALUE:0
KEYWORD:;
VALUE:i 
		VALUE:i
		IGNORED:
KEYWORD:<
EXPRESSION:3
		VALUE:3
KEYWORD:;
SEQUENCE:i  ++ 
		COMPOSITE:i  ++ 
				VARIABLE:i 
						VARIABLE:i
						IGNORED:
				KEYWORD:++
				EXPRESSION:
						IGNORED:
KEYWORD:)


[FOR, ASSIGNMENT, LINE_OF_CODE] -------> for ( var j  = 0 ; j  < 3 ; j  ++  )
KEYWORD:for
KEYWORD:(
COMPOSITE:var j  = 0
		VARIABLE:var j 
				KEYWORD:var
				NAME:j 
						NAME:j
						IGNORED:
		KEYWORD:=
		EXPRESSION:0
				VALUE:0
KEYWORD:;
VALUE:j 
		VALUE:j
		IGNORED:
KEYWORD:<
EXPRESSION:3
		VALUE:3
KEYWORD:;
SEQUENCE:j  ++ 
		COMPOSITE:j  ++ 
				VARIABLE:j 
						VARIABLE:j
						IGNORED:
				KEYWORD:++
				EXPRESSION:
						IGNORED:
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> normalMatrix [ i +3*j  ]  = mvMatrix [ i +4*j  ]
NAME:normalMatrix [ i +3*j  ]
		NAME:normalMatrix
		COMPOSITE:[ i +3*j  ]
				KEYWORD:[
				EXPRESSION:i +3*j 
						NAME:i 
								NAME:i
								IGNORED:
						OPERATOR:+
						VALUE:3
						OPERATOR:*
						NAME:j 
								NAME:j
								IGNORED:
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:mvMatrix [ i +4*j  ]
		VARIABLE:mvMatrix [ i +4*j  ]
				NAME:mvMatrix
				COMPOSITE:[ i +4*j  ]
						KEYWORD:[
						EXPRESSION:i +4*j 
								VARIABLE:i 
										NAME:i
										IGNORED:
								OPERATOR:+
								VALUE:4
								OPERATOR:*
								VARIABLE:j 
										NAME:j
										IGNORED:
						KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. frontFace ( gl. CCW )
OPENGL_CALL:gl. frontFace ( gl. CCW )
		KEYWORD:gl.
		NAME:frontFace
		KEYWORD:(
		SEQUENCE:gl. CCW
				EXPRESSION:gl. CCW
						OPENGL_CONSTANT:gl. CCW
								KEYWORD:gl.
								NAME:CCW
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, teapotVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, teapotVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, teapotVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:teapotVertexPositionBuffer [ 0 ]
						VARIABLE:teapotVertexPositionBuffer [ 0 ]
								NAME:teapotVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( vertexPositionAttribute , teapotVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( vertexPositionAttribute , teapotVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:vertexPositionAttribute , teapotVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:vertexPositionAttribute 
						VARIABLE:vertexPositionAttribute 
								NAME:vertexPositionAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:teapotVertexPositionBuffer [ 1 ]
						VARIABLE:teapotVertexPositionBuffer [ 1 ]
								NAME:teapotVertexPositionBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, teapotVertexNormalBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, teapotVertexNormalBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, teapotVertexNormalBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:teapotVertexNormalBuffer [ 0 ]
						VARIABLE:teapotVertexNormalBuffer [ 0 ]
								NAME:teapotVertexNormalBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( vertexNormalAttribute , teapotVertexNormalBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( vertexNormalAttribute , teapotVertexNormalBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:vertexNormalAttribute , teapotVertexNormalBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:vertexNormalAttribute 
						VARIABLE:vertexNormalAttribute 
								NAME:vertexNormalAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:teapotVertexNormalBuffer [ 1 ]
						VARIABLE:teapotVertexNormalBuffer [ 1 ]
								NAME:teapotVertexNormalBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, teapotVertexIndexBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, teapotVertexIndexBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ELEMENT_ARRAY_BUFFER, teapotVertexIndexBuffer [ 0 ]
				EXPRESSION:gl. ELEMENT_ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ELEMENT_ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ELEMENT_ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:teapotVertexIndexBuffer [ 0 ]
						VARIABLE:teapotVertexIndexBuffer [ 0 ]
								NAME:teapotVertexIndexBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.setMatrixUniforms  ( gl  )
CALL: this.setMatrixUniforms  ( gl  )
		IGNORED:
		SEQUENCE:this.setMatrixUniforms  ( gl  )
				COMPOSITE:this.setMatrixUniforms  ( gl  )
						COMPOSITE:this.setMatrixUniforms 
								NAME:this.setMatrixUniforms
								IGNORED:
						KEYWORD:(
						SEQUENCE:gl 
								EXPRESSION:gl 
										VARIABLE:gl 
												NAME:gl
												IGNORED:
						KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. drawElements ( gl. TRIANGLES, teapotVertexIndexBuffer [ 2 ], gl. UNSIGNED_SHORT, 0 )
OPENGL_CALL:gl. drawElements ( gl. TRIANGLES, teapotVertexIndexBuffer [ 2 ], gl. UNSIGNED_SHORT, 0 )
		KEYWORD:gl.
		NAME:drawElements
		KEYWORD:(
		SEQUENCE:gl. TRIANGLES, teapotVertexIndexBuffer [ 2 ], gl. UNSIGNED_SHORT, 0
				EXPRESSION:gl. TRIANGLES
						OPENGL_CONSTANT:gl. TRIANGLES
								KEYWORD:gl.
								NAME:TRIANGLES
				KEYWORD:, 
				EXPRESSION:teapotVertexIndexBuffer [ 2 ]
						VARIABLE:teapotVertexIndexBuffer [ 2 ]
								NAME:teapotVertexIndexBuffer
								COMPOSITE:[ 2 ]
										KEYWORD:[
										EXPRESSION:2
												VALUE:2
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. UNSIGNED_SHORT
						OPENGL_CONSTANT:gl. UNSIGNED_SHORT
								KEYWORD:gl.
								NAME:UNSIGNED_SHORT
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.animate  (  )
CALL: this.animate  (  )
		IGNORED:
		SEQUENCE:this.animate  (  )
				COMPOSITE:this.animate  (  )
						COMPOSITE:this.animate 
								NAME:this.animate
								IGNORED:
						KEYWORD:(
						SEQUENCE:
						KEYWORD:)


[METHOD_DECLARATION] -------> , animate : function (  )
KEYWORD:,
NAME:animate
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var timeNow  = new  Date  (  ) . getTime  (  )
VARIABLE:var timeNow 
		KEYWORD:var
		NAME:timeNow 
				NAME:timeNow
				IGNORED:
KEYWORD:=
CALL:new  Date  (  ) . getTime  (  )
		COMPOSITE:new  Date  (  ) .
				NEW_STATEMENT:new  Date  (  )
						KEYWORD:new 
						TYPE:Date 
								TYPE:Date
								IGNORED:
						COMPOSITE:(  )
								KEYWORD:(
								SEQUENCE:
								KEYWORD:)
				KEYWORD:.
		SEQUENCE:getTime  (  )
				COMPOSITE:getTime  (  )
						COMPOSITE:getTime 
								NAME:getTime
								IGNORED:
						KEYWORD:(
						SEQUENCE:
						KEYWORD:)


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( lastTime !=0 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:lastTime !=0
		VARIABLE:lastTime 
				NAME:lastTime
				IGNORED:
		OPERATOR:!=
		VALUE:0
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var elapsed  = timeNow -lastTime 
VARIABLE:var elapsed 
		KEYWORD:var
		NAME:elapsed 
				NAME:elapsed
				IGNORED:
KEYWORD:=
EXPRESSION:timeNow -lastTime 
		VARIABLE:timeNow 
				NAME:timeNow
				IGNORED:
		OPERATOR:-
		VARIABLE:lastTime 
				NAME:lastTime
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> rAnglex  + = speedx *elapsed *0.001
NAME:rAnglex 
		NAME:rAnglex
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION:speedx *elapsed *0.001
		VARIABLE:speedx 
				NAME:speedx
				IGNORED:
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> rAngley  + = speedy *elapsed *0.001
NAME:rAngley 
		NAME:rAngley
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION:speedy *elapsed *0.001
		VARIABLE:speedy 
				NAME:speedy
				IGNORED:
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> lastTime   = timeNow 
NAME:lastTime 
		NAME:lastTime
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:timeNow 
		VARIABLE:timeNow 
				NAME:timeNow
				IGNORED:


[METHOD_DECLARATION] -------> , handleKeys : function (  )
KEYWORD:,
NAME:handleKeys
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var timeNow  = new  Date  (  ) . getTime  (  )
VARIABLE:var timeNow 
		KEYWORD:var
		NAME:timeNow 
				NAME:timeNow
				IGNORED:
KEYWORD:=
CALL:new  Date  (  ) . getTime  (  )
		COMPOSITE:new  Date  (  ) .
				NEW_STATEMENT:new  Date  (  )
						KEYWORD:new 
						TYPE:Date 
								TYPE:Date
								IGNORED:
						COMPOSITE:(  )
								KEYWORD:(
								SEQUENCE:
								KEYWORD:)
				KEYWORD:.
		SEQUENCE:getTime  (  )
				COMPOSITE:getTime  (  )
						COMPOSITE:getTime 
								NAME:getTime
								IGNORED:
						KEYWORD:(
						SEQUENCE:
						KEYWORD:)


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( lastTime2 !=0 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:lastTime2 !=0
		VARIABLE:lastTime2 
				NAME:lastTime2
				IGNORED:
		OPERATOR:!=
		VALUE:0
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var elapsed  = timeNow -lastTime2 
VARIABLE:var elapsed 
		KEYWORD:var
		NAME:elapsed 
				NAME:elapsed
				IGNORED:
KEYWORD:=
EXPRESSION:timeNow -lastTime2 
		VARIABLE:timeNow 
				NAME:timeNow
				IGNORED:
		OPERATOR:-
		VARIABLE:lastTime2 
				NAME:lastTime2
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands [ 0 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands [ 0 ]
		VARIABLE:commands [ 0 ]
				NAME:commands
				COMPOSITE:[ 0 ]
						KEYWORD:[
						EXPRESSION:0
								VALUE:0
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> zoom  + = 5*elapsed *0.001
NAME:zoom 
		NAME:zoom
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION:5*elapsed *0.001
		VALUE:5
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands [ 1 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands [ 1 ]
		VARIABLE:commands [ 1 ]
				NAME:commands
				COMPOSITE:[ 1 ]
						KEYWORD:[
						EXPRESSION:1
								VALUE:1
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> zoom  - = 5*elapsed *0.001
NAME:zoom 
		NAME:zoom
		IGNORED:
KEYWORD:-
KEYWORD:=
EXPRESSION:5*elapsed *0.001
		VALUE:5
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands [ 2 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands [ 2 ]
		VARIABLE:commands [ 2 ]
				NAME:commands
				COMPOSITE:[ 2 ]
						KEYWORD:[
						EXPRESSION:2
								VALUE:2
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> speedx  - = 2*elapsed *0.001
NAME:speedx 
		NAME:speedx
		IGNORED:
KEYWORD:-
KEYWORD:=
EXPRESSION:2*elapsed *0.001
		VALUE:2
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands [ 3 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands [ 3 ]
		VARIABLE:commands [ 3 ]
				NAME:commands
				COMPOSITE:[ 3 ]
						KEYWORD:[
						EXPRESSION:3
								VALUE:3
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> speedx  + = 2*elapsed *0.001
NAME:speedx 
		NAME:speedx
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION:2*elapsed *0.001
		VALUE:2
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands [ 4 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands [ 4 ]
		VARIABLE:commands [ 4 ]
				NAME:commands
				COMPOSITE:[ 4 ]
						KEYWORD:[
						EXPRESSION:4
								VALUE:4
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> speedy  - = 2*elapsed *0.001
NAME:speedy 
		NAME:speedy
		IGNORED:
KEYWORD:-
KEYWORD:=
EXPRESSION:2*elapsed *0.001
		VALUE:2
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands [ 5 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands [ 5 ]
		VARIABLE:commands [ 5 ]
				NAME:commands
				COMPOSITE:[ 5 ]
						KEYWORD:[
						EXPRESSION:5
								VALUE:5
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> speedy  + = 2*elapsed *0.001
NAME:speedy 
		NAME:speedy
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION:2*elapsed *0.001
		VALUE:2
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> lastTime2   = timeNow 
NAME:lastTime2 
		NAME:lastTime2
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:timeNow 
		VARIABLE:timeNow 
				NAME:timeNow
				IGNORED:


[METHOD_DECLARATION] -------> , setCommands : function ( e , value  )
KEYWORD:,
NAME:setCommands
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:e , value 
		VARIABLE:e 
				NAME:e
				IGNORED:
		KEYWORD:, 
		VARIABLE:value 
				NAME:value
				IGNORED:
KEYWORD:)


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==65 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==65
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:65
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 0 ]  = value 
NAME:commands [ 0 ]
		NAME:commands
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==90 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==90
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:90
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 1 ]  = value 
NAME:commands [ 1 ]
		NAME:commands
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==38 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==38
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:38
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 2 ]  = value 
NAME:commands [ 2 ]
		NAME:commands
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==40 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==40
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:40
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 3 ]  = value 
NAME:commands [ 3 ]
		NAME:commands
		COMPOSITE:[ 3 ]
				KEYWORD:[
				EXPRESSION:3
						VALUE:3
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==37 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==37
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:37
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 4 ]  = value 
NAME:commands [ 4 ]
		NAME:commands
		COMPOSITE:[ 4 ]
				KEYWORD:[
				EXPRESSION:4
						VALUE:4
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==39 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==39
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:39
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 5 ]  = value 
NAME:commands [ 5 ]
		NAME:commands
		COMPOSITE:[ 5 ]
				KEYWORD:[
				EXPRESSION:5
						VALUE:5
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[METHOD_DECLARATION] -------> , keyPressed : function ( e  )
KEYWORD:,
NAME:keyPressed
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:e 
		VARIABLE:e 
				NAME:e
				IGNORED:
KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.setCommands  ( e , true  )
CALL: this.setCommands  ( e , true  )
		IGNORED:
		SEQUENCE:this.setCommands  ( e , true  )
				COMPOSITE:this.setCommands  ( e , true  )
						COMPOSITE:this.setCommands 
								NAME:this.setCommands
								IGNORED:
						KEYWORD:(
						SEQUENCE:e , true 
								EXPRESSION:e 
										VARIABLE:e 
												NAME:e
												IGNORED:
								KEYWORD:, 
								EXPRESSION:true 
										VARIABLE:true 
												NAME:true
												IGNORED:
						KEYWORD:)


[METHOD_DECLARATION] -------> , keyReleased : function ( e  )
KEYWORD:,
NAME:keyReleased
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:e 
		VARIABLE:e 
				NAME:e
				IGNORED:
KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.setCommands  ( e , false  )
CALL: this.setCommands  ( e , false  )
		IGNORED:
		SEQUENCE:this.setCommands  ( e , false  )
				COMPOSITE:this.setCommands  ( e , false  )
						COMPOSITE:this.setCommands 
								NAME:this.setCommands
								IGNORED:
						KEYWORD:(
						SEQUENCE:e , false 
								EXPRESSION:e 
										VARIABLE:e 
												NAME:e
												IGNORED:
								KEYWORD:, 
								EXPRESSION:false 
										VARIABLE:false 
												NAME:false
												IGNORED:
						KEYWORD:)



test_sv9Drawer.js
[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var vertexPositionAttribute 
VARIABLE:var vertexPositionAttribute 
		KEYWORD:var
		NAME:vertexPositionAttribute 
				NAME:vertexPositionAttribute
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var vertexNormalAttribute 
VARIABLE:var vertexNormalAttribute 
		KEYWORD:var
		NAME:vertexNormalAttribute 
				NAME:vertexNormalAttribute
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var textureCoordAttribute 
VARIABLE:var textureCoordAttribute 
		KEYWORD:var
		NAME:textureCoordAttribute 
				NAME:textureCoordAttribute
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var pMatrixUniform 
VARIABLE:var pMatrixUniform 
		KEYWORD:var
		NAME:pMatrixUniform 
				NAME:pMatrixUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var mvMatrixUniform 
VARIABLE:var mvMatrixUniform 
		KEYWORD:var
		NAME:mvMatrixUniform 
				NAME:mvMatrixUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var nMatrixUniform 
VARIABLE:var nMatrixUniform 
		KEYWORD:var
		NAME:nMatrixUniform 
				NAME:nMatrixUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var samplerUniform 
VARIABLE:var samplerUniform 
		KEYWORD:var
		NAME:samplerUniform 
				NAME:samplerUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var ambientColorUniform 
VARIABLE:var ambientColorUniform 
		KEYWORD:var
		NAME:ambientColorUniform 
				NAME:ambientColorUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var pointLightingLocationUniform 
VARIABLE:var pointLightingLocationUniform 
		KEYWORD:var
		NAME:pointLightingLocationUniform 
				NAME:pointLightingLocationUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var pointLightingSpecularColorUniform 
VARIABLE:var pointLightingSpecularColorUniform 
		KEYWORD:var
		NAME:pointLightingSpecularColorUniform 
				NAME:pointLightingSpecularColorUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var pointLightingDiffuseColorUniform 
VARIABLE:var pointLightingDiffuseColorUniform 
		KEYWORD:var
		NAME:pointLightingDiffuseColorUniform 
				NAME:pointLightingDiffuseColorUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var materialShininessUniform 
VARIABLE:var materialShininessUniform 
		KEYWORD:var
		NAME:materialShininessUniform 
				NAME:materialShininessUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var alphaUniform 
VARIABLE:var alphaUniform 
		KEYWORD:var
		NAME:alphaUniform 
				NAME:alphaUniform
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var greenVertexPositionBuffer  = new  Array  (  )
VARIABLE:var greenVertexPositionBuffer 
		KEYWORD:var
		NAME:greenVertexPositionBuffer 
				NAME:greenVertexPositionBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var greenVertexTextureCoordBuffer  = new  Array  (  )
VARIABLE:var greenVertexTextureCoordBuffer 
		KEYWORD:var
		NAME:greenVertexTextureCoordBuffer 
				NAME:greenVertexTextureCoordBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var greenVertexNormalBuffer  = new  Array  (  )
VARIABLE:var greenVertexNormalBuffer 
		KEYWORD:var
		NAME:greenVertexNormalBuffer 
				NAME:greenVertexNormalBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var sphereVertexPositionBuffer  = new  Array  (  )
VARIABLE:var sphereVertexPositionBuffer 
		KEYWORD:var
		NAME:sphereVertexPositionBuffer 
				NAME:sphereVertexPositionBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var sphereVertexNormalBuffer  = new  Array  (  )
VARIABLE:var sphereVertexNormalBuffer 
		KEYWORD:var
		NAME:sphereVertexNormalBuffer 
				NAME:sphereVertexNormalBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var sphereVertexIndexBuffer  = new  Array  (  )
VARIABLE:var sphereVertexIndexBuffer 
		KEYWORD:var
		NAME:sphereVertexIndexBuffer 
				NAME:sphereVertexIndexBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var sphereVertexTextureCoordBuffer  = new  Array  (  )
VARIABLE:var sphereVertexTextureCoordBuffer 
		KEYWORD:var
		NAME:sphereVertexTextureCoordBuffer 
				NAME:sphereVertexTextureCoordBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var textures  = new  Array  (  )
VARIABLE:var textures 
		KEYWORD:var
		NAME:textures 
				NAME:textures
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var pMatrix 
VARIABLE:var pMatrix 
		KEYWORD:var
		NAME:pMatrix 
				NAME:pMatrix
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var mvMatrix 
VARIABLE:var mvMatrix 
		KEYWORD:var
		NAME:mvMatrix 
				NAME:mvMatrix
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var normalMatrix 
VARIABLE:var normalMatrix 
		KEYWORD:var
		NAME:normalMatrix 
				NAME:normalMatrix
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var zoom  = -8
VARIABLE:var zoom 
		KEYWORD:var
		NAME:zoom 
				NAME:zoom
				IGNORED:
KEYWORD:=
EXPRESSION:-8
		VALUE:-8


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var lastTime2  = 0
VARIABLE:var lastTime2 
		KEYWORD:var
		NAME:lastTime2 
				NAME:lastTime2
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var commands  = new  Array  (  )
VARIABLE:var commands 
		KEYWORD:var
		NAME:commands 
				NAME:commands
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var lastMouseX  = -1
VARIABLE:var lastMouseX 
		KEYWORD:var
		NAME:lastMouseX 
				NAME:lastMouseX
				IGNORED:
KEYWORD:=
EXPRESSION:-1
		VALUE:-1


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var lastMouseY  = -1
VARIABLE:var lastMouseY 
		KEYWORD:var
		NAME:lastMouseY 
				NAME:lastMouseY
				IGNORED:
KEYWORD:=
EXPRESSION:-1
		VALUE:-1


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var rotationMatrix  = new  Float32Array  ( [ 1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1 ] )
VARIABLE:var rotationMatrix 
		KEYWORD:var
		NAME:rotationMatrix 
				NAME:rotationMatrix
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Float32Array  ( [ 1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1 ] )
		KEYWORD:new 
		TYPE:Float32Array 
				TYPE:Float32Array
				IGNORED:
		COMPOSITE:( [ 1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1 ] )
				KEYWORD:(
				SEQUENCE:[ 1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1 ]
						ARRAY_CONTENT:[ 1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1 ]
								KEYWORD:[
								SEQUENCE:1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1
										EXPRESSION:1
												VALUE:1
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:1
												VALUE:1
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:1
												VALUE:1
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:1
												VALUE:1
								KEYWORD:]
				KEYWORD:)


[CONSTRUCTOR_DECLARATION] -------> function Test_sv9Drawer  (  )
KEYWORD:function
NAME:Test_sv9Drawer 
		NAME:Test_sv9Drawer
		IGNORED:
KEYWORD:(
METHOD_VARIABLES:
KEYWORD:)


[CLASS_DECLARATION] -------> Test_sv9Drawer . prototype =
NAME:Test_sv9Drawer
KEYWORD:.
KEYWORD:prototype
KEYWORD:=


[METHOD_DECLARATION] ------->  initShaders : function ( gl  )
IGNORED:
NAME:initShaders
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var shaderProgram  =  getShaderProgram  ( gl , "shaders /shader6.fs" , "shaders /shader6.vs"  )
VARIABLE:var shaderProgram 
		KEYWORD:var
		NAME:shaderProgram 
				NAME:shaderProgram
				IGNORED:
KEYWORD:=
CALL: getShaderProgram  ( gl , "shaders /shader6.fs" , "shaders /shader6.vs"  )
		IGNORED:
		SEQUENCE:getShaderProgram  ( gl , "shaders /shader6.fs" , "shaders /shader6.vs"  )
				COMPOSITE:getShaderProgram  ( gl , "shaders /shader6.fs" , "shaders /shader6.vs"  )
						COMPOSITE:getShaderProgram 
								NAME:getShaderProgram
								IGNORED:
						KEYWORD:(
						SEQUENCE:gl , "shaders /shader6.fs" , "shaders /shader6.vs" 
								EXPRESSION:gl 
										VARIABLE:gl 
												NAME:gl
												IGNORED:
								KEYWORD:, 
								EXPRESSION:"shaders /shader6.fs" 
										VARIABLE:"shaders 
												NAME:"shaders
												IGNORED:
										OPERATOR:/
										VARIABLE:shader6.fs" 
												NAME:shader6.fs"
												IGNORED:
								KEYWORD:, 
								EXPRESSION:"shaders /shader6.vs" 
										VARIABLE:"shaders 
												NAME:"shaders
												IGNORED:
										OPERATOR:/
										VARIABLE:shader6.vs" 
												NAME:shader6.vs"
												IGNORED:
						KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> vertexPositionAttribute   = gl. getAttribLocation ( shaderProgram , "aVertexPosition"  )
NAME:vertexPositionAttribute 
		NAME:vertexPositionAttribute
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getAttribLocation ( shaderProgram , "aVertexPosition"  )
		OPENGL_CALL:gl. getAttribLocation ( shaderProgram , "aVertexPosition"  )
				KEYWORD:gl.
				NAME:getAttribLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "aVertexPosition" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"aVertexPosition" 
								VARIABLE:"aVertexPosition" 
										NAME:"aVertexPosition"
										IGNORED:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enableVertexAttribArray ( vertexPositionAttribute  )
OPENGL_CALL:gl. enableVertexAttribArray ( vertexPositionAttribute  )
		KEYWORD:gl.
		NAME:enableVertexAttribArray
		KEYWORD:(
		SEQUENCE:vertexPositionAttribute 
				EXPRESSION:vertexPositionAttribute 
						VARIABLE:vertexPositionAttribute 
								NAME:vertexPositionAttribute
								IGNORED:
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> vertexNormalAttribute   = gl. getAttribLocation ( shaderProgram , "aVertexNormal"  )
NAME:vertexNormalAttribute 
		NAME:vertexNormalAttribute
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getAttribLocation ( shaderProgram , "aVertexNormal"  )
		OPENGL_CALL:gl. getAttribLocation ( shaderProgram , "aVertexNormal"  )
				KEYWORD:gl.
				NAME:getAttribLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "aVertexNormal" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"aVertexNormal" 
								VARIABLE:"aVertexNormal" 
										NAME:"aVertexNormal"
										IGNORED:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enableVertexAttribArray ( vertexNormalAttribute  )
OPENGL_CALL:gl. enableVertexAttribArray ( vertexNormalAttribute  )
		KEYWORD:gl.
		NAME:enableVertexAttribArray
		KEYWORD:(
		SEQUENCE:vertexNormalAttribute 
				EXPRESSION:vertexNormalAttribute 
						VARIABLE:vertexNormalAttribute 
								NAME:vertexNormalAttribute
								IGNORED:
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> textureCoordAttribute   = gl. getAttribLocation ( shaderProgram , "aTextureCoord"  )
NAME:textureCoordAttribute 
		NAME:textureCoordAttribute
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getAttribLocation ( shaderProgram , "aTextureCoord"  )
		OPENGL_CALL:gl. getAttribLocation ( shaderProgram , "aTextureCoord"  )
				KEYWORD:gl.
				NAME:getAttribLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "aTextureCoord" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"aTextureCoord" 
								VARIABLE:"aTextureCoord" 
										NAME:"aTextureCoord"
										IGNORED:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enableVertexAttribArray ( textureCoordAttribute  )
OPENGL_CALL:gl. enableVertexAttribArray ( textureCoordAttribute  )
		KEYWORD:gl.
		NAME:enableVertexAttribArray
		KEYWORD:(
		SEQUENCE:textureCoordAttribute 
				EXPRESSION:textureCoordAttribute 
						VARIABLE:textureCoordAttribute 
								NAME:textureCoordAttribute
								IGNORED:
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pMatrixUniform   = gl. getUniformLocation ( shaderProgram , "uPMatrix"  )
NAME:pMatrixUniform 
		NAME:pMatrixUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uPMatrix"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uPMatrix"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uPMatrix" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uPMatrix" 
								VARIABLE:"uPMatrix" 
										NAME:"uPMatrix"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrixUniform   = gl. getUniformLocation ( shaderProgram , "uMVMatrix"  )
NAME:mvMatrixUniform 
		NAME:mvMatrixUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uMVMatrix"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uMVMatrix"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uMVMatrix" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uMVMatrix" 
								VARIABLE:"uMVMatrix" 
										NAME:"uMVMatrix"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> nMatrixUniform   = gl. getUniformLocation ( shaderProgram , "uNMatrix"  )
NAME:nMatrixUniform 
		NAME:nMatrixUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uNMatrix"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uNMatrix"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uNMatrix" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uNMatrix" 
								VARIABLE:"uNMatrix" 
										NAME:"uNMatrix"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> samplerUniform   = gl. getUniformLocation ( shaderProgram , "uSampler"  )
NAME:samplerUniform 
		NAME:samplerUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uSampler"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uSampler"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uSampler" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uSampler" 
								VARIABLE:"uSampler" 
										NAME:"uSampler"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> ambientColorUniform   = gl. getUniformLocation ( shaderProgram , "uAmbientColor"  )
NAME:ambientColorUniform 
		NAME:ambientColorUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uAmbientColor"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uAmbientColor"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uAmbientColor" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uAmbientColor" 
								VARIABLE:"uAmbientColor" 
										NAME:"uAmbientColor"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pointLightingLocationUniform   = gl. getUniformLocation ( shaderProgram , "uPointLightingLocation"  )
NAME:pointLightingLocationUniform 
		NAME:pointLightingLocationUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uPointLightingLocation"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uPointLightingLocation"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uPointLightingLocation" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uPointLightingLocation" 
								VARIABLE:"uPointLightingLocation" 
										NAME:"uPointLightingLocation"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pointLightingSpecularColorUniform   = gl. getUniformLocation ( shaderProgram , "uPointLightingSpecularColor"  )
NAME:pointLightingSpecularColorUniform 
		NAME:pointLightingSpecularColorUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uPointLightingSpecularColor"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uPointLightingSpecularColor"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uPointLightingSpecularColor" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uPointLightingSpecularColor" 
								VARIABLE:"uPointLightingSpecularColor" 
										NAME:"uPointLightingSpecularColor"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pointLightingDiffuseColorUniform   = gl. getUniformLocation ( shaderProgram , "uPointLightingDiffuseColor"  )
NAME:pointLightingDiffuseColorUniform 
		NAME:pointLightingDiffuseColorUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uPointLightingDiffuseColor"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uPointLightingDiffuseColor"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uPointLightingDiffuseColor" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uPointLightingDiffuseColor" 
								VARIABLE:"uPointLightingDiffuseColor" 
										NAME:"uPointLightingDiffuseColor"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> materialShininessUniform   = gl. getUniformLocation ( shaderProgram , "uMaterialShininess"  )
NAME:materialShininessUniform 
		NAME:materialShininessUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uMaterialShininess"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uMaterialShininess"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uMaterialShininess" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uMaterialShininess" 
								VARIABLE:"uMaterialShininess" 
										NAME:"uMaterialShininess"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> alphaUniform   = gl. getUniformLocation ( shaderProgram , "uAlpha"  )
NAME:alphaUniform 
		NAME:alphaUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uAlpha"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uAlpha"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uAlpha" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uAlpha" 
								VARIABLE:"uAlpha" 
										NAME:"uAlpha"
										IGNORED:
				KEYWORD:)


[METHOD_DECLARATION] -------> , setMatrixUniforms : function ( gl  )
KEYWORD:,
NAME:setMatrixUniforms
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniformMatrix4fv ( pMatrixUniform , false , pMatrix  )
OPENGL_CALL:gl. uniformMatrix4fv ( pMatrixUniform , false , pMatrix  )
		KEYWORD:gl.
		NAME:uniformMatrix4fv
		KEYWORD:(
		SEQUENCE:pMatrixUniform , false , pMatrix 
				EXPRESSION:pMatrixUniform 
						VARIABLE:pMatrixUniform 
								NAME:pMatrixUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:pMatrix 
						VARIABLE:pMatrix 
								NAME:pMatrix
								IGNORED:
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniformMatrix4fv ( mvMatrixUniform , false , mvMatrix  )
OPENGL_CALL:gl. uniformMatrix4fv ( mvMatrixUniform , false , mvMatrix  )
		KEYWORD:gl.
		NAME:uniformMatrix4fv
		KEYWORD:(
		SEQUENCE:mvMatrixUniform , false , mvMatrix 
				EXPRESSION:mvMatrixUniform 
						VARIABLE:mvMatrixUniform 
								NAME:mvMatrixUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:mvMatrix 
						VARIABLE:mvMatrix 
								NAME:mvMatrix
								IGNORED:
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniformMatrix3fv ( nMatrixUniform , false , normalMatrix  )
OPENGL_CALL:gl. uniformMatrix3fv ( nMatrixUniform , false , normalMatrix  )
		KEYWORD:gl.
		NAME:uniformMatrix3fv
		KEYWORD:(
		SEQUENCE:nMatrixUniform , false , normalMatrix 
				EXPRESSION:nMatrixUniform 
						VARIABLE:nMatrixUniform 
								NAME:nMatrixUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:normalMatrix 
						VARIABLE:normalMatrix 
								NAME:normalMatrix
								IGNORED:
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniform3f ( ambientColorUniform , 0.1, 0.1, 0.1 )
OPENGL_CALL:gl. uniform3f ( ambientColorUniform , 0.1, 0.1, 0.1 )
		KEYWORD:gl.
		NAME:uniform3f
		KEYWORD:(
		SEQUENCE:ambientColorUniform , 0.1, 0.1, 0.1
				EXPRESSION:ambientColorUniform 
						VARIABLE:ambientColorUniform 
								NAME:ambientColorUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0.1
						VALUE:0.1
				KEYWORD:, 
				EXPRESSION:0.1
						VALUE:0.1
				KEYWORD:, 
				EXPRESSION:0.1
						VALUE:0.1
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniform3f ( pointLightingLocationUniform , -10, 0, 5 )
OPENGL_CALL:gl. uniform3f ( pointLightingLocationUniform , -10, 0, 5 )
		KEYWORD:gl.
		NAME:uniform3f
		KEYWORD:(
		SEQUENCE:pointLightingLocationUniform , -10, 0, 5
				EXPRESSION:pointLightingLocationUniform 
						VARIABLE:pointLightingLocationUniform 
								NAME:pointLightingLocationUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:-10
						VALUE:-10
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:5
						VALUE:5
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniform3f ( pointLightingDiffuseColorUniform , 0.4, 0.4, 0.4 )
OPENGL_CALL:gl. uniform3f ( pointLightingDiffuseColorUniform , 0.4, 0.4, 0.4 )
		KEYWORD:gl.
		NAME:uniform3f
		KEYWORD:(
		SEQUENCE:pointLightingDiffuseColorUniform , 0.4, 0.4, 0.4
				EXPRESSION:pointLightingDiffuseColorUniform 
						VARIABLE:pointLightingDiffuseColorUniform 
								NAME:pointLightingDiffuseColorUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0.4
						VALUE:0.4
				KEYWORD:, 
				EXPRESSION:0.4
						VALUE:0.4
				KEYWORD:, 
				EXPRESSION:0.4
						VALUE:0.4
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniform3f ( pointLightingSpecularColorUniform , 0.5, 0.5, 0.5 )
OPENGL_CALL:gl. uniform3f ( pointLightingSpecularColorUniform , 0.5, 0.5, 0.5 )
		KEYWORD:gl.
		NAME:uniform3f
		KEYWORD:(
		SEQUENCE:pointLightingSpecularColorUniform , 0.5, 0.5, 0.5
				EXPRESSION:pointLightingSpecularColorUniform 
						VARIABLE:pointLightingSpecularColorUniform 
								NAME:pointLightingSpecularColorUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0.5
						VALUE:0.5
				KEYWORD:, 
				EXPRESSION:0.5
						VALUE:0.5
				KEYWORD:, 
				EXPRESSION:0.5
						VALUE:0.5
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniform1f ( materialShininessUniform , 50 )
OPENGL_CALL:gl. uniform1f ( materialShininessUniform , 50 )
		KEYWORD:gl.
		NAME:uniform1f
		KEYWORD:(
		SEQUENCE:materialShininessUniform , 50
				EXPRESSION:materialShininessUniform 
						VARIABLE:materialShininessUniform 
								NAME:materialShininessUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:50
						VALUE:50
		KEYWORD:)


[METHOD_DECLARATION] -------> , initBuffers : function ( gl  )
KEYWORD:,
NAME:initBuffers
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var latitudeBands  = 30
VARIABLE:var latitudeBands 
		KEYWORD:var
		NAME:latitudeBands 
				NAME:latitudeBands
				IGNORED:
KEYWORD:=
EXPRESSION:30
		VALUE:30


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var longitudeBands  = 30
VARIABLE:var longitudeBands 
		KEYWORD:var
		NAME:longitudeBands 
				NAME:longitudeBands
				IGNORED:
KEYWORD:=
EXPRESSION:30
		VALUE:30


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var radius  = 2
VARIABLE:var radius 
		KEYWORD:var
		NAME:radius 
				NAME:radius
				IGNORED:
KEYWORD:=
EXPRESSION:2
		VALUE:2


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var vertices  = new  Array  (  )
VARIABLE:var vertices 
		KEYWORD:var
		NAME:vertices 
				NAME:vertices
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var normals  = new  Array  (  )
VARIABLE:var normals 
		KEYWORD:var
		NAME:normals 
				NAME:normals
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var textureCoords  = new  Array  (  )
VARIABLE:var textureCoords 
		KEYWORD:var
		NAME:textureCoords 
				NAME:textureCoords
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var sphereVertexIndices  = new  Array  (  )
VARIABLE:var sphereVertexIndices 
		KEYWORD:var
		NAME:sphereVertexIndices 
				NAME:sphereVertexIndices
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[FOR, ASSIGNMENT, LINE_OF_CODE] -------> for ( var i  = 0 ; i  <= latitudeBands  ; i  ++  )
KEYWORD:for
KEYWORD:(
COMPOSITE:var i  = 0
		VARIABLE:var i 
				KEYWORD:var
				NAME:i 
						NAME:i
						IGNORED:
		KEYWORD:=
		EXPRESSION:0
				VALUE:0
KEYWORD:;
VALUE:i 
		VALUE:i
		IGNORED:
KEYWORD:<=
EXPRESSION:latitudeBands 
		VARIABLE:latitudeBands 
				NAME:latitudeBands
				IGNORED:
KEYWORD:;
SEQUENCE:i  ++ 
		COMPOSITE:i  ++ 
				VARIABLE:i 
						VARIABLE:i
						IGNORED:
				KEYWORD:++
				EXPRESSION:
						IGNORED:
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var theta  = i *Math.PI /latitudeBands 
VARIABLE:var theta 
		KEYWORD:var
		NAME:theta 
				NAME:theta
				IGNORED:
KEYWORD:=
EXPRESSION:i *Math.PI /latitudeBands 
		VARIABLE:i 
				NAME:i
				IGNORED:
		OPERATOR:*
		VARIABLE:Math.PI 
				NAME:Math.PI
				IGNORED:
		OPERATOR:/
		VARIABLE:latitudeBands 
				NAME:latitudeBands
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var sinTheta  =  Math.sin  ( theta  )
VARIABLE:var sinTheta 
		KEYWORD:var
		NAME:sinTheta 
				NAME:sinTheta
				IGNORED:
KEYWORD:=
CALL: Math.sin  ( theta  )
		IGNORED:
		SEQUENCE:Math.sin  ( theta  )
				COMPOSITE:Math.sin  ( theta  )
						COMPOSITE:Math.sin 
								NAME:Math.sin
								IGNORED:
						KEYWORD:(
						SEQUENCE:theta 
								EXPRESSION:theta 
										VARIABLE:theta 
												NAME:theta
												IGNORED:
						KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cosTheta  =  Math.cos  ( theta  )
VARIABLE:var cosTheta 
		KEYWORD:var
		NAME:cosTheta 
				NAME:cosTheta
				IGNORED:
KEYWORD:=
CALL: Math.cos  ( theta  )
		IGNORED:
		SEQUENCE:Math.cos  ( theta  )
				COMPOSITE:Math.cos  ( theta  )
						COMPOSITE:Math.cos 
								NAME:Math.cos
								IGNORED:
						KEYWORD:(
						SEQUENCE:theta 
								EXPRESSION:theta 
										VARIABLE:theta 
												NAME:theta
												IGNORED:
						KEYWORD:)


[FOR, ASSIGNMENT, LINE_OF_CODE] -------> for ( var j  = 0 ; j  <= longitudeBands  ; j  ++  )
KEYWORD:for
KEYWORD:(
COMPOSITE:var j  = 0
		VARIABLE:var j 
				KEYWORD:var
				NAME:j 
						NAME:j
						IGNORED:
		KEYWORD:=
		EXPRESSION:0
				VALUE:0
KEYWORD:;
VALUE:j 
		VALUE:j
		IGNORED:
KEYWORD:<=
EXPRESSION:longitudeBands 
		VARIABLE:longitudeBands 
				NAME:longitudeBands
				IGNORED:
KEYWORD:;
SEQUENCE:j  ++ 
		COMPOSITE:j  ++ 
				VARIABLE:j 
						VARIABLE:j
						IGNORED:
				KEYWORD:++
				EXPRESSION:
						IGNORED:
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var phi  = ( j *2*Math.PI /longitudeBands  )
VARIABLE:var phi 
		KEYWORD:var
		NAME:phi 
				NAME:phi
				IGNORED:
KEYWORD:=
EXPRESSION:( j *2*Math.PI /longitudeBands  )
		COMPOSITE:( j *2*Math.PI /longitudeBands  )
				KEYWORD:(
				EXPRESSION:j *2*Math.PI /longitudeBands 
						VARIABLE:j 
								NAME:j
								IGNORED:
						OPERATOR:*
						VALUE:2
						OPERATOR:*
						VARIABLE:Math.PI 
								NAME:Math.PI
								IGNORED:
						OPERATOR:/
						VARIABLE:longitudeBands 
								NAME:longitudeBands
								IGNORED:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var sinPhi  =  Math.sin  ( phi  )
VARIABLE:var sinPhi 
		KEYWORD:var
		NAME:sinPhi 
				NAME:sinPhi
				IGNORED:
KEYWORD:=
CALL: Math.sin  ( phi  )
		IGNORED:
		SEQUENCE:Math.sin  ( phi  )
				COMPOSITE:Math.sin  ( phi  )
						COMPOSITE:Math.sin 
								NAME:Math.sin
								IGNORED:
						KEYWORD:(
						SEQUENCE:phi 
								EXPRESSION:phi 
										VARIABLE:phi 
												NAME:phi
												IGNORED:
						KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cosPhi  =  Math.cos  ( phi  )
VARIABLE:var cosPhi 
		KEYWORD:var
		NAME:cosPhi 
				NAME:cosPhi
				IGNORED:
KEYWORD:=
CALL: Math.cos  ( phi  )
		IGNORED:
		SEQUENCE:Math.cos  ( phi  )
				COMPOSITE:Math.cos  ( phi  )
						COMPOSITE:Math.cos 
								NAME:Math.cos
								IGNORED:
						KEYWORD:(
						SEQUENCE:phi 
								EXPRESSION:phi 
										VARIABLE:phi 
												NAME:phi
												IGNORED:
						KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var x  = cosPhi *sinTheta 
VARIABLE:var x 
		KEYWORD:var
		NAME:x 
				NAME:x
				IGNORED:
KEYWORD:=
EXPRESSION:cosPhi *sinTheta 
		VARIABLE:cosPhi 
				NAME:cosPhi
				IGNORED:
		OPERATOR:*
		VARIABLE:sinTheta 
				NAME:sinTheta
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var y  = cosTheta 
VARIABLE:var y 
		KEYWORD:var
		NAME:y 
				NAME:y
				IGNORED:
KEYWORD:=
EXPRESSION:cosTheta 
		VARIABLE:cosTheta 
				NAME:cosTheta
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var z  = sinPhi *sinTheta 
VARIABLE:var z 
		KEYWORD:var
		NAME:z 
				NAME:z
				IGNORED:
KEYWORD:=
EXPRESSION:sinPhi *sinTheta 
		VARIABLE:sinPhi 
				NAME:sinPhi
				IGNORED:
		OPERATOR:*
		VARIABLE:sinTheta 
				NAME:sinTheta
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var u  = 1-j /longitudeBands 
VARIABLE:var u 
		KEYWORD:var
		NAME:u 
				NAME:u
				IGNORED:
KEYWORD:=
EXPRESSION:1-j /longitudeBands 
		VALUE:1
		OPERATOR:-
		VARIABLE:j 
				NAME:j
				IGNORED:
		OPERATOR:/
		VARIABLE:longitudeBands 
				NAME:longitudeBands
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var v  = 1-i /latitudeBands 
VARIABLE:var v 
		KEYWORD:var
		NAME:v 
				NAME:v
				IGNORED:
KEYWORD:=
EXPRESSION:1-i /latitudeBands 
		VALUE:1
		OPERATOR:-
		VARIABLE:i 
				NAME:i
				IGNORED:
		OPERATOR:/
		VARIABLE:latitudeBands 
				NAME:latitudeBands
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var index  = 3*( j +i *( longitudeBands +1 ) )
VARIABLE:var index 
		KEYWORD:var
		NAME:index 
				NAME:index
				IGNORED:
KEYWORD:=
EXPRESSION:3*( j +i *( longitudeBands +1 ) )
		VALUE:3
		OPERATOR:*
		COMPOSITE:( j +i *( longitudeBands +1 ) )
				KEYWORD:(
				EXPRESSION:j +i *( longitudeBands +1 )
						VARIABLE:j 
								NAME:j
								IGNORED:
						OPERATOR:+
						VARIABLE:i 
								NAME:i
								IGNORED:
						OPERATOR:*
						COMPOSITE:( longitudeBands +1 )
								KEYWORD:(
								EXPRESSION:longitudeBands +1
										VARIABLE:longitudeBands 
												NAME:longitudeBands
												IGNORED:
										OPERATOR:+
										VALUE:1
								KEYWORD:)
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> vertices [ index  ]  = radius *x 
NAME:vertices [ index  ]
		NAME:vertices
		COMPOSITE:[ index  ]
				KEYWORD:[
				EXPRESSION:index 
						NAME:index 
								NAME:index
								IGNORED:
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:radius *x 
		VARIABLE:radius 
				NAME:radius
				IGNORED:
		OPERATOR:*
		VARIABLE:x 
				NAME:x
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> vertices [ index +1 ]  = radius *y 
NAME:vertices [ index +1 ]
		NAME:vertices
		COMPOSITE:[ index +1 ]
				KEYWORD:[
				EXPRESSION:index +1
						NAME:index 
								NAME:index
								IGNORED:
						OPERATOR:+
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:radius *y 
		VARIABLE:radius 
				NAME:radius
				IGNORED:
		OPERATOR:*
		VARIABLE:y 
				NAME:y
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> vertices [ index +2 ]  = radius *z 
NAME:vertices [ index +2 ]
		NAME:vertices
		COMPOSITE:[ index +2 ]
				KEYWORD:[
				EXPRESSION:index +2
						NAME:index 
								NAME:index
								IGNORED:
						OPERATOR:+
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:radius *z 
		VARIABLE:radius 
				NAME:radius
				IGNORED:
		OPERATOR:*
		VARIABLE:z 
				NAME:z
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> normals [ index  ]  = x 
NAME:normals [ index  ]
		NAME:normals
		COMPOSITE:[ index  ]
				KEYWORD:[
				EXPRESSION:index 
						NAME:index 
								NAME:index
								IGNORED:
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:x 
		VARIABLE:x 
				NAME:x
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> normals [ index +1 ]  = y 
NAME:normals [ index +1 ]
		NAME:normals
		COMPOSITE:[ index +1 ]
				KEYWORD:[
				EXPRESSION:index +1
						NAME:index 
								NAME:index
								IGNORED:
						OPERATOR:+
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:y 
		VARIABLE:y 
				NAME:y
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> normals [ index +2 ]  = z 
NAME:normals [ index +2 ]
		NAME:normals
		COMPOSITE:[ index +2 ]
				KEYWORD:[
				EXPRESSION:index +2
						NAME:index 
								NAME:index
								IGNORED:
						OPERATOR:+
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:z 
		VARIABLE:z 
				NAME:z
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> index   = 2*( j +i *( longitudeBands +1 ) )
NAME:index 
		NAME:index
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:2*( j +i *( longitudeBands +1 ) )
		VALUE:2
		OPERATOR:*
		COMPOSITE:( j +i *( longitudeBands +1 ) )
				KEYWORD:(
				EXPRESSION:j +i *( longitudeBands +1 )
						VARIABLE:j 
								NAME:j
								IGNORED:
						OPERATOR:+
						VARIABLE:i 
								NAME:i
								IGNORED:
						OPERATOR:*
						COMPOSITE:( longitudeBands +1 )
								KEYWORD:(
								EXPRESSION:longitudeBands +1
										VARIABLE:longitudeBands 
												NAME:longitudeBands
												IGNORED:
										OPERATOR:+
										VALUE:1
								KEYWORD:)
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> textureCoords [ index  ]  = u 
NAME:textureCoords [ index  ]
		NAME:textureCoords
		COMPOSITE:[ index  ]
				KEYWORD:[
				EXPRESSION:index 
						NAME:index 
								NAME:index
								IGNORED:
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:u 
		VARIABLE:u 
				NAME:u
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> textureCoords [ index +1 ]  = v 
NAME:textureCoords [ index +1 ]
		NAME:textureCoords
		COMPOSITE:[ index +1 ]
				KEYWORD:[
				EXPRESSION:index +1
						NAME:index 
								NAME:index
								IGNORED:
						OPERATOR:+
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:v 
		VARIABLE:v 
				NAME:v
				IGNORED:


[FOR, ASSIGNMENT, LINE_OF_CODE] -------> for ( var i  = 0 ; i  < latitudeBands  ; i  ++  )
KEYWORD:for
KEYWORD:(
COMPOSITE:var i  = 0
		VARIABLE:var i 
				KEYWORD:var
				NAME:i 
						NAME:i
						IGNORED:
		KEYWORD:=
		EXPRESSION:0
				VALUE:0
KEYWORD:;
VALUE:i 
		VALUE:i
		IGNORED:
KEYWORD:<
EXPRESSION:latitudeBands 
		VARIABLE:latitudeBands 
				NAME:latitudeBands
				IGNORED:
KEYWORD:;
SEQUENCE:i  ++ 
		COMPOSITE:i  ++ 
				VARIABLE:i 
						VARIABLE:i
						IGNORED:
				KEYWORD:++
				EXPRESSION:
						IGNORED:
KEYWORD:)


[FOR, ASSIGNMENT, LINE_OF_CODE] -------> for ( var j  = 0 ; j  < longitudeBands  ; j  ++  )
KEYWORD:for
KEYWORD:(
COMPOSITE:var j  = 0
		VARIABLE:var j 
				KEYWORD:var
				NAME:j 
						NAME:j
						IGNORED:
		KEYWORD:=
		EXPRESSION:0
				VALUE:0
KEYWORD:;
VALUE:j 
		VALUE:j
		IGNORED:
KEYWORD:<
EXPRESSION:longitudeBands 
		VARIABLE:longitudeBands 
				NAME:longitudeBands
				IGNORED:
KEYWORD:;
SEQUENCE:j  ++ 
		COMPOSITE:j  ++ 
				VARIABLE:j 
						VARIABLE:j
						IGNORED:
				KEYWORD:++
				EXPRESSION:
						IGNORED:
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var first  = ( i *( longitudeBands +1 ) )+j 
VARIABLE:var first 
		KEYWORD:var
		NAME:first 
				NAME:first
				IGNORED:
KEYWORD:=
EXPRESSION:( i *( longitudeBands +1 ) )+j 
		COMPOSITE:( i *( longitudeBands +1 ) )
				KEYWORD:(
				EXPRESSION:i *( longitudeBands +1 )
						VARIABLE:i 
								NAME:i
								IGNORED:
						OPERATOR:*
						COMPOSITE:( longitudeBands +1 )
								KEYWORD:(
								EXPRESSION:longitudeBands +1
										VARIABLE:longitudeBands 
												NAME:longitudeBands
												IGNORED:
										OPERATOR:+
										VALUE:1
								KEYWORD:)
				KEYWORD:)
		OPERATOR:+
		VARIABLE:j 
				NAME:j
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var second  = first +longitudeBands +1
VARIABLE:var second 
		KEYWORD:var
		NAME:second 
				NAME:second
				IGNORED:
KEYWORD:=
EXPRESSION:first +longitudeBands +1
		VARIABLE:first 
				NAME:first
				IGNORED:
		OPERATOR:+
		VARIABLE:longitudeBands 
				NAME:longitudeBands
				IGNORED:
		OPERATOR:+
		VALUE:1


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var index  = 6*( j +i *longitudeBands  )
VARIABLE:var index 
		KEYWORD:var
		NAME:index 
				NAME:index
				IGNORED:
KEYWORD:=
EXPRESSION:6*( j +i *longitudeBands  )
		VALUE:6
		OPERATOR:*
		COMPOSITE:( j +i *longitudeBands  )
				KEYWORD:(
				EXPRESSION:j +i *longitudeBands 
						VARIABLE:j 
								NAME:j
								IGNORED:
						OPERATOR:+
						VARIABLE:i 
								NAME:i
								IGNORED:
						OPERATOR:*
						VARIABLE:longitudeBands 
								NAME:longitudeBands
								IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> sphereVertexIndices [ index  ]  = first 
NAME:sphereVertexIndices [ index  ]
		NAME:sphereVertexIndices
		COMPOSITE:[ index  ]
				KEYWORD:[
				EXPRESSION:index 
						NAME:index 
								NAME:index
								IGNORED:
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:first 
		VARIABLE:first 
				NAME:first
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> sphereVertexIndices [ index +1 ]  = second 
NAME:sphereVertexIndices [ index +1 ]
		NAME:sphereVertexIndices
		COMPOSITE:[ index +1 ]
				KEYWORD:[
				EXPRESSION:index +1
						NAME:index 
								NAME:index
								IGNORED:
						OPERATOR:+
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:second 
		VARIABLE:second 
				NAME:second
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> sphereVertexIndices [ index +2 ]  = first +1
NAME:sphereVertexIndices [ index +2 ]
		NAME:sphereVertexIndices
		COMPOSITE:[ index +2 ]
				KEYWORD:[
				EXPRESSION:index +2
						NAME:index 
								NAME:index
								IGNORED:
						OPERATOR:+
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:first +1
		VARIABLE:first 
				NAME:first
				IGNORED:
		OPERATOR:+
		VALUE:1


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> sphereVertexIndices [ index +3 ]  = second 
NAME:sphereVertexIndices [ index +3 ]
		NAME:sphereVertexIndices
		COMPOSITE:[ index +3 ]
				KEYWORD:[
				EXPRESSION:index +3
						NAME:index 
								NAME:index
								IGNORED:
						OPERATOR:+
						VALUE:3
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:second 
		VARIABLE:second 
				NAME:second
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> sphereVertexIndices [ index +4 ]  = second +1
NAME:sphereVertexIndices [ index +4 ]
		NAME:sphereVertexIndices
		COMPOSITE:[ index +4 ]
				KEYWORD:[
				EXPRESSION:index +4
						NAME:index 
								NAME:index
								IGNORED:
						OPERATOR:+
						VALUE:4
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:second +1
		VARIABLE:second 
				NAME:second
				IGNORED:
		OPERATOR:+
		VALUE:1


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> sphereVertexIndices [ index +5 ]  = first +1
NAME:sphereVertexIndices [ index +5 ]
		NAME:sphereVertexIndices
		COMPOSITE:[ index +5 ]
				KEYWORD:[
				EXPRESSION:index +5
						NAME:index 
								NAME:index
								IGNORED:
						OPERATOR:+
						VALUE:5
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:first +1
		VARIABLE:first 
				NAME:first
				IGNORED:
		OPERATOR:+
		VALUE:1


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> sphereVertexPositionBuffer [ 0 ]  = gl. createBuffer (  )
NAME:sphereVertexPositionBuffer [ 0 ]
		NAME:sphereVertexPositionBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, sphereVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, sphereVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, sphereVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:sphereVertexPositionBuffer [ 0 ]
						VARIABLE:sphereVertexPositionBuffer [ 0 ]
								NAME:sphereVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( vertices  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( vertices  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( vertices  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( vertices  )
						NEW_STATEMENT:new  Float32Array  ( vertices  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( vertices  )
										KEYWORD:(
										SEQUENCE:vertices 
												EXPRESSION:vertices 
														VARIABLE:vertices 
																NAME:vertices
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> sphereVertexPositionBuffer [ 1 ]  = 3
NAME:sphereVertexPositionBuffer [ 1 ]
		NAME:sphereVertexPositionBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:3
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> sphereVertexPositionBuffer [ 2 ]  = vertices.length /3
NAME:sphereVertexPositionBuffer [ 2 ]
		NAME:sphereVertexPositionBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:vertices.length /3
		VARIABLE:vertices.length 
				NAME:vertices.length
				IGNORED:
		OPERATOR:/
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> sphereVertexNormalBuffer [ 0 ]  = gl. createBuffer (  )
NAME:sphereVertexNormalBuffer [ 0 ]
		NAME:sphereVertexNormalBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, sphereVertexNormalBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, sphereVertexNormalBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, sphereVertexNormalBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:sphereVertexNormalBuffer [ 0 ]
						VARIABLE:sphereVertexNormalBuffer [ 0 ]
								NAME:sphereVertexNormalBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( normals  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( normals  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( normals  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( normals  )
						NEW_STATEMENT:new  Float32Array  ( normals  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( normals  )
										KEYWORD:(
										SEQUENCE:normals 
												EXPRESSION:normals 
														VARIABLE:normals 
																NAME:normals
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> sphereVertexNormalBuffer [ 1 ]  = 3
NAME:sphereVertexNormalBuffer [ 1 ]
		NAME:sphereVertexNormalBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:3
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> sphereVertexNormalBuffer [ 2 ]  = vertices.length /3
NAME:sphereVertexNormalBuffer [ 2 ]
		NAME:sphereVertexNormalBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:vertices.length /3
		VARIABLE:vertices.length 
				NAME:vertices.length
				IGNORED:
		OPERATOR:/
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> sphereVertexTextureCoordBuffer [ 0 ]  = gl. createBuffer (  )
NAME:sphereVertexTextureCoordBuffer [ 0 ]
		NAME:sphereVertexTextureCoordBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, sphereVertexTextureCoordBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, sphereVertexTextureCoordBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, sphereVertexTextureCoordBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:sphereVertexTextureCoordBuffer [ 0 ]
						VARIABLE:sphereVertexTextureCoordBuffer [ 0 ]
								NAME:sphereVertexTextureCoordBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( textureCoords  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( textureCoords  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( textureCoords  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( textureCoords  )
						NEW_STATEMENT:new  Float32Array  ( textureCoords  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( textureCoords  )
										KEYWORD:(
										SEQUENCE:textureCoords 
												EXPRESSION:textureCoords 
														VARIABLE:textureCoords 
																NAME:textureCoords
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> sphereVertexTextureCoordBuffer [ 1 ]  = 2
NAME:sphereVertexTextureCoordBuffer [ 1 ]
		NAME:sphereVertexTextureCoordBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:2
		VALUE:2


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> sphereVertexTextureCoordBuffer [ 2 ]  = textureCoords.length /2
NAME:sphereVertexTextureCoordBuffer [ 2 ]
		NAME:sphereVertexTextureCoordBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:textureCoords.length /2
		VARIABLE:textureCoords.length 
				NAME:textureCoords.length
				IGNORED:
		OPERATOR:/
		VALUE:2


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> sphereVertexIndexBuffer [ 0 ]  = gl. createBuffer (  )
NAME:sphereVertexIndexBuffer [ 0 ]
		NAME:sphereVertexIndexBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, sphereVertexIndexBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, sphereVertexIndexBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ELEMENT_ARRAY_BUFFER, sphereVertexIndexBuffer [ 0 ]
				EXPRESSION:gl. ELEMENT_ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ELEMENT_ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ELEMENT_ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:sphereVertexIndexBuffer [ 0 ]
						VARIABLE:sphereVertexIndexBuffer [ 0 ]
								NAME:sphereVertexIndexBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ELEMENT_ARRAY_BUFFER, new  Uint16Array  ( sphereVertexIndices  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ELEMENT_ARRAY_BUFFER, new  Uint16Array  ( sphereVertexIndices  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ELEMENT_ARRAY_BUFFER, new  Uint16Array  ( sphereVertexIndices  ), gl. STATIC_DRAW
				EXPRESSION:gl. ELEMENT_ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ELEMENT_ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ELEMENT_ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Uint16Array  ( sphereVertexIndices  )
						NEW_STATEMENT:new  Uint16Array  ( sphereVertexIndices  )
								KEYWORD:new 
								VARIABLE:Uint16Array 
										NAME:Uint16Array
										IGNORED:
								COMPOSITE:( sphereVertexIndices  )
										KEYWORD:(
										SEQUENCE:sphereVertexIndices 
												EXPRESSION:sphereVertexIndices 
														VARIABLE:sphereVertexIndices 
																NAME:sphereVertexIndices
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> sphereVertexIndexBuffer [ 1 ]  = 1
NAME:sphereVertexIndexBuffer [ 1 ]
		NAME:sphereVertexIndexBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:1
		VALUE:1


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> sphereVertexIndexBuffer [ 2 ]  = sphereVertexIndices.length 
NAME:sphereVertexIndexBuffer [ 2 ]
		NAME:sphereVertexIndexBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:sphereVertexIndices.length 
		VARIABLE:sphereVertexIndices.length 
				NAME:sphereVertexIndices.length
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> greenVertexPositionBuffer [ 0 ]  = gl. createBuffer (  )
NAME:greenVertexPositionBuffer [ 0 ]
		NAME:greenVertexPositionBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, greenVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, greenVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, greenVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:greenVertexPositionBuffer [ 0 ]
						VARIABLE:greenVertexPositionBuffer [ 0 ]
								NAME:greenVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var vertices2  = [ -1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0,-1.0,-1.0,1.0,1.0,-1.0 ]
VARIABLE:var vertices2 
		KEYWORD:var
		NAME:vertices2 
				NAME:vertices2
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ -1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0,-1.0,-1.0,1.0,1.0,-1.0 ]
		KEYWORD:[
		SEQUENCE:-1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0,-1.0,-1.0,1.0,1.0,-1.0
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( vertices2  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( vertices2  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( vertices2  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( vertices2  )
						NEW_STATEMENT:new  Float32Array  ( vertices2  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( vertices2  )
										KEYWORD:(
										SEQUENCE:vertices2 
												EXPRESSION:vertices2 
														VARIABLE:vertices2 
																NAME:vertices2
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> greenVertexPositionBuffer [ 1 ]  = 3
NAME:greenVertexPositionBuffer [ 1 ]
		NAME:greenVertexPositionBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:3
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> greenVertexPositionBuffer [ 2 ]  = 4
NAME:greenVertexPositionBuffer [ 2 ]
		NAME:greenVertexPositionBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:4
		VALUE:4


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> greenVertexTextureCoordBuffer [ 0 ]  = gl. createBuffer (  )
NAME:greenVertexTextureCoordBuffer [ 0 ]
		NAME:greenVertexTextureCoordBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, greenVertexTextureCoordBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, greenVertexTextureCoordBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, greenVertexTextureCoordBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:greenVertexTextureCoordBuffer [ 0 ]
						VARIABLE:greenVertexTextureCoordBuffer [ 0 ]
								NAME:greenVertexTextureCoordBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var textureCoords2  = [ 0.0,10.0,0.0,0.0,10.0,0.0,10.0,10.0 ]
VARIABLE:var textureCoords2 
		KEYWORD:var
		NAME:textureCoords2 
				NAME:textureCoords2
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ 0.0,10.0,0.0,0.0,10.0,0.0,10.0,10.0 ]
		KEYWORD:[
		SEQUENCE:0.0,10.0,0.0,0.0,10.0,0.0,10.0,10.0
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( textureCoords2  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( textureCoords2  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( textureCoords2  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( textureCoords2  )
						NEW_STATEMENT:new  Float32Array  ( textureCoords2  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( textureCoords2  )
										KEYWORD:(
										SEQUENCE:textureCoords2 
												EXPRESSION:textureCoords2 
														VARIABLE:textureCoords2 
																NAME:textureCoords2
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> greenVertexTextureCoordBuffer [ 1 ]  = 2
NAME:greenVertexTextureCoordBuffer [ 1 ]
		NAME:greenVertexTextureCoordBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:2
		VALUE:2


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> greenVertexTextureCoordBuffer [ 2 ]  = 4
NAME:greenVertexTextureCoordBuffer [ 2 ]
		NAME:greenVertexTextureCoordBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:4
		VALUE:4


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> greenVertexNormalBuffer [ 0 ]  = gl. createBuffer (  )
NAME:greenVertexNormalBuffer [ 0 ]
		NAME:greenVertexNormalBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, greenVertexNormalBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, greenVertexNormalBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, greenVertexNormalBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:greenVertexNormalBuffer [ 0 ]
						VARIABLE:greenVertexNormalBuffer [ 0 ]
								NAME:greenVertexNormalBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var normals2  = [ 0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0 ]
VARIABLE:var normals2 
		KEYWORD:var
		NAME:normals2 
				NAME:normals2
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ 0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0 ]
		KEYWORD:[
		SEQUENCE:0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( normals2  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( normals2  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( normals2  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( normals2  )
						NEW_STATEMENT:new  Float32Array  ( normals2  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( normals2  )
										KEYWORD:(
										SEQUENCE:normals2 
												EXPRESSION:normals2 
														VARIABLE:normals2 
																NAME:normals2
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> greenVertexNormalBuffer [ 1 ]  = 3
NAME:greenVertexNormalBuffer [ 1 ]
		NAME:greenVertexNormalBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:3
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> greenVertexNormalBuffer [ 2 ]  = 4
NAME:greenVertexNormalBuffer [ 2 ]
		NAME:greenVertexNormalBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:4
		VALUE:4


[METHOD_DECLARATION] -------> , initTexture : function ( gl  )
KEYWORD:,
NAME:initTexture
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[FOR, ASSIGNMENT, LINE_OF_CODE] -------> for ( var i  = 0 ; i  < 2 ; i  ++  )
KEYWORD:for
KEYWORD:(
COMPOSITE:var i  = 0
		VARIABLE:var i 
				KEYWORD:var
				NAME:i 
						NAME:i
						IGNORED:
		KEYWORD:=
		EXPRESSION:0
				VALUE:0
KEYWORD:;
VALUE:i 
		VALUE:i
		IGNORED:
KEYWORD:<
EXPRESSION:2
		VALUE:2
KEYWORD:;
SEQUENCE:i  ++ 
		COMPOSITE:i  ++ 
				VARIABLE:i 
						VARIABLE:i
						IGNORED:
				KEYWORD:++
				EXPRESSION:
						IGNORED:
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> textures [ i  ]  = gl. createTexture (  )
NAME:textures [ i  ]
		NAME:textures
		COMPOSITE:[ i  ]
				KEYWORD:[
				EXPRESSION:i 
						NAME:i 
								NAME:i
								IGNORED:
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createTexture (  )
		OPENGL_CALL:gl. createTexture (  )
				KEYWORD:gl.
				NAME:createTexture
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var tex1  = new  Image  (  )
VARIABLE:var tex1 
		KEYWORD:var
		NAME:tex1 
				NAME:tex1
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Image  (  )
		KEYWORD:new 
		TYPE:Image 
				TYPE:Image
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tex1.onload   =  function  (  )
NAME:tex1.onload 
		NAME:tex1.onload
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION: function  (  )
		CALL: function  (  )
				IGNORED:
				SEQUENCE:function  (  )
						COMPOSITE:function  (  )
								COMPOSITE:function 
										NAME:function
										IGNORED:
								KEYWORD:(
								SEQUENCE:
								KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindTexture ( gl. TEXTURE_2D, textures [ 0 ] )
OPENGL_CALL:gl. bindTexture ( gl. TEXTURE_2D, textures [ 0 ] )
		KEYWORD:gl.
		NAME:bindTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, textures [ 0 ]
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:textures [ 0 ]
						VARIABLE:textures [ 0 ]
								NAME:textures
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texImage2D ( gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex1  )
OPENGL_CALL:gl. texImage2D ( gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex1  )
		KEYWORD:gl.
		NAME:texImage2D
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex1 
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:gl. RGB
						OPENGL_CONSTANT:gl. RGB
								KEYWORD:gl.
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:gl. RGB
						OPENGL_CONSTANT:gl. RGB
								KEYWORD:gl.
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:gl. UNSIGNED_BYTE
						OPENGL_CONSTANT:gl. UNSIGNED_BYTE
								KEYWORD:gl.
								NAME:UNSIGNED_BYTE
				KEYWORD:, 
				EXPRESSION:tex1 
						VARIABLE:tex1 
								NAME:tex1
								IGNORED:
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_MAG_FILTER
						OPENGL_CONSTANT:gl. TEXTURE_MAG_FILTER
								KEYWORD:gl.
								NAME:TEXTURE_MAG_FILTER
				KEYWORD:, 
				EXPRESSION:gl. LINEAR
						OPENGL_CONSTANT:gl. LINEAR
								KEYWORD:gl.
								NAME:LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_MIN_FILTER
						OPENGL_CONSTANT:gl. TEXTURE_MIN_FILTER
								KEYWORD:gl.
								NAME:TEXTURE_MIN_FILTER
				KEYWORD:, 
				EXPRESSION:gl. LINEAR_MIPMAP_LINEAR
						OPENGL_CONSTANT:gl. LINEAR_MIPMAP_LINEAR
								KEYWORD:gl.
								NAME:LINEAR_MIPMAP_LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_S, gl. REPEAT )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_S, gl. REPEAT )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_WRAP_S, gl. REPEAT
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_WRAP_S
						OPENGL_CONSTANT:gl. TEXTURE_WRAP_S
								KEYWORD:gl.
								NAME:TEXTURE_WRAP_S
				KEYWORD:, 
				EXPRESSION:gl. REPEAT
						OPENGL_CONSTANT:gl. REPEAT
								KEYWORD:gl.
								NAME:REPEAT
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_T, gl. REPEAT )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_T, gl. REPEAT )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_WRAP_T, gl. REPEAT
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_WRAP_T
						OPENGL_CONSTANT:gl. TEXTURE_WRAP_T
								KEYWORD:gl.
								NAME:TEXTURE_WRAP_T
				KEYWORD:, 
				EXPRESSION:gl. REPEAT
						OPENGL_CONSTANT:gl. REPEAT
								KEYWORD:gl.
								NAME:REPEAT
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. generateMipmap ( gl. TEXTURE_2D )
OPENGL_CALL:gl. generateMipmap ( gl. TEXTURE_2D )
		KEYWORD:gl.
		NAME:generateMipmap
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tex1.src   = "images /bubble.gif" 
NAME:tex1.src 
		NAME:tex1.src
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:"images /bubble.gif" 
		VARIABLE:"images 
				NAME:"images
				IGNORED:
		OPERATOR:/
		VARIABLE:bubble.gif" 
				NAME:bubble.gif"
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var tex2  = new  Image  (  )
VARIABLE:var tex2 
		KEYWORD:var
		NAME:tex2 
				NAME:tex2
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Image  (  )
		KEYWORD:new 
		TYPE:Image 
				TYPE:Image
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tex2.onload   =  function  (  )
NAME:tex2.onload 
		NAME:tex2.onload
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION: function  (  )
		CALL: function  (  )
				IGNORED:
				SEQUENCE:function  (  )
						COMPOSITE:function  (  )
								COMPOSITE:function 
										NAME:function
										IGNORED:
								KEYWORD:(
								SEQUENCE:
								KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindTexture ( gl. TEXTURE_2D, textures [ 1 ] )
OPENGL_CALL:gl. bindTexture ( gl. TEXTURE_2D, textures [ 1 ] )
		KEYWORD:gl.
		NAME:bindTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, textures [ 1 ]
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:textures [ 1 ]
						VARIABLE:textures [ 1 ]
								NAME:textures
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texImage2D ( gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex2  )
OPENGL_CALL:gl. texImage2D ( gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex2  )
		KEYWORD:gl.
		NAME:texImage2D
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex2 
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:gl. RGB
						OPENGL_CONSTANT:gl. RGB
								KEYWORD:gl.
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:gl. RGB
						OPENGL_CONSTANT:gl. RGB
								KEYWORD:gl.
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:gl. UNSIGNED_BYTE
						OPENGL_CONSTANT:gl. UNSIGNED_BYTE
								KEYWORD:gl.
								NAME:UNSIGNED_BYTE
				KEYWORD:, 
				EXPRESSION:tex2 
						VARIABLE:tex2 
								NAME:tex2
								IGNORED:
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_MAG_FILTER
						OPENGL_CONSTANT:gl. TEXTURE_MAG_FILTER
								KEYWORD:gl.
								NAME:TEXTURE_MAG_FILTER
				KEYWORD:, 
				EXPRESSION:gl. LINEAR
						OPENGL_CONSTANT:gl. LINEAR
								KEYWORD:gl.
								NAME:LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_MIN_FILTER
						OPENGL_CONSTANT:gl. TEXTURE_MIN_FILTER
								KEYWORD:gl.
								NAME:TEXTURE_MIN_FILTER
				KEYWORD:, 
				EXPRESSION:gl. LINEAR_MIPMAP_LINEAR
						OPENGL_CONSTANT:gl. LINEAR_MIPMAP_LINEAR
								KEYWORD:gl.
								NAME:LINEAR_MIPMAP_LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_S, gl. REPEAT )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_S, gl. REPEAT )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_WRAP_S, gl. REPEAT
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_WRAP_S
						OPENGL_CONSTANT:gl. TEXTURE_WRAP_S
								KEYWORD:gl.
								NAME:TEXTURE_WRAP_S
				KEYWORD:, 
				EXPRESSION:gl. REPEAT
						OPENGL_CONSTANT:gl. REPEAT
								KEYWORD:gl.
								NAME:REPEAT
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_T, gl. REPEAT )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_T, gl. REPEAT )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_WRAP_T, gl. REPEAT
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_WRAP_T
						OPENGL_CONSTANT:gl. TEXTURE_WRAP_T
								KEYWORD:gl.
								NAME:TEXTURE_WRAP_T
				KEYWORD:, 
				EXPRESSION:gl. REPEAT
						OPENGL_CONSTANT:gl. REPEAT
								KEYWORD:gl.
								NAME:REPEAT
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. generateMipmap ( gl. TEXTURE_2D )
OPENGL_CALL:gl. generateMipmap ( gl. TEXTURE_2D )
		KEYWORD:gl.
		NAME:generateMipmap
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindTexture ( gl. TEXTURE_2D, null  )
OPENGL_CALL:gl. bindTexture ( gl. TEXTURE_2D, null  )
		KEYWORD:gl.
		NAME:bindTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, null 
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:null 
						VARIABLE:null 
								NAME:null
								IGNORED:
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tex2.src   = "images /grass.gif" 
NAME:tex2.src 
		NAME:tex2.src
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:"images /grass.gif" 
		VARIABLE:"images 
				NAME:"images
				IGNORED:
		OPERATOR:/
		VARIABLE:grass.gif" 
				NAME:grass.gif"
				IGNORED:


[METHOD_DECLARATION] -------> , drawScene : function ( gl  )
KEYWORD:,
NAME:drawScene
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. clearColor ( 0.0, 0.0, 0.0, 1.0 )
OPENGL_CALL:gl. clearColor ( 0.0, 0.0, 0.0, 1.0 )
		KEYWORD:gl.
		NAME:clearColor
		KEYWORD:(
		SEQUENCE:0.0, 0.0, 0.0, 1.0
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:, 
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:, 
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:, 
				EXPRESSION:1.0
						VALUE:1.0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. blendFunc ( gl. SRC_ALPHA, gl. ONE )
OPENGL_CALL:gl. blendFunc ( gl. SRC_ALPHA, gl. ONE )
		KEYWORD:gl.
		NAME:blendFunc
		KEYWORD:(
		SEQUENCE:gl. SRC_ALPHA, gl. ONE
				EXPRESSION:gl. SRC_ALPHA
						OPENGL_CONSTANT:gl. SRC_ALPHA
								KEYWORD:gl.
								NAME:SRC_ALPHA
				KEYWORD:, 
				EXPRESSION:gl. ONE
						OPENGL_CONSTANT:gl. ONE
								KEYWORD:gl.
								NAME:ONE
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enable ( gl. BLEND )
OPENGL_CALL:gl. enable ( gl. BLEND )
		KEYWORD:gl.
		NAME:enable
		KEYWORD:(
		SEQUENCE:gl. BLEND
				EXPRESSION:gl. BLEND
						OPENGL_CONSTANT:gl. BLEND
								KEYWORD:gl.
								NAME:BLEND
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.handleKeys  (  )
CALL: this.handleKeys  (  )
		IGNORED:
		SEQUENCE:this.handleKeys  (  )
				COMPOSITE:this.handleKeys  (  )
						COMPOSITE:this.handleKeys 
								NAME:this.handleKeys
								IGNORED:
						KEYWORD:(
						SEQUENCE:
						KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. viewport ( 0, 0, 500, 500 )
OPENGL_CALL:gl. viewport ( 0, 0, 500, 500 )
		KEYWORD:gl.
		NAME:viewport
		KEYWORD:(
		SEQUENCE:0, 0, 500, 500
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:500
						VALUE:500
				KEYWORD:, 
				EXPRESSION:500
						VALUE:500
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. clear ( gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT )
OPENGL_CALL:gl. clear ( gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT )
		KEYWORD:gl.
		NAME:clear
		KEYWORD:(
		SEQUENCE:gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT
				EXPRESSION:gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT
						OPENGL_CONSTANT:gl. COLOR_BUFFER_BIT
								KEYWORD:gl.
								NAME:COLOR_BUFFER_BIT
						OPERATOR:|
						OPENGL_CONSTANT:gl. DEPTH_BUFFER_BIT
								KEYWORD:gl.
								NAME:DEPTH_BUFFER_BIT
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pMatrix   = new  Float32Array  ( [ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ] )
NAME:pMatrix 
		NAME:pMatrix
		IGNORED:
IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Float32Array  ( [ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ] )
		KEYWORD:new 
		TYPE:Float32Array 
				TYPE:Float32Array
				IGNORED:
		COMPOSITE:( [ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ] )
				KEYWORD:(
				SEQUENCE:[ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ]
						ARRAY_CONTENT:[ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ]
								KEYWORD:[
								SEQUENCE:2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0
										EXPRESSION:2.4142136573791504
												VALUE:2.4142136573791504
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:2.4142136573791504
												VALUE:2.4142136573791504
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:-1.0020020008087158
												VALUE:-1.0020020008087158
										KEYWORD:,
										EXPRESSION:-1
												VALUE:-1
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:-0.20020020008087158
												VALUE:-0.20020020008087158
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
								KEYWORD:]
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix   = new  Float32Array  ( [ 10,0,0,0,0,10,0,0,0,0,10,0,0,0,zoom ,1 ] )
NAME:mvMatrix 
		NAME:mvMatrix
		IGNORED:
IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Float32Array  ( [ 10,0,0,0,0,10,0,0,0,0,10,0,0,0,zoom ,1 ] )
		KEYWORD:new 
		TYPE:Float32Array 
				TYPE:Float32Array
				IGNORED:
		COMPOSITE:( [ 10,0,0,0,0,10,0,0,0,0,10,0,0,0,zoom ,1 ] )
				KEYWORD:(
				SEQUENCE:[ 10,0,0,0,0,10,0,0,0,0,10,0,0,0,zoom ,1 ]
						ARRAY_CONTENT:[ 10,0,0,0,0,10,0,0,0,0,10,0,0,0,zoom ,1 ]
								KEYWORD:[
								SEQUENCE:10,0,0,0,0,10,0,0,0,0,10,0,0,0,zoom ,1
										EXPRESSION:10
												VALUE:10
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:10
												VALUE:10
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:10
												VALUE:10
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:zoom 
												VARIABLE:zoom 
														NAME:zoom
														IGNORED:
										KEYWORD:,
										EXPRESSION:1
												VALUE:1
								KEYWORD:]
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> normalMatrix   = new  Float32Array  ( 9 )
NAME:normalMatrix 
		NAME:normalMatrix
		IGNORED:
IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Float32Array  ( 9 )
		KEYWORD:new 
		TYPE:Float32Array 
				TYPE:Float32Array
				IGNORED:
		COMPOSITE:( 9 )
				KEYWORD:(
				SEQUENCE:9
						EXPRESSION:9
								VALUE:9
				KEYWORD:)


[FOR, ASSIGNMENT, LINE_OF_CODE] -------> for ( var i  = 0 ; i  < 3 ; i  ++  )
KEYWORD:for
KEYWORD:(
COMPOSITE:var i  = 0
		VARIABLE:var i 
				KEYWORD:var
				NAME:i 
						NAME:i
						IGNORED:
		KEYWORD:=
		EXPRESSION:0
				VALUE:0
KEYWORD:;
VALUE:i 
		VALUE:i
		IGNORED:
KEYWORD:<
EXPRESSION:3
		VALUE:3
KEYWORD:;
SEQUENCE:i  ++ 
		COMPOSITE:i  ++ 
				VARIABLE:i 
						VARIABLE:i
						IGNORED:
				KEYWORD:++
				EXPRESSION:
						IGNORED:
KEYWORD:)


[FOR, ASSIGNMENT, LINE_OF_CODE] -------> for ( var j  = 0 ; j  < 3 ; j  ++  )
KEYWORD:for
KEYWORD:(
COMPOSITE:var j  = 0
		VARIABLE:var j 
				KEYWORD:var
				NAME:j 
						NAME:j
						IGNORED:
		KEYWORD:=
		EXPRESSION:0
				VALUE:0
KEYWORD:;
VALUE:j 
		VALUE:j
		IGNORED:
KEYWORD:<
EXPRESSION:3
		VALUE:3
KEYWORD:;
SEQUENCE:j  ++ 
		COMPOSITE:j  ++ 
				VARIABLE:j 
						VARIABLE:j
						IGNORED:
				KEYWORD:++
				EXPRESSION:
						IGNORED:
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> normalMatrix [ i +3*j  ]  = mvMatrix [ i +4*j  ]
NAME:normalMatrix [ i +3*j  ]
		NAME:normalMatrix
		COMPOSITE:[ i +3*j  ]
				KEYWORD:[
				EXPRESSION:i +3*j 
						NAME:i 
								NAME:i
								IGNORED:
						OPERATOR:+
						VALUE:3
						OPERATOR:*
						NAME:j 
								NAME:j
								IGNORED:
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:mvMatrix [ i +4*j  ]
		VARIABLE:mvMatrix [ i +4*j  ]
				NAME:mvMatrix
				COMPOSITE:[ i +4*j  ]
						KEYWORD:[
						EXPRESSION:i +4*j 
								VARIABLE:i 
										NAME:i
										IGNORED:
								OPERATOR:+
								VALUE:4
								OPERATOR:*
								VARIABLE:j 
										NAME:j
										IGNORED:
						KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, greenVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, greenVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, greenVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:greenVertexPositionBuffer [ 0 ]
						VARIABLE:greenVertexPositionBuffer [ 0 ]
								NAME:greenVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( vertexPositionAttribute , greenVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( vertexPositionAttribute , greenVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:vertexPositionAttribute , greenVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:vertexPositionAttribute 
						VARIABLE:vertexPositionAttribute 
								NAME:vertexPositionAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:greenVertexPositionBuffer [ 1 ]
						VARIABLE:greenVertexPositionBuffer [ 1 ]
								NAME:greenVertexPositionBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, greenVertexNormalBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, greenVertexNormalBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, greenVertexNormalBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:greenVertexNormalBuffer [ 0 ]
						VARIABLE:greenVertexNormalBuffer [ 0 ]
								NAME:greenVertexNormalBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( vertexNormalAttribute , greenVertexNormalBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( vertexNormalAttribute , greenVertexNormalBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:vertexNormalAttribute , greenVertexNormalBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:vertexNormalAttribute 
						VARIABLE:vertexNormalAttribute 
								NAME:vertexNormalAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:greenVertexNormalBuffer [ 1 ]
						VARIABLE:greenVertexNormalBuffer [ 1 ]
								NAME:greenVertexNormalBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, greenVertexTextureCoordBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, greenVertexTextureCoordBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, greenVertexTextureCoordBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:greenVertexTextureCoordBuffer [ 0 ]
						VARIABLE:greenVertexTextureCoordBuffer [ 0 ]
								NAME:greenVertexTextureCoordBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( textureCoordAttribute , greenVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( textureCoordAttribute , greenVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:textureCoordAttribute , greenVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:textureCoordAttribute 
						VARIABLE:textureCoordAttribute 
								NAME:textureCoordAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:greenVertexTextureCoordBuffer [ 1 ]
						VARIABLE:greenVertexTextureCoordBuffer [ 1 ]
								NAME:greenVertexTextureCoordBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. activeTexture ( gl. TEXTURE0 )
OPENGL_CALL:gl. activeTexture ( gl. TEXTURE0 )
		KEYWORD:gl.
		NAME:activeTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE0
				EXPRESSION:gl. TEXTURE0
						OPENGL_CONSTANT:gl. TEXTURE0
								KEYWORD:gl.
								NAME:TEXTURE0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindTexture ( gl. TEXTURE_2D, textures [ 1 ] )
OPENGL_CALL:gl. bindTexture ( gl. TEXTURE_2D, textures [ 1 ] )
		KEYWORD:gl.
		NAME:bindTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, textures [ 1 ]
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:textures [ 1 ]
						VARIABLE:textures [ 1 ]
								NAME:textures
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniform1i ( samplerUniform , 0 )
OPENGL_CALL:gl. uniform1i ( samplerUniform , 0 )
		KEYWORD:gl.
		NAME:uniform1i
		KEYWORD:(
		SEQUENCE:samplerUniform , 0
				EXPRESSION:samplerUniform 
						VARIABLE:samplerUniform 
								NAME:samplerUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.setMatrixUniforms  ( gl  )
CALL: this.setMatrixUniforms  ( gl  )
		IGNORED:
		SEQUENCE:this.setMatrixUniforms  ( gl  )
				COMPOSITE:this.setMatrixUniforms  ( gl  )
						COMPOSITE:this.setMatrixUniforms 
								NAME:this.setMatrixUniforms
								IGNORED:
						KEYWORD:(
						SEQUENCE:gl 
								EXPRESSION:gl 
										VARIABLE:gl 
												NAME:gl
												IGNORED:
						KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniform1f ( alphaUniform , 1 )
OPENGL_CALL:gl. uniform1f ( alphaUniform , 1 )
		KEYWORD:gl.
		NAME:uniform1f
		KEYWORD:(
		SEQUENCE:alphaUniform , 1
				EXPRESSION:alphaUniform 
						VARIABLE:alphaUniform 
								NAME:alphaUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:1
						VALUE:1
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. drawArrays ( gl. TRIANGLE_STRIP, 0, greenVertexPositionBuffer [ 2 ] )
OPENGL_CALL:gl. drawArrays ( gl. TRIANGLE_STRIP, 0, greenVertexPositionBuffer [ 2 ] )
		KEYWORD:gl.
		NAME:drawArrays
		KEYWORD:(
		SEQUENCE:gl. TRIANGLE_STRIP, 0, greenVertexPositionBuffer [ 2 ]
				EXPRESSION:gl. TRIANGLE_STRIP
						OPENGL_CONSTANT:gl. TRIANGLE_STRIP
								KEYWORD:gl.
								NAME:TRIANGLE_STRIP
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:greenVertexPositionBuffer [ 2 ]
						VARIABLE:greenVertexPositionBuffer [ 2 ]
								NAME:greenVertexPositionBuffer
								COMPOSITE:[ 2 ]
										KEYWORD:[
										EXPRESSION:2
												VALUE:2
										KEYWORD:]
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix   = new  Float32Array  ( [ 1,0,0,0,0,1,0,0,0,0,1,0,0,0,zoom ,1 ] )
NAME:mvMatrix 
		NAME:mvMatrix
		IGNORED:
IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Float32Array  ( [ 1,0,0,0,0,1,0,0,0,0,1,0,0,0,zoom ,1 ] )
		KEYWORD:new 
		TYPE:Float32Array 
				TYPE:Float32Array
				IGNORED:
		COMPOSITE:( [ 1,0,0,0,0,1,0,0,0,0,1,0,0,0,zoom ,1 ] )
				KEYWORD:(
				SEQUENCE:[ 1,0,0,0,0,1,0,0,0,0,1,0,0,0,zoom ,1 ]
						ARRAY_CONTENT:[ 1,0,0,0,0,1,0,0,0,0,1,0,0,0,zoom ,1 ]
								KEYWORD:[
								SEQUENCE:1,0,0,0,0,1,0,0,0,0,1,0,0,0,zoom ,1
										EXPRESSION:1
												VALUE:1
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:1
												VALUE:1
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:1
												VALUE:1
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:zoom 
												VARIABLE:zoom 
														NAME:zoom
														IGNORED:
										KEYWORD:,
										EXPRESSION:1
												VALUE:1
								KEYWORD:]
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix   =  multiplyMatrix  ( rotationMatrix , mvMatrix  )
NAME:mvMatrix 
		NAME:mvMatrix
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION: multiplyMatrix  ( rotationMatrix , mvMatrix  )
		CALL: multiplyMatrix  ( rotationMatrix , mvMatrix  )
				IGNORED:
				SEQUENCE:multiplyMatrix  ( rotationMatrix , mvMatrix  )
						COMPOSITE:multiplyMatrix  ( rotationMatrix , mvMatrix  )
								COMPOSITE:multiplyMatrix 
										NAME:multiplyMatrix
										IGNORED:
								KEYWORD:(
								SEQUENCE:rotationMatrix , mvMatrix 
										EXPRESSION:rotationMatrix 
												VARIABLE:rotationMatrix 
														NAME:rotationMatrix
														IGNORED:
										KEYWORD:, 
										EXPRESSION:mvMatrix 
												VARIABLE:mvMatrix 
														NAME:mvMatrix
														IGNORED:
								KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> normalMatrix   = new  Float32Array  ( 9 )
NAME:normalMatrix 
		NAME:normalMatrix
		IGNORED:
IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Float32Array  ( 9 )
		KEYWORD:new 
		TYPE:Float32Array 
				TYPE:Float32Array
				IGNORED:
		COMPOSITE:( 9 )
				KEYWORD:(
				SEQUENCE:9
						EXPRESSION:9
								VALUE:9
				KEYWORD:)


[FOR, ASSIGNMENT, LINE_OF_CODE] -------> for ( var i  = 0 ; i  < 3 ; i  ++  )
KEYWORD:for
KEYWORD:(
COMPOSITE:var i  = 0
		VARIABLE:var i 
				KEYWORD:var
				NAME:i 
						NAME:i
						IGNORED:
		KEYWORD:=
		EXPRESSION:0
				VALUE:0
KEYWORD:;
VALUE:i 
		VALUE:i
		IGNORED:
KEYWORD:<
EXPRESSION:3
		VALUE:3
KEYWORD:;
SEQUENCE:i  ++ 
		COMPOSITE:i  ++ 
				VARIABLE:i 
						VARIABLE:i
						IGNORED:
				KEYWORD:++
				EXPRESSION:
						IGNORED:
KEYWORD:)


[FOR, ASSIGNMENT, LINE_OF_CODE] -------> for ( var j  = 0 ; j  < 3 ; j  ++  )
KEYWORD:for
KEYWORD:(
COMPOSITE:var j  = 0
		VARIABLE:var j 
				KEYWORD:var
				NAME:j 
						NAME:j
						IGNORED:
		KEYWORD:=
		EXPRESSION:0
				VALUE:0
KEYWORD:;
VALUE:j 
		VALUE:j
		IGNORED:
KEYWORD:<
EXPRESSION:3
		VALUE:3
KEYWORD:;
SEQUENCE:j  ++ 
		COMPOSITE:j  ++ 
				VARIABLE:j 
						VARIABLE:j
						IGNORED:
				KEYWORD:++
				EXPRESSION:
						IGNORED:
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> normalMatrix [ i +3*j  ]  = mvMatrix [ i +4*j  ]
NAME:normalMatrix [ i +3*j  ]
		NAME:normalMatrix
		COMPOSITE:[ i +3*j  ]
				KEYWORD:[
				EXPRESSION:i +3*j 
						NAME:i 
								NAME:i
								IGNORED:
						OPERATOR:+
						VALUE:3
						OPERATOR:*
						NAME:j 
								NAME:j
								IGNORED:
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:mvMatrix [ i +4*j  ]
		VARIABLE:mvMatrix [ i +4*j  ]
				NAME:mvMatrix
				COMPOSITE:[ i +4*j  ]
						KEYWORD:[
						EXPRESSION:i +4*j 
								VARIABLE:i 
										NAME:i
										IGNORED:
								OPERATOR:+
								VALUE:4
								OPERATOR:*
								VARIABLE:j 
										NAME:j
										IGNORED:
						KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, sphereVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, sphereVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, sphereVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:sphereVertexPositionBuffer [ 0 ]
						VARIABLE:sphereVertexPositionBuffer [ 0 ]
								NAME:sphereVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( vertexPositionAttribute , sphereVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( vertexPositionAttribute , sphereVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:vertexPositionAttribute , sphereVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:vertexPositionAttribute 
						VARIABLE:vertexPositionAttribute 
								NAME:vertexPositionAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:sphereVertexPositionBuffer [ 1 ]
						VARIABLE:sphereVertexPositionBuffer [ 1 ]
								NAME:sphereVertexPositionBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, sphereVertexNormalBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, sphereVertexNormalBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, sphereVertexNormalBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:sphereVertexNormalBuffer [ 0 ]
						VARIABLE:sphereVertexNormalBuffer [ 0 ]
								NAME:sphereVertexNormalBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( vertexNormalAttribute , sphereVertexNormalBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( vertexNormalAttribute , sphereVertexNormalBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:vertexNormalAttribute , sphereVertexNormalBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:vertexNormalAttribute 
						VARIABLE:vertexNormalAttribute 
								NAME:vertexNormalAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:sphereVertexNormalBuffer [ 1 ]
						VARIABLE:sphereVertexNormalBuffer [ 1 ]
								NAME:sphereVertexNormalBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, sphereVertexTextureCoordBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, sphereVertexTextureCoordBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, sphereVertexTextureCoordBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:sphereVertexTextureCoordBuffer [ 0 ]
						VARIABLE:sphereVertexTextureCoordBuffer [ 0 ]
								NAME:sphereVertexTextureCoordBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( textureCoordAttribute , sphereVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( textureCoordAttribute , sphereVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:textureCoordAttribute , sphereVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:textureCoordAttribute 
						VARIABLE:textureCoordAttribute 
								NAME:textureCoordAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:sphereVertexTextureCoordBuffer [ 1 ]
						VARIABLE:sphereVertexTextureCoordBuffer [ 1 ]
								NAME:sphereVertexTextureCoordBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. activeTexture ( gl. TEXTURE0 )
OPENGL_CALL:gl. activeTexture ( gl. TEXTURE0 )
		KEYWORD:gl.
		NAME:activeTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE0
				EXPRESSION:gl. TEXTURE0
						OPENGL_CONSTANT:gl. TEXTURE0
								KEYWORD:gl.
								NAME:TEXTURE0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindTexture ( gl. TEXTURE_2D, textures [ 0 ] )
OPENGL_CALL:gl. bindTexture ( gl. TEXTURE_2D, textures [ 0 ] )
		KEYWORD:gl.
		NAME:bindTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, textures [ 0 ]
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:textures [ 0 ]
						VARIABLE:textures [ 0 ]
								NAME:textures
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniform1i ( samplerUniform , 0 )
OPENGL_CALL:gl. uniform1i ( samplerUniform , 0 )
		KEYWORD:gl.
		NAME:uniform1i
		KEYWORD:(
		SEQUENCE:samplerUniform , 0
				EXPRESSION:samplerUniform 
						VARIABLE:samplerUniform 
								NAME:samplerUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, sphereVertexIndexBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, sphereVertexIndexBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ELEMENT_ARRAY_BUFFER, sphereVertexIndexBuffer [ 0 ]
				EXPRESSION:gl. ELEMENT_ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ELEMENT_ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ELEMENT_ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:sphereVertexIndexBuffer [ 0 ]
						VARIABLE:sphereVertexIndexBuffer [ 0 ]
								NAME:sphereVertexIndexBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.setMatrixUniforms  ( gl  )
CALL: this.setMatrixUniforms  ( gl  )
		IGNORED:
		SEQUENCE:this.setMatrixUniforms  ( gl  )
				COMPOSITE:this.setMatrixUniforms  ( gl  )
						COMPOSITE:this.setMatrixUniforms 
								NAME:this.setMatrixUniforms
								IGNORED:
						KEYWORD:(
						SEQUENCE:gl 
								EXPRESSION:gl 
										VARIABLE:gl 
												NAME:gl
												IGNORED:
						KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniform1f ( alphaUniform , 0.8 )
OPENGL_CALL:gl. uniform1f ( alphaUniform , 0.8 )
		KEYWORD:gl.
		NAME:uniform1f
		KEYWORD:(
		SEQUENCE:alphaUniform , 0.8
				EXPRESSION:alphaUniform 
						VARIABLE:alphaUniform 
								NAME:alphaUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0.8
						VALUE:0.8
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. drawElements ( gl. TRIANGLES, sphereVertexIndexBuffer [ 2 ], gl. UNSIGNED_SHORT, 0 )
OPENGL_CALL:gl. drawElements ( gl. TRIANGLES, sphereVertexIndexBuffer [ 2 ], gl. UNSIGNED_SHORT, 0 )
		KEYWORD:gl.
		NAME:drawElements
		KEYWORD:(
		SEQUENCE:gl. TRIANGLES, sphereVertexIndexBuffer [ 2 ], gl. UNSIGNED_SHORT, 0
				EXPRESSION:gl. TRIANGLES
						OPENGL_CONSTANT:gl. TRIANGLES
								KEYWORD:gl.
								NAME:TRIANGLES
				KEYWORD:, 
				EXPRESSION:sphereVertexIndexBuffer [ 2 ]
						VARIABLE:sphereVertexIndexBuffer [ 2 ]
								NAME:sphereVertexIndexBuffer
								COMPOSITE:[ 2 ]
										KEYWORD:[
										EXPRESSION:2
												VALUE:2
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. UNSIGNED_SHORT
						OPENGL_CONSTANT:gl. UNSIGNED_SHORT
								KEYWORD:gl.
								NAME:UNSIGNED_SHORT
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[METHOD_DECLARATION] -------> , handleKeys : function (  )
KEYWORD:,
NAME:handleKeys
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var timeNow  = new  Date  (  ) . getTime  (  )
VARIABLE:var timeNow 
		KEYWORD:var
		NAME:timeNow 
				NAME:timeNow
				IGNORED:
KEYWORD:=
CALL:new  Date  (  ) . getTime  (  )
		COMPOSITE:new  Date  (  ) .
				NEW_STATEMENT:new  Date  (  )
						KEYWORD:new 
						TYPE:Date 
								TYPE:Date
								IGNORED:
						COMPOSITE:(  )
								KEYWORD:(
								SEQUENCE:
								KEYWORD:)
				KEYWORD:.
		SEQUENCE:getTime  (  )
				COMPOSITE:getTime  (  )
						COMPOSITE:getTime 
								NAME:getTime
								IGNORED:
						KEYWORD:(
						SEQUENCE:
						KEYWORD:)


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( lastTime2 !=0 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:lastTime2 !=0
		VARIABLE:lastTime2 
				NAME:lastTime2
				IGNORED:
		OPERATOR:!=
		VALUE:0
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var elapsed  = timeNow -lastTime2 
VARIABLE:var elapsed 
		KEYWORD:var
		NAME:elapsed 
				NAME:elapsed
				IGNORED:
KEYWORD:=
EXPRESSION:timeNow -lastTime2 
		VARIABLE:timeNow 
				NAME:timeNow
				IGNORED:
		OPERATOR:-
		VARIABLE:lastTime2 
				NAME:lastTime2
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands [ 0 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands [ 0 ]
		VARIABLE:commands [ 0 ]
				NAME:commands
				COMPOSITE:[ 0 ]
						KEYWORD:[
						EXPRESSION:0
								VALUE:0
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> zoom  + = 5*elapsed *0.001
NAME:zoom 
		NAME:zoom
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION:5*elapsed *0.001
		VALUE:5
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands [ 1 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands [ 1 ]
		VARIABLE:commands [ 1 ]
				NAME:commands
				COMPOSITE:[ 1 ]
						KEYWORD:[
						EXPRESSION:1
								VALUE:1
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> zoom  - = 5*elapsed *0.001
NAME:zoom 
		NAME:zoom
		IGNORED:
KEYWORD:-
KEYWORD:=
EXPRESSION:5*elapsed *0.001
		VALUE:5
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> lastTime2   = timeNow 
NAME:lastTime2 
		NAME:lastTime2
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:timeNow 
		VARIABLE:timeNow 
				NAME:timeNow
				IGNORED:


[METHOD_DECLARATION] -------> , setCommands : function ( e , value  )
KEYWORD:,
NAME:setCommands
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:e , value 
		VARIABLE:e 
				NAME:e
				IGNORED:
		KEYWORD:, 
		VARIABLE:value 
				NAME:value
				IGNORED:
KEYWORD:)


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==65 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==65
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:65
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 0 ]  = value 
NAME:commands [ 0 ]
		NAME:commands
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==90 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==90
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:90
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 1 ]  = value 
NAME:commands [ 1 ]
		NAME:commands
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[METHOD_DECLARATION] -------> , keyPressed : function ( e  )
KEYWORD:,
NAME:keyPressed
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:e 
		VARIABLE:e 
				NAME:e
				IGNORED:
KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.setCommands  ( e , true  )
CALL: this.setCommands  ( e , true  )
		IGNORED:
		SEQUENCE:this.setCommands  ( e , true  )
				COMPOSITE:this.setCommands  ( e , true  )
						COMPOSITE:this.setCommands 
								NAME:this.setCommands
								IGNORED:
						KEYWORD:(
						SEQUENCE:e , true 
								EXPRESSION:e 
										VARIABLE:e 
												NAME:e
												IGNORED:
								KEYWORD:, 
								EXPRESSION:true 
										VARIABLE:true 
												NAME:true
												IGNORED:
						KEYWORD:)


[METHOD_DECLARATION] -------> , keyReleased : function ( e  )
KEYWORD:,
NAME:keyReleased
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:e 
		VARIABLE:e 
				NAME:e
				IGNORED:
KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.setCommands  ( e , false  )
CALL: this.setCommands  ( e , false  )
		IGNORED:
		SEQUENCE:this.setCommands  ( e , false  )
				COMPOSITE:this.setCommands  ( e , false  )
						COMPOSITE:this.setCommands 
								NAME:this.setCommands
								IGNORED:
						KEYWORD:(
						SEQUENCE:e , false 
								EXPRESSION:e 
										VARIABLE:e 
												NAME:e
												IGNORED:
								KEYWORD:, 
								EXPRESSION:false 
										VARIABLE:false 
												NAME:false
												IGNORED:
						KEYWORD:)


[METHOD_DECLARATION] -------> , mousePressed : function ( e  )
KEYWORD:,
NAME:mousePressed
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:e 
		VARIABLE:e 
				NAME:e
				IGNORED:
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> lastMouseX   = e.clientX 
NAME:lastMouseX 
		NAME:lastMouseX
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:e.clientX 
		VARIABLE:e.clientX 
				NAME:e.clientX
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> lastMouseY   = e.clientY 
NAME:lastMouseY 
		NAME:lastMouseY
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:e.clientY 
		VARIABLE:e.clientY 
				NAME:e.clientY
				IGNORED:


[METHOD_DECLARATION] -------> , mouseDragged : function ( e  )
KEYWORD:,
NAME:mouseDragged
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:e 
		VARIABLE:e 
				NAME:e
				IGNORED:
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var deltaX  = e.clientX -lastMouseX 
VARIABLE:var deltaX 
		KEYWORD:var
		NAME:deltaX 
				NAME:deltaX
				IGNORED:
KEYWORD:=
EXPRESSION:e.clientX -lastMouseX 
		VARIABLE:e.clientX 
				NAME:e.clientX
				IGNORED:
		OPERATOR:-
		VARIABLE:lastMouseX 
				NAME:lastMouseX
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var deltaY  = e.clientY -lastMouseY 
VARIABLE:var deltaY 
		KEYWORD:var
		NAME:deltaY 
				NAME:deltaY
				IGNORED:
KEYWORD:=
EXPRESSION:e.clientY -lastMouseY 
		VARIABLE:e.clientY 
				NAME:e.clientY
				IGNORED:
		OPERATOR:-
		VARIABLE:lastMouseY 
				NAME:lastMouseY
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var rAnglex  = deltaY *0.01
VARIABLE:var rAnglex 
		KEYWORD:var
		NAME:rAnglex 
				NAME:rAnglex
				IGNORED:
KEYWORD:=
EXPRESSION:deltaY *0.01
		VARIABLE:deltaY 
				NAME:deltaY
				IGNORED:
		OPERATOR:*
		VALUE:0.01


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var rAngley  = deltaX *0.01
VARIABLE:var rAngley 
		KEYWORD:var
		NAME:rAngley 
				NAME:rAngley
				IGNORED:
KEYWORD:=
EXPRESSION:deltaX *0.01
		VARIABLE:deltaX 
				NAME:deltaX
				IGNORED:
		OPERATOR:*
		VALUE:0.01


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cx  =  Math.cos  ( rAnglex  )
VARIABLE:var cx 
		KEYWORD:var
		NAME:cx 
				NAME:cx
				IGNORED:
KEYWORD:=
CALL: Math.cos  ( rAnglex  )
		IGNORED:
		SEQUENCE:Math.cos  ( rAnglex  )
				COMPOSITE:Math.cos  ( rAnglex  )
						COMPOSITE:Math.cos 
								NAME:Math.cos
								IGNORED:
						KEYWORD:(
						SEQUENCE:rAnglex 
								EXPRESSION:rAnglex 
										VARIABLE:rAnglex 
												NAME:rAnglex
												IGNORED:
						KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var sx  =  Math.sin  ( rAnglex  )
VARIABLE:var sx 
		KEYWORD:var
		NAME:sx 
				NAME:sx
				IGNORED:
KEYWORD:=
CALL: Math.sin  ( rAnglex  )
		IGNORED:
		SEQUENCE:Math.sin  ( rAnglex  )
				COMPOSITE:Math.sin  ( rAnglex  )
						COMPOSITE:Math.sin 
								NAME:Math.sin
								IGNORED:
						KEYWORD:(
						SEQUENCE:rAnglex 
								EXPRESSION:rAnglex 
										VARIABLE:rAnglex 
												NAME:rAnglex
												IGNORED:
						KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cy  =  Math.cos  ( rAngley  )
VARIABLE:var cy 
		KEYWORD:var
		NAME:cy 
				NAME:cy
				IGNORED:
KEYWORD:=
CALL: Math.cos  ( rAngley  )
		IGNORED:
		SEQUENCE:Math.cos  ( rAngley  )
				COMPOSITE:Math.cos  ( rAngley  )
						COMPOSITE:Math.cos 
								NAME:Math.cos
								IGNORED:
						KEYWORD:(
						SEQUENCE:rAngley 
								EXPRESSION:rAngley 
										VARIABLE:rAngley 
												NAME:rAngley
												IGNORED:
						KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var sy  =  Math.sin  ( rAngley  )
VARIABLE:var sy 
		KEYWORD:var
		NAME:sy 
				NAME:sy
				IGNORED:
KEYWORD:=
CALL: Math.sin  ( rAngley  )
		IGNORED:
		SEQUENCE:Math.sin  ( rAngley  )
				COMPOSITE:Math.sin  ( rAngley  )
						COMPOSITE:Math.sin 
								NAME:Math.sin
								IGNORED:
						KEYWORD:(
						SEQUENCE:rAngley 
								EXPRESSION:rAngley 
										VARIABLE:rAngley 
												NAME:rAngley
												IGNORED:
						KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var newRotationMatrix  = new  Float32Array  ( [ cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,0,0,0,1 ] )
VARIABLE:var newRotationMatrix 
		KEYWORD:var
		NAME:newRotationMatrix 
				NAME:newRotationMatrix
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Float32Array  ( [ cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,0,0,0,1 ] )
		KEYWORD:new 
		TYPE:Float32Array 
				TYPE:Float32Array
				IGNORED:
		COMPOSITE:( [ cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,0,0,0,1 ] )
				KEYWORD:(
				SEQUENCE:[ cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,0,0,0,1 ]
						ARRAY_CONTENT:[ cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,0,0,0,1 ]
								KEYWORD:[
								SEQUENCE:cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,0,0,0,1
										EXPRESSION:cy 
												VARIABLE:cy 
														NAME:cy
														IGNORED:
										KEYWORD:,
										EXPRESSION:sx *sy 
												VARIABLE:sx 
														NAME:sx
														IGNORED:
												OPERATOR:*
												VARIABLE:sy 
														NAME:sy
														IGNORED:
										KEYWORD:,
										EXPRESSION:-cx*sy 
												VALUE:-cx
												OPERATOR:*
												VARIABLE:sy 
														NAME:sy
														IGNORED:
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:cx 
												VARIABLE:cx 
														NAME:cx
														IGNORED:
										KEYWORD:,
										EXPRESSION:sx 
												VARIABLE:sx 
														NAME:sx
														IGNORED:
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:sy 
												VARIABLE:sy 
														NAME:sy
														IGNORED:
										KEYWORD:,
										EXPRESSION:-cy*sx 
												VALUE:-cy
												OPERATOR:*
												VARIABLE:sx 
														NAME:sx
														IGNORED:
										KEYWORD:,
										EXPRESSION:cx *cy 
												VARIABLE:cx 
														NAME:cx
														IGNORED:
												OPERATOR:*
												VARIABLE:cy 
														NAME:cy
														IGNORED:
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:1
												VALUE:1
								KEYWORD:]
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> rotationMatrix   =  multiplyMatrix  ( rotationMatrix , newRotationMatrix  )
NAME:rotationMatrix 
		NAME:rotationMatrix
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION: multiplyMatrix  ( rotationMatrix , newRotationMatrix  )
		CALL: multiplyMatrix  ( rotationMatrix , newRotationMatrix  )
				IGNORED:
				SEQUENCE:multiplyMatrix  ( rotationMatrix , newRotationMatrix  )
						COMPOSITE:multiplyMatrix  ( rotationMatrix , newRotationMatrix  )
								COMPOSITE:multiplyMatrix 
										NAME:multiplyMatrix
										IGNORED:
								KEYWORD:(
								SEQUENCE:rotationMatrix , newRotationMatrix 
										EXPRESSION:rotationMatrix 
												VARIABLE:rotationMatrix 
														NAME:rotationMatrix
														IGNORED:
										KEYWORD:, 
										EXPRESSION:newRotationMatrix 
												VARIABLE:newRotationMatrix 
														NAME:newRotationMatrix
														IGNORED:
								KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> lastMouseX   = e.clientX 
NAME:lastMouseX 
		NAME:lastMouseX
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:e.clientX 
		VARIABLE:e.clientX 
				NAME:e.clientX
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> lastMouseY   = e.clientY 
NAME:lastMouseY 
		NAME:lastMouseY
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:e.clientY 
		VARIABLE:e.clientY 
				NAME:e.clientY
				IGNORED:



test_va1Drawer.js
[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var vertexPositionAttribute 
VARIABLE:var vertexPositionAttribute 
		KEYWORD:var
		NAME:vertexPositionAttribute 
				NAME:vertexPositionAttribute
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var textureCoordAttribute 
VARIABLE:var textureCoordAttribute 
		KEYWORD:var
		NAME:textureCoordAttribute 
				NAME:textureCoordAttribute
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var pMatrixUniform 
VARIABLE:var pMatrixUniform 
		KEYWORD:var
		NAME:pMatrixUniform 
				NAME:pMatrixUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var mvMatrixUniform 
VARIABLE:var mvMatrixUniform 
		KEYWORD:var
		NAME:mvMatrixUniform 
				NAME:mvMatrixUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var samplerUniform 
VARIABLE:var samplerUniform 
		KEYWORD:var
		NAME:samplerUniform 
				NAME:samplerUniform
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var doorVertexPositionBuffer  = new  Array  (  )
VARIABLE:var doorVertexPositionBuffer 
		KEYWORD:var
		NAME:doorVertexPositionBuffer 
				NAME:doorVertexPositionBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var doorVertexTextureCoordBuffer  = new  Array  (  )
VARIABLE:var doorVertexTextureCoordBuffer 
		KEYWORD:var
		NAME:doorVertexTextureCoordBuffer 
				NAME:doorVertexTextureCoordBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var greenVertexPositionBuffer  = new  Array  (  )
VARIABLE:var greenVertexPositionBuffer 
		KEYWORD:var
		NAME:greenVertexPositionBuffer 
				NAME:greenVertexPositionBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var greenVertexTextureCoordBuffer  = new  Array  (  )
VARIABLE:var greenVertexTextureCoordBuffer 
		KEYWORD:var
		NAME:greenVertexTextureCoordBuffer 
				NAME:greenVertexTextureCoordBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var pyramidVertexPositionBuffer  = new  Array  (  )
VARIABLE:var pyramidVertexPositionBuffer 
		KEYWORD:var
		NAME:pyramidVertexPositionBuffer 
				NAME:pyramidVertexPositionBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var pyramidVertexTextureCoordBuffer  = new  Array  (  )
VARIABLE:var pyramidVertexTextureCoordBuffer 
		KEYWORD:var
		NAME:pyramidVertexTextureCoordBuffer 
				NAME:pyramidVertexTextureCoordBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cubeVertexPositionBuffer  = new  Array  (  )
VARIABLE:var cubeVertexPositionBuffer 
		KEYWORD:var
		NAME:cubeVertexPositionBuffer 
				NAME:cubeVertexPositionBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cubeVertexIndexBuffer  = new  Array  (  )
VARIABLE:var cubeVertexIndexBuffer 
		KEYWORD:var
		NAME:cubeVertexIndexBuffer 
				NAME:cubeVertexIndexBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cubeVertexTextureCoordBuffer  = new  Array  (  )
VARIABLE:var cubeVertexTextureCoordBuffer 
		KEYWORD:var
		NAME:cubeVertexTextureCoordBuffer 
				NAME:cubeVertexTextureCoordBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var textures  = new  Array  (  )
VARIABLE:var textures 
		KEYWORD:var
		NAME:textures 
				NAME:textures
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var pMatrix 
VARIABLE:var pMatrix 
		KEYWORD:var
		NAME:pMatrix 
				NAME:pMatrix
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var mvMatrix 
VARIABLE:var mvMatrix 
		KEYWORD:var
		NAME:mvMatrix 
				NAME:mvMatrix
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var rAnglex  = 0
VARIABLE:var rAnglex 
		KEYWORD:var
		NAME:rAnglex 
				NAME:rAnglex
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var speedx  = 0
VARIABLE:var speedx 
		KEYWORD:var
		NAME:speedx 
				NAME:speedx
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var rAngley  = 0
VARIABLE:var rAngley 
		KEYWORD:var
		NAME:rAngley 
				NAME:rAngley
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var speedy  = 0
VARIABLE:var speedy 
		KEYWORD:var
		NAME:speedy 
				NAME:speedy
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var zoom  = -8
VARIABLE:var zoom 
		KEYWORD:var
		NAME:zoom 
				NAME:zoom
				IGNORED:
KEYWORD:=
EXPRESSION:-8
		VALUE:-8


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var lastTime  = 0
VARIABLE:var lastTime 
		KEYWORD:var
		NAME:lastTime 
				NAME:lastTime
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var lastTime2  = 0
VARIABLE:var lastTime2 
		KEYWORD:var
		NAME:lastTime2 
				NAME:lastTime2
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var commands  = new  Array  (  )
VARIABLE:var commands 
		KEYWORD:var
		NAME:commands 
				NAME:commands
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[CONSTRUCTOR_DECLARATION] -------> function Test_va1Drawer  (  )
KEYWORD:function
NAME:Test_va1Drawer 
		NAME:Test_va1Drawer
		IGNORED:
KEYWORD:(
METHOD_VARIABLES:
KEYWORD:)


[CLASS_DECLARATION] -------> Test_va1Drawer . prototype =
NAME:Test_va1Drawer
KEYWORD:.
KEYWORD:prototype
KEYWORD:=


[METHOD_DECLARATION] ------->  initShaders : function ( gl  )
IGNORED:
NAME:initShaders
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var shaderProgram  =  getShaderProgram  ( gl , "shaders /shader2.fs" , "shaders /shader2.vs"  )
VARIABLE:var shaderProgram 
		KEYWORD:var
		NAME:shaderProgram 
				NAME:shaderProgram
				IGNORED:
KEYWORD:=
CALL: getShaderProgram  ( gl , "shaders /shader2.fs" , "shaders /shader2.vs"  )
		IGNORED:
		SEQUENCE:getShaderProgram  ( gl , "shaders /shader2.fs" , "shaders /shader2.vs"  )
				COMPOSITE:getShaderProgram  ( gl , "shaders /shader2.fs" , "shaders /shader2.vs"  )
						COMPOSITE:getShaderProgram 
								NAME:getShaderProgram
								IGNORED:
						KEYWORD:(
						SEQUENCE:gl , "shaders /shader2.fs" , "shaders /shader2.vs" 
								EXPRESSION:gl 
										VARIABLE:gl 
												NAME:gl
												IGNORED:
								KEYWORD:, 
								EXPRESSION:"shaders /shader2.fs" 
										VARIABLE:"shaders 
												NAME:"shaders
												IGNORED:
										OPERATOR:/
										VARIABLE:shader2.fs" 
												NAME:shader2.fs"
												IGNORED:
								KEYWORD:, 
								EXPRESSION:"shaders /shader2.vs" 
										VARIABLE:"shaders 
												NAME:"shaders
												IGNORED:
										OPERATOR:/
										VARIABLE:shader2.vs" 
												NAME:shader2.vs"
												IGNORED:
						KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> vertexPositionAttribute   = gl. getAttribLocation ( shaderProgram , "aVertexPosition"  )
NAME:vertexPositionAttribute 
		NAME:vertexPositionAttribute
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getAttribLocation ( shaderProgram , "aVertexPosition"  )
		OPENGL_CALL:gl. getAttribLocation ( shaderProgram , "aVertexPosition"  )
				KEYWORD:gl.
				NAME:getAttribLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "aVertexPosition" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"aVertexPosition" 
								VARIABLE:"aVertexPosition" 
										NAME:"aVertexPosition"
										IGNORED:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enableVertexAttribArray ( vertexPositionAttribute  )
OPENGL_CALL:gl. enableVertexAttribArray ( vertexPositionAttribute  )
		KEYWORD:gl.
		NAME:enableVertexAttribArray
		KEYWORD:(
		SEQUENCE:vertexPositionAttribute 
				EXPRESSION:vertexPositionAttribute 
						VARIABLE:vertexPositionAttribute 
								NAME:vertexPositionAttribute
								IGNORED:
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> shaderProgram.textureCoordAttribute   = gl. getAttribLocation ( shaderProgram , "aTextureCoord"  )
NAME:shaderProgram.textureCoordAttribute 
		NAME:shaderProgram.textureCoordAttribute
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getAttribLocation ( shaderProgram , "aTextureCoord"  )
		OPENGL_CALL:gl. getAttribLocation ( shaderProgram , "aTextureCoord"  )
				KEYWORD:gl.
				NAME:getAttribLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "aTextureCoord" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"aTextureCoord" 
								VARIABLE:"aTextureCoord" 
										NAME:"aTextureCoord"
										IGNORED:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enableVertexAttribArray ( textureCoordAttribute  )
OPENGL_CALL:gl. enableVertexAttribArray ( textureCoordAttribute  )
		KEYWORD:gl.
		NAME:enableVertexAttribArray
		KEYWORD:(
		SEQUENCE:textureCoordAttribute 
				EXPRESSION:textureCoordAttribute 
						VARIABLE:textureCoordAttribute 
								NAME:textureCoordAttribute
								IGNORED:
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pMatrixUniform   = gl. getUniformLocation ( shaderProgram , "uPMatrix"  )
NAME:pMatrixUniform 
		NAME:pMatrixUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uPMatrix"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uPMatrix"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uPMatrix" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uPMatrix" 
								VARIABLE:"uPMatrix" 
										NAME:"uPMatrix"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrixUniform   = gl. getUniformLocation ( shaderProgram , "uMVMatrix"  )
NAME:mvMatrixUniform 
		NAME:mvMatrixUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uMVMatrix"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uMVMatrix"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uMVMatrix" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uMVMatrix" 
								VARIABLE:"uMVMatrix" 
										NAME:"uMVMatrix"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> samplerUniform   = gl. getUniformLocation ( shaderProgram , "uSampler"  )
NAME:samplerUniform 
		NAME:samplerUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uSampler"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uSampler"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uSampler" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uSampler" 
								VARIABLE:"uSampler" 
										NAME:"uSampler"
										IGNORED:
				KEYWORD:)


[METHOD_DECLARATION] -------> , setMatrixUniforms : function ( gl  )
KEYWORD:,
NAME:setMatrixUniforms
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniformMatrix4fv ( pMatrixUniform , false , pMatrix  )
OPENGL_CALL:gl. uniformMatrix4fv ( pMatrixUniform , false , pMatrix  )
		KEYWORD:gl.
		NAME:uniformMatrix4fv
		KEYWORD:(
		SEQUENCE:pMatrixUniform , false , pMatrix 
				EXPRESSION:pMatrixUniform 
						VARIABLE:pMatrixUniform 
								NAME:pMatrixUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:pMatrix 
						VARIABLE:pMatrix 
								NAME:pMatrix
								IGNORED:
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniformMatrix4fv ( mvMatrixUniform , false , mvMatrix  )
OPENGL_CALL:gl. uniformMatrix4fv ( mvMatrixUniform , false , mvMatrix  )
		KEYWORD:gl.
		NAME:uniformMatrix4fv
		KEYWORD:(
		SEQUENCE:mvMatrixUniform , false , mvMatrix 
				EXPRESSION:mvMatrixUniform 
						VARIABLE:mvMatrixUniform 
								NAME:mvMatrixUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:mvMatrix 
						VARIABLE:mvMatrix 
								NAME:mvMatrix
								IGNORED:
		KEYWORD:)


[METHOD_DECLARATION] -------> , initBuffers : function ( gl  )
KEYWORD:,
NAME:initBuffers
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pyramidVertexPositionBuffer [ 0 ]  = gl. createBuffer (  )
NAME:pyramidVertexPositionBuffer [ 0 ]
		NAME:pyramidVertexPositionBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, pyramidVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, pyramidVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, pyramidVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:pyramidVertexPositionBuffer [ 0 ]
						VARIABLE:pyramidVertexPositionBuffer [ 0 ]
								NAME:pyramidVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var vertices1  = [ 0.0,1.0,0.0,-1.0,-1.0,-1.0,-1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,-1.0,-1.0,-1.0,-1.0,-1.0 ]
VARIABLE:var vertices1 
		KEYWORD:var
		NAME:vertices1 
				NAME:vertices1
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ 0.0,1.0,0.0,-1.0,-1.0,-1.0,-1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,-1.0,-1.0,-1.0,-1.0,-1.0 ]
		KEYWORD:[
		SEQUENCE:0.0,1.0,0.0,-1.0,-1.0,-1.0,-1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,-1.0,-1.0,-1.0,-1.0,-1.0
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( vertices1  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( vertices1  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( vertices1  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( vertices1  )
						NEW_STATEMENT:new  Float32Array  ( vertices1  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( vertices1  )
										KEYWORD:(
										SEQUENCE:vertices1 
												EXPRESSION:vertices1 
														VARIABLE:vertices1 
																NAME:vertices1
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pyramidVertexPositionBuffer [ 1 ]  = 3
NAME:pyramidVertexPositionBuffer [ 1 ]
		NAME:pyramidVertexPositionBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:3
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pyramidVertexPositionBuffer [ 2 ]  = 6
NAME:pyramidVertexPositionBuffer [ 2 ]
		NAME:pyramidVertexPositionBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:6
		VALUE:6


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pyramidVertexTextureCoordBuffer [ 0 ]  = gl. createBuffer (  )
NAME:pyramidVertexTextureCoordBuffer [ 0 ]
		NAME:pyramidVertexTextureCoordBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, pyramidVertexTextureCoordBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, pyramidVertexTextureCoordBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, pyramidVertexTextureCoordBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:pyramidVertexTextureCoordBuffer [ 0 ]
						VARIABLE:pyramidVertexTextureCoordBuffer [ 0 ]
								NAME:pyramidVertexTextureCoordBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var textureCoords1  = [ 3.0,0.0,0.0,6.0,6.0,6.0,0.0,6.0,6.0,6.0,0.0,6.0 ]
VARIABLE:var textureCoords1 
		KEYWORD:var
		NAME:textureCoords1 
				NAME:textureCoords1
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ 3.0,0.0,0.0,6.0,6.0,6.0,0.0,6.0,6.0,6.0,0.0,6.0 ]
		KEYWORD:[
		SEQUENCE:3.0,0.0,0.0,6.0,6.0,6.0,0.0,6.0,6.0,6.0,0.0,6.0
				EXPRESSION:3.0
						VALUE:3.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:6.0
						VALUE:6.0
				KEYWORD:,
				EXPRESSION:6.0
						VALUE:6.0
				KEYWORD:,
				EXPRESSION:6.0
						VALUE:6.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:6.0
						VALUE:6.0
				KEYWORD:,
				EXPRESSION:6.0
						VALUE:6.0
				KEYWORD:,
				EXPRESSION:6.0
						VALUE:6.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:6.0
						VALUE:6.0
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( textureCoords1  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( textureCoords1  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( textureCoords1  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( textureCoords1  )
						NEW_STATEMENT:new  Float32Array  ( textureCoords1  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( textureCoords1  )
										KEYWORD:(
										SEQUENCE:textureCoords1 
												EXPRESSION:textureCoords1 
														VARIABLE:textureCoords1 
																NAME:textureCoords1
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pyramidVertexTextureCoordBuffer [ 1 ]  = 2
NAME:pyramidVertexTextureCoordBuffer [ 1 ]
		NAME:pyramidVertexTextureCoordBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:2
		VALUE:2


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pyramidVertexTextureCoordBuffer [ 2 ]  = 6
NAME:pyramidVertexTextureCoordBuffer [ 2 ]
		NAME:pyramidVertexTextureCoordBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:6
		VALUE:6


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexPositionBuffer [ 0 ]  = gl. createBuffer (  )
NAME:cubeVertexPositionBuffer [ 0 ]
		NAME:cubeVertexPositionBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, cubeVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:cubeVertexPositionBuffer [ 0 ]
						VARIABLE:cubeVertexPositionBuffer [ 0 ]
								NAME:cubeVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var vertices2  = [ -1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,1.0,1.0,-1.0,1.0,1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,-1.0,1.0,-1.0,-1.0,1.0,-1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,1.0,1.0,-1.0,1.0,-1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,-1.0,1.0,-1.0 ]
VARIABLE:var vertices2 
		KEYWORD:var
		NAME:vertices2 
				NAME:vertices2
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ -1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,1.0,1.0,-1.0,1.0,1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,-1.0,1.0,-1.0,-1.0,1.0,-1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,1.0,1.0,-1.0,1.0,-1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,-1.0,1.0,-1.0 ]
		KEYWORD:[
		SEQUENCE:-1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,1.0,1.0,-1.0,1.0,1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,-1.0,1.0,-1.0,-1.0,1.0,-1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,1.0,1.0,-1.0,1.0,-1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,-1.0,1.0,-1.0
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( vertices2  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( vertices2  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( vertices2  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( vertices2  )
						NEW_STATEMENT:new  Float32Array  ( vertices2  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( vertices2  )
										KEYWORD:(
										SEQUENCE:vertices2 
												EXPRESSION:vertices2 
														VARIABLE:vertices2 
																NAME:vertices2
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexPositionBuffer [ 1 ]  = 3
NAME:cubeVertexPositionBuffer [ 1 ]
		NAME:cubeVertexPositionBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:3
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexPositionBuffer [ 2 ]  = 16
NAME:cubeVertexPositionBuffer [ 2 ]
		NAME:cubeVertexPositionBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:16
		VALUE:16


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexTextureCoordBuffer [ 0 ]  = gl. createBuffer (  )
NAME:cubeVertexTextureCoordBuffer [ 0 ]
		NAME:cubeVertexTextureCoordBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexTextureCoordBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexTextureCoordBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, cubeVertexTextureCoordBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:cubeVertexTextureCoordBuffer [ 0 ]
						VARIABLE:cubeVertexTextureCoordBuffer [ 0 ]
								NAME:cubeVertexTextureCoordBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var textureCoords2  = [ 0.0,0.0,10.0,0.0,10.0,10.0,0.0,10.0,10.0,0.0,10.0,10.0,0.0,10.0,0.0,0.0,10.0,0.0,10.0,10.0,0.0,10.0,0.0,0.0,0.0,0.0,10.0,0.0,10.0,10.0,0.0,10.0 ]
VARIABLE:var textureCoords2 
		KEYWORD:var
		NAME:textureCoords2 
				NAME:textureCoords2
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ 0.0,0.0,10.0,0.0,10.0,10.0,0.0,10.0,10.0,0.0,10.0,10.0,0.0,10.0,0.0,0.0,10.0,0.0,10.0,10.0,0.0,10.0,0.0,0.0,0.0,0.0,10.0,0.0,10.0,10.0,0.0,10.0 ]
		KEYWORD:[
		SEQUENCE:0.0,0.0,10.0,0.0,10.0,10.0,0.0,10.0,10.0,0.0,10.0,10.0,0.0,10.0,0.0,0.0,10.0,0.0,10.0,10.0,0.0,10.0,0.0,0.0,0.0,0.0,10.0,0.0,10.0,10.0,0.0,10.0
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( textureCoords2  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( textureCoords2  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( textureCoords2  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( textureCoords2  )
						NEW_STATEMENT:new  Float32Array  ( textureCoords2  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( textureCoords2  )
										KEYWORD:(
										SEQUENCE:textureCoords2 
												EXPRESSION:textureCoords2 
														VARIABLE:textureCoords2 
																NAME:textureCoords2
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexTextureCoordBuffer [ 1 ]  = 2
NAME:cubeVertexTextureCoordBuffer [ 1 ]
		NAME:cubeVertexTextureCoordBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:2
		VALUE:2


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexTextureCoordBuffer [ 2 ]  = 16
NAME:cubeVertexTextureCoordBuffer [ 2 ]
		NAME:cubeVertexTextureCoordBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:16
		VALUE:16


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexIndexBuffer [ 0 ]  = gl. createBuffer (  )
NAME:cubeVertexIndexBuffer [ 0 ]
		NAME:cubeVertexIndexBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, cubeVertexIndexBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, cubeVertexIndexBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ELEMENT_ARRAY_BUFFER, cubeVertexIndexBuffer [ 0 ]
				EXPRESSION:gl. ELEMENT_ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ELEMENT_ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ELEMENT_ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:cubeVertexIndexBuffer [ 0 ]
						VARIABLE:cubeVertexIndexBuffer [ 0 ]
								NAME:cubeVertexIndexBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cubeVertexIndices  = [ 0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15 ]
VARIABLE:var cubeVertexIndices 
		KEYWORD:var
		NAME:cubeVertexIndices 
				NAME:cubeVertexIndices
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ 0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15 ]
		KEYWORD:[
		SEQUENCE:0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15
				EXPRESSION:0
						VALUE:0
				KEYWORD:,
				EXPRESSION:1
						VALUE:1
				KEYWORD:,
				EXPRESSION:2
						VALUE:2
				KEYWORD:,
				EXPRESSION:0
						VALUE:0
				KEYWORD:,
				EXPRESSION:2
						VALUE:2
				KEYWORD:,
				EXPRESSION:3
						VALUE:3
				KEYWORD:,
				EXPRESSION:4
						VALUE:4
				KEYWORD:,
				EXPRESSION:5
						VALUE:5
				KEYWORD:,
				EXPRESSION:6
						VALUE:6
				KEYWORD:,
				EXPRESSION:4
						VALUE:4
				KEYWORD:,
				EXPRESSION:6
						VALUE:6
				KEYWORD:,
				EXPRESSION:7
						VALUE:7
				KEYWORD:,
				EXPRESSION:8
						VALUE:8
				KEYWORD:,
				EXPRESSION:9
						VALUE:9
				KEYWORD:,
				EXPRESSION:10
						VALUE:10
				KEYWORD:,
				EXPRESSION:8
						VALUE:8
				KEYWORD:,
				EXPRESSION:10
						VALUE:10
				KEYWORD:,
				EXPRESSION:11
						VALUE:11
				KEYWORD:,
				EXPRESSION:12
						VALUE:12
				KEYWORD:,
				EXPRESSION:13
						VALUE:13
				KEYWORD:,
				EXPRESSION:14
						VALUE:14
				KEYWORD:,
				EXPRESSION:12
						VALUE:12
				KEYWORD:,
				EXPRESSION:14
						VALUE:14
				KEYWORD:,
				EXPRESSION:15
						VALUE:15
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ELEMENT_ARRAY_BUFFER, new  Uint16Array  ( cubeVertexIndices  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ELEMENT_ARRAY_BUFFER, new  Uint16Array  ( cubeVertexIndices  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ELEMENT_ARRAY_BUFFER, new  Uint16Array  ( cubeVertexIndices  ), gl. STATIC_DRAW
				EXPRESSION:gl. ELEMENT_ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ELEMENT_ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ELEMENT_ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Uint16Array  ( cubeVertexIndices  )
						NEW_STATEMENT:new  Uint16Array  ( cubeVertexIndices  )
								KEYWORD:new 
								VARIABLE:Uint16Array 
										NAME:Uint16Array
										IGNORED:
								COMPOSITE:( cubeVertexIndices  )
										KEYWORD:(
										SEQUENCE:cubeVertexIndices 
												EXPRESSION:cubeVertexIndices 
														VARIABLE:cubeVertexIndices 
																NAME:cubeVertexIndices
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexIndexBuffer [ 1 ]  = 1
NAME:cubeVertexIndexBuffer [ 1 ]
		NAME:cubeVertexIndexBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:1
		VALUE:1


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexIndexBuffer [ 2 ]  = 24
NAME:cubeVertexIndexBuffer [ 2 ]
		NAME:cubeVertexIndexBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:24
		VALUE:24


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> greenVertexPositionBuffer [ 0 ]  = gl. createBuffer (  )
NAME:greenVertexPositionBuffer [ 0 ]
		NAME:greenVertexPositionBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, greenVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, greenVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, greenVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:greenVertexPositionBuffer [ 0 ]
						VARIABLE:greenVertexPositionBuffer [ 0 ]
								NAME:greenVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var vertices3  = [ -1.0,-1.0,-1.0,-1.0,-1.0,1.0,1.0,-1.0,-1.0,1.0,-1.0,1.0 ]
VARIABLE:var vertices3 
		KEYWORD:var
		NAME:vertices3 
				NAME:vertices3
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ -1.0,-1.0,-1.0,-1.0,-1.0,1.0,1.0,-1.0,-1.0,1.0,-1.0,1.0 ]
		KEYWORD:[
		SEQUENCE:-1.0,-1.0,-1.0,-1.0,-1.0,1.0,1.0,-1.0,-1.0,1.0,-1.0,1.0
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( vertices3  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( vertices3  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( vertices3  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( vertices3  )
						NEW_STATEMENT:new  Float32Array  ( vertices3  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( vertices3  )
										KEYWORD:(
										SEQUENCE:vertices3 
												EXPRESSION:vertices3 
														VARIABLE:vertices3 
																NAME:vertices3
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> greenVertexPositionBuffer [ 1 ]  = 3
NAME:greenVertexPositionBuffer [ 1 ]
		NAME:greenVertexPositionBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:3
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> greenVertexPositionBuffer [ 2 ]  = 4
NAME:greenVertexPositionBuffer [ 2 ]
		NAME:greenVertexPositionBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:4
		VALUE:4


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> greenVertexTextureCoordBuffer [ 0 ]  = gl. createBuffer (  )
NAME:greenVertexTextureCoordBuffer [ 0 ]
		NAME:greenVertexTextureCoordBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, greenVertexTextureCoordBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, greenVertexTextureCoordBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, greenVertexTextureCoordBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:greenVertexTextureCoordBuffer [ 0 ]
						VARIABLE:greenVertexTextureCoordBuffer [ 0 ]
								NAME:greenVertexTextureCoordBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var textureCoords3  = [ 0.0,10.0,0.0,0.0,10.0,0.0,10.0,10.0 ]
VARIABLE:var textureCoords3 
		KEYWORD:var
		NAME:textureCoords3 
				NAME:textureCoords3
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ 0.0,10.0,0.0,0.0,10.0,0.0,10.0,10.0 ]
		KEYWORD:[
		SEQUENCE:0.0,10.0,0.0,0.0,10.0,0.0,10.0,10.0
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( textureCoords3  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( textureCoords3  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( textureCoords3  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( textureCoords3  )
						NEW_STATEMENT:new  Float32Array  ( textureCoords3  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( textureCoords3  )
										KEYWORD:(
										SEQUENCE:textureCoords3 
												EXPRESSION:textureCoords3 
														VARIABLE:textureCoords3 
																NAME:textureCoords3
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> greenVertexTextureCoordBuffer [ 1 ]  = 2
NAME:greenVertexTextureCoordBuffer [ 1 ]
		NAME:greenVertexTextureCoordBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:2
		VALUE:2


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> greenVertexTextureCoordBuffer [ 2 ]  = 4
NAME:greenVertexTextureCoordBuffer [ 2 ]
		NAME:greenVertexTextureCoordBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:4
		VALUE:4


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> doorVertexPositionBuffer [ 0 ]  = gl. createBuffer (  )
NAME:doorVertexPositionBuffer [ 0 ]
		NAME:doorVertexPositionBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, doorVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, doorVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, doorVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:doorVertexPositionBuffer [ 0 ]
						VARIABLE:doorVertexPositionBuffer [ 0 ]
								NAME:doorVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var vertices4  = [ -0.2,-1.0,1.001,0.2,-1.0,1.001,-0.2,0.0,1.001,0.2,0.0,1.001 ]
VARIABLE:var vertices4 
		KEYWORD:var
		NAME:vertices4 
				NAME:vertices4
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ -0.2,-1.0,1.001,0.2,-1.0,1.001,-0.2,0.0,1.001,0.2,0.0,1.001 ]
		KEYWORD:[
		SEQUENCE:-0.2,-1.0,1.001,0.2,-1.0,1.001,-0.2,0.0,1.001,0.2,0.0,1.001
				EXPRESSION:-0.2
						VALUE:-0.2
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.001
						VALUE:1.001
				KEYWORD:,
				EXPRESSION:0.2
						VALUE:0.2
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.001
						VALUE:1.001
				KEYWORD:,
				EXPRESSION:-0.2
						VALUE:-0.2
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.001
						VALUE:1.001
				KEYWORD:,
				EXPRESSION:0.2
						VALUE:0.2
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.001
						VALUE:1.001
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( vertices4  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( vertices4  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( vertices4  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( vertices4  )
						NEW_STATEMENT:new  Float32Array  ( vertices4  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( vertices4  )
										KEYWORD:(
										SEQUENCE:vertices4 
												EXPRESSION:vertices4 
														VARIABLE:vertices4 
																NAME:vertices4
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> doorVertexPositionBuffer [ 1 ]  = 3
NAME:doorVertexPositionBuffer [ 1 ]
		NAME:doorVertexPositionBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:3
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> doorVertexPositionBuffer [ 2 ]  = 4
NAME:doorVertexPositionBuffer [ 2 ]
		NAME:doorVertexPositionBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:4
		VALUE:4


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> doorVertexTextureCoordBuffer [ 0 ]  = gl. createBuffer (  )
NAME:doorVertexTextureCoordBuffer [ 0 ]
		NAME:doorVertexTextureCoordBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, doorVertexTextureCoordBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, doorVertexTextureCoordBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, doorVertexTextureCoordBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:doorVertexTextureCoordBuffer [ 0 ]
						VARIABLE:doorVertexTextureCoordBuffer [ 0 ]
								NAME:doorVertexTextureCoordBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var textureCoords4  = [ 0.0,1.0,1.0,1.0,0.0,0.0,1.0,0.0 ]
VARIABLE:var textureCoords4 
		KEYWORD:var
		NAME:textureCoords4 
				NAME:textureCoords4
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ 0.0,1.0,1.0,1.0,0.0,0.0,1.0,0.0 ]
		KEYWORD:[
		SEQUENCE:0.0,1.0,1.0,1.0,0.0,0.0,1.0,0.0
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( textureCoords4  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( textureCoords4  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( textureCoords4  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( textureCoords4  )
						NEW_STATEMENT:new  Float32Array  ( textureCoords4  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( textureCoords4  )
										KEYWORD:(
										SEQUENCE:textureCoords4 
												EXPRESSION:textureCoords4 
														VARIABLE:textureCoords4 
																NAME:textureCoords4
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> doorVertexTextureCoordBuffer [ 1 ]  = 2
NAME:doorVertexTextureCoordBuffer [ 1 ]
		NAME:doorVertexTextureCoordBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:2
		VALUE:2


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> doorVertexTextureCoordBuffer [ 2 ]  = 4
NAME:doorVertexTextureCoordBuffer [ 2 ]
		NAME:doorVertexTextureCoordBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:4
		VALUE:4


[METHOD_DECLARATION] -------> , initTexture : function ( gl  )
KEYWORD:,
NAME:initTexture
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[FOR, ASSIGNMENT, LINE_OF_CODE] -------> for ( var i  = 0 ; i  < 4 ; i  ++  )
KEYWORD:for
KEYWORD:(
COMPOSITE:var i  = 0
		VARIABLE:var i 
				KEYWORD:var
				NAME:i 
						NAME:i
						IGNORED:
		KEYWORD:=
		EXPRESSION:0
				VALUE:0
KEYWORD:;
VALUE:i 
		VALUE:i
		IGNORED:
KEYWORD:<
EXPRESSION:4
		VALUE:4
KEYWORD:;
SEQUENCE:i  ++ 
		COMPOSITE:i  ++ 
				VARIABLE:i 
						VARIABLE:i
						IGNORED:
				KEYWORD:++
				EXPRESSION:
						IGNORED:
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> textures [ i  ]  = gl. createTexture (  )
NAME:textures [ i  ]
		NAME:textures
		COMPOSITE:[ i  ]
				KEYWORD:[
				EXPRESSION:i 
						NAME:i 
								NAME:i
								IGNORED:
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createTexture (  )
		OPENGL_CALL:gl. createTexture (  )
				KEYWORD:gl.
				NAME:createTexture
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var tex1  = new  Image  (  )
VARIABLE:var tex1 
		KEYWORD:var
		NAME:tex1 
				NAME:tex1
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Image  (  )
		KEYWORD:new 
		TYPE:Image 
				TYPE:Image
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tex1.onload   =  function  (  )
NAME:tex1.onload 
		NAME:tex1.onload
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION: function  (  )
		CALL: function  (  )
				IGNORED:
				SEQUENCE:function  (  )
						COMPOSITE:function  (  )
								COMPOSITE:function 
										NAME:function
										IGNORED:
								KEYWORD:(
								SEQUENCE:
								KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindTexture ( gl. TEXTURE_2D, textures [ 0 ] )
OPENGL_CALL:gl. bindTexture ( gl. TEXTURE_2D, textures [ 0 ] )
		KEYWORD:gl.
		NAME:bindTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, textures [ 0 ]
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:textures [ 0 ]
						VARIABLE:textures [ 0 ]
								NAME:textures
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texImage2D ( gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex1  )
OPENGL_CALL:gl. texImage2D ( gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex1  )
		KEYWORD:gl.
		NAME:texImage2D
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex1 
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:gl. RGB
						OPENGL_CONSTANT:gl. RGB
								KEYWORD:gl.
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:gl. RGB
						OPENGL_CONSTANT:gl. RGB
								KEYWORD:gl.
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:gl. UNSIGNED_BYTE
						OPENGL_CONSTANT:gl. UNSIGNED_BYTE
								KEYWORD:gl.
								NAME:UNSIGNED_BYTE
				KEYWORD:, 
				EXPRESSION:tex1 
						VARIABLE:tex1 
								NAME:tex1
								IGNORED:
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_MAG_FILTER
						OPENGL_CONSTANT:gl. TEXTURE_MAG_FILTER
								KEYWORD:gl.
								NAME:TEXTURE_MAG_FILTER
				KEYWORD:, 
				EXPRESSION:gl. LINEAR
						OPENGL_CONSTANT:gl. LINEAR
								KEYWORD:gl.
								NAME:LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_MIN_FILTER
						OPENGL_CONSTANT:gl. TEXTURE_MIN_FILTER
								KEYWORD:gl.
								NAME:TEXTURE_MIN_FILTER
				KEYWORD:, 
				EXPRESSION:gl. LINEAR_MIPMAP_LINEAR
						OPENGL_CONSTANT:gl. LINEAR_MIPMAP_LINEAR
								KEYWORD:gl.
								NAME:LINEAR_MIPMAP_LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_S, gl. REPEAT )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_S, gl. REPEAT )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_WRAP_S, gl. REPEAT
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_WRAP_S
						OPENGL_CONSTANT:gl. TEXTURE_WRAP_S
								KEYWORD:gl.
								NAME:TEXTURE_WRAP_S
				KEYWORD:, 
				EXPRESSION:gl. REPEAT
						OPENGL_CONSTANT:gl. REPEAT
								KEYWORD:gl.
								NAME:REPEAT
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_T, gl. REPEAT )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_T, gl. REPEAT )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_WRAP_T, gl. REPEAT
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_WRAP_T
						OPENGL_CONSTANT:gl. TEXTURE_WRAP_T
								KEYWORD:gl.
								NAME:TEXTURE_WRAP_T
				KEYWORD:, 
				EXPRESSION:gl. REPEAT
						OPENGL_CONSTANT:gl. REPEAT
								KEYWORD:gl.
								NAME:REPEAT
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. generateMipmap ( gl. TEXTURE_2D )
OPENGL_CALL:gl. generateMipmap ( gl. TEXTURE_2D )
		KEYWORD:gl.
		NAME:generateMipmap
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tex1.src   = "images /muro.gif" 
NAME:tex1.src 
		NAME:tex1.src
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:"images /muro.gif" 
		VARIABLE:"images 
				NAME:"images
				IGNORED:
		OPERATOR:/
		VARIABLE:muro.gif" 
				NAME:muro.gif"
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var tex2  = new  Image  (  )
VARIABLE:var tex2 
		KEYWORD:var
		NAME:tex2 
				NAME:tex2
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Image  (  )
		KEYWORD:new 
		TYPE:Image 
				TYPE:Image
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tex2.onload   =  function  (  )
NAME:tex2.onload 
		NAME:tex2.onload
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION: function  (  )
		CALL: function  (  )
				IGNORED:
				SEQUENCE:function  (  )
						COMPOSITE:function  (  )
								COMPOSITE:function 
										NAME:function
										IGNORED:
								KEYWORD:(
								SEQUENCE:
								KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindTexture ( gl. TEXTURE_2D, textures [ 1 ] )
OPENGL_CALL:gl. bindTexture ( gl. TEXTURE_2D, textures [ 1 ] )
		KEYWORD:gl.
		NAME:bindTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, textures [ 1 ]
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:textures [ 1 ]
						VARIABLE:textures [ 1 ]
								NAME:textures
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texImage2D ( gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex2  )
OPENGL_CALL:gl. texImage2D ( gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex2  )
		KEYWORD:gl.
		NAME:texImage2D
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex2 
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:gl. RGB
						OPENGL_CONSTANT:gl. RGB
								KEYWORD:gl.
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:gl. RGB
						OPENGL_CONSTANT:gl. RGB
								KEYWORD:gl.
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:gl. UNSIGNED_BYTE
						OPENGL_CONSTANT:gl. UNSIGNED_BYTE
								KEYWORD:gl.
								NAME:UNSIGNED_BYTE
				KEYWORD:, 
				EXPRESSION:tex2 
						VARIABLE:tex2 
								NAME:tex2
								IGNORED:
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_MAG_FILTER
						OPENGL_CONSTANT:gl. TEXTURE_MAG_FILTER
								KEYWORD:gl.
								NAME:TEXTURE_MAG_FILTER
				KEYWORD:, 
				EXPRESSION:gl. LINEAR
						OPENGL_CONSTANT:gl. LINEAR
								KEYWORD:gl.
								NAME:LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_MIN_FILTER
						OPENGL_CONSTANT:gl. TEXTURE_MIN_FILTER
								KEYWORD:gl.
								NAME:TEXTURE_MIN_FILTER
				KEYWORD:, 
				EXPRESSION:gl. LINEAR_MIPMAP_LINEAR
						OPENGL_CONSTANT:gl. LINEAR_MIPMAP_LINEAR
								KEYWORD:gl.
								NAME:LINEAR_MIPMAP_LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_S, gl. REPEAT )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_S, gl. REPEAT )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_WRAP_S, gl. REPEAT
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_WRAP_S
						OPENGL_CONSTANT:gl. TEXTURE_WRAP_S
								KEYWORD:gl.
								NAME:TEXTURE_WRAP_S
				KEYWORD:, 
				EXPRESSION:gl. REPEAT
						OPENGL_CONSTANT:gl. REPEAT
								KEYWORD:gl.
								NAME:REPEAT
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_T, gl. REPEAT )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_T, gl. REPEAT )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_WRAP_T, gl. REPEAT
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_WRAP_T
						OPENGL_CONSTANT:gl. TEXTURE_WRAP_T
								KEYWORD:gl.
								NAME:TEXTURE_WRAP_T
				KEYWORD:, 
				EXPRESSION:gl. REPEAT
						OPENGL_CONSTANT:gl. REPEAT
								KEYWORD:gl.
								NAME:REPEAT
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. generateMipmap ( gl. TEXTURE_2D )
OPENGL_CALL:gl. generateMipmap ( gl. TEXTURE_2D )
		KEYWORD:gl.
		NAME:generateMipmap
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tex2.src   = "images /roof.gif" 
NAME:tex2.src 
		NAME:tex2.src
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:"images /roof.gif" 
		VARIABLE:"images 
				NAME:"images
				IGNORED:
		OPERATOR:/
		VARIABLE:roof.gif" 
				NAME:roof.gif"
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var tex3  = new  Image  (  )
VARIABLE:var tex3 
		KEYWORD:var
		NAME:tex3 
				NAME:tex3
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Image  (  )
		KEYWORD:new 
		TYPE:Image 
				TYPE:Image
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tex3.onload   =  function  (  )
NAME:tex3.onload 
		NAME:tex3.onload
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION: function  (  )
		CALL: function  (  )
				IGNORED:
				SEQUENCE:function  (  )
						COMPOSITE:function  (  )
								COMPOSITE:function 
										NAME:function
										IGNORED:
								KEYWORD:(
								SEQUENCE:
								KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindTexture ( gl. TEXTURE_2D, textures [ 2 ] )
OPENGL_CALL:gl. bindTexture ( gl. TEXTURE_2D, textures [ 2 ] )
		KEYWORD:gl.
		NAME:bindTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, textures [ 2 ]
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:textures [ 2 ]
						VARIABLE:textures [ 2 ]
								NAME:textures
								COMPOSITE:[ 2 ]
										KEYWORD:[
										EXPRESSION:2
												VALUE:2
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texImage2D ( gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex3  )
OPENGL_CALL:gl. texImage2D ( gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex3  )
		KEYWORD:gl.
		NAME:texImage2D
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex3 
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:gl. RGB
						OPENGL_CONSTANT:gl. RGB
								KEYWORD:gl.
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:gl. RGB
						OPENGL_CONSTANT:gl. RGB
								KEYWORD:gl.
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:gl. UNSIGNED_BYTE
						OPENGL_CONSTANT:gl. UNSIGNED_BYTE
								KEYWORD:gl.
								NAME:UNSIGNED_BYTE
				KEYWORD:, 
				EXPRESSION:tex3 
						VARIABLE:tex3 
								NAME:tex3
								IGNORED:
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_MAG_FILTER
						OPENGL_CONSTANT:gl. TEXTURE_MAG_FILTER
								KEYWORD:gl.
								NAME:TEXTURE_MAG_FILTER
				KEYWORD:, 
				EXPRESSION:gl. LINEAR
						OPENGL_CONSTANT:gl. LINEAR
								KEYWORD:gl.
								NAME:LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_MIN_FILTER
						OPENGL_CONSTANT:gl. TEXTURE_MIN_FILTER
								KEYWORD:gl.
								NAME:TEXTURE_MIN_FILTER
				KEYWORD:, 
				EXPRESSION:gl. LINEAR_MIPMAP_LINEAR
						OPENGL_CONSTANT:gl. LINEAR_MIPMAP_LINEAR
								KEYWORD:gl.
								NAME:LINEAR_MIPMAP_LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_S, gl. REPEAT )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_S, gl. REPEAT )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_WRAP_S, gl. REPEAT
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_WRAP_S
						OPENGL_CONSTANT:gl. TEXTURE_WRAP_S
								KEYWORD:gl.
								NAME:TEXTURE_WRAP_S
				KEYWORD:, 
				EXPRESSION:gl. REPEAT
						OPENGL_CONSTANT:gl. REPEAT
								KEYWORD:gl.
								NAME:REPEAT
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_T, gl. REPEAT )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_T, gl. REPEAT )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_WRAP_T, gl. REPEAT
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_WRAP_T
						OPENGL_CONSTANT:gl. TEXTURE_WRAP_T
								KEYWORD:gl.
								NAME:TEXTURE_WRAP_T
				KEYWORD:, 
				EXPRESSION:gl. REPEAT
						OPENGL_CONSTANT:gl. REPEAT
								KEYWORD:gl.
								NAME:REPEAT
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. generateMipmap ( gl. TEXTURE_2D )
OPENGL_CALL:gl. generateMipmap ( gl. TEXTURE_2D )
		KEYWORD:gl.
		NAME:generateMipmap
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tex3.src   = "images /grass.gif" 
NAME:tex3.src 
		NAME:tex3.src
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:"images /grass.gif" 
		VARIABLE:"images 
				NAME:"images
				IGNORED:
		OPERATOR:/
		VARIABLE:grass.gif" 
				NAME:grass.gif"
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var tex4  = new  Image  (  )
VARIABLE:var tex4 
		KEYWORD:var
		NAME:tex4 
				NAME:tex4
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Image  (  )
		KEYWORD:new 
		TYPE:Image 
				TYPE:Image
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tex4.onload   =  function  (  )
NAME:tex4.onload 
		NAME:tex4.onload
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION: function  (  )
		CALL: function  (  )
				IGNORED:
				SEQUENCE:function  (  )
						COMPOSITE:function  (  )
								COMPOSITE:function 
										NAME:function
										IGNORED:
								KEYWORD:(
								SEQUENCE:
								KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindTexture ( gl. TEXTURE_2D, textures [ 3 ] )
OPENGL_CALL:gl. bindTexture ( gl. TEXTURE_2D, textures [ 3 ] )
		KEYWORD:gl.
		NAME:bindTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, textures [ 3 ]
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:textures [ 3 ]
						VARIABLE:textures [ 3 ]
								NAME:textures
								COMPOSITE:[ 3 ]
										KEYWORD:[
										EXPRESSION:3
												VALUE:3
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texImage2D ( gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex4  )
OPENGL_CALL:gl. texImage2D ( gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex4  )
		KEYWORD:gl.
		NAME:texImage2D
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex4 
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:gl. RGB
						OPENGL_CONSTANT:gl. RGB
								KEYWORD:gl.
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:gl. RGB
						OPENGL_CONSTANT:gl. RGB
								KEYWORD:gl.
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:gl. UNSIGNED_BYTE
						OPENGL_CONSTANT:gl. UNSIGNED_BYTE
								KEYWORD:gl.
								NAME:UNSIGNED_BYTE
				KEYWORD:, 
				EXPRESSION:tex4 
						VARIABLE:tex4 
								NAME:tex4
								IGNORED:
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_MAG_FILTER
						OPENGL_CONSTANT:gl. TEXTURE_MAG_FILTER
								KEYWORD:gl.
								NAME:TEXTURE_MAG_FILTER
				KEYWORD:, 
				EXPRESSION:gl. LINEAR
						OPENGL_CONSTANT:gl. LINEAR
								KEYWORD:gl.
								NAME:LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_MIN_FILTER
						OPENGL_CONSTANT:gl. TEXTURE_MIN_FILTER
								KEYWORD:gl.
								NAME:TEXTURE_MIN_FILTER
				KEYWORD:, 
				EXPRESSION:gl. LINEAR_MIPMAP_LINEAR
						OPENGL_CONSTANT:gl. LINEAR_MIPMAP_LINEAR
								KEYWORD:gl.
								NAME:LINEAR_MIPMAP_LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. generateMipmap ( gl. TEXTURE_2D )
OPENGL_CALL:gl. generateMipmap ( gl. TEXTURE_2D )
		KEYWORD:gl.
		NAME:generateMipmap
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindTexture ( gl. TEXTURE_2D, null  )
OPENGL_CALL:gl. bindTexture ( gl. TEXTURE_2D, null  )
		KEYWORD:gl.
		NAME:bindTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, null 
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:null 
						VARIABLE:null 
								NAME:null
								IGNORED:
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tex4.src   = "images /door.gif" 
NAME:tex4.src 
		NAME:tex4.src
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:"images /door.gif" 
		VARIABLE:"images 
				NAME:"images
				IGNORED:
		OPERATOR:/
		VARIABLE:door.gif" 
				NAME:door.gif"
				IGNORED:


[METHOD_DECLARATION] -------> , drawScene : function ( gl  )
KEYWORD:,
NAME:drawScene
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. clearColor ( 0.0, 0.71, 0.91, 1.0 )
OPENGL_CALL:gl. clearColor ( 0.0, 0.71, 0.91, 1.0 )
		KEYWORD:gl.
		NAME:clearColor
		KEYWORD:(
		SEQUENCE:0.0, 0.71, 0.91, 1.0
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:, 
				EXPRESSION:0.71
						VALUE:0.71
				KEYWORD:, 
				EXPRESSION:0.91
						VALUE:0.91
				KEYWORD:, 
				EXPRESSION:1.0
						VALUE:1.0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enable ( gl. DEPTH_TEST )
OPENGL_CALL:gl. enable ( gl. DEPTH_TEST )
		KEYWORD:gl.
		NAME:enable
		KEYWORD:(
		SEQUENCE:gl. DEPTH_TEST
				EXPRESSION:gl. DEPTH_TEST
						OPENGL_CONSTANT:gl. DEPTH_TEST
								KEYWORD:gl.
								NAME:DEPTH_TEST
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. cullFace ( gl. BACK )
OPENGL_CALL:gl. cullFace ( gl. BACK )
		KEYWORD:gl.
		NAME:cullFace
		KEYWORD:(
		SEQUENCE:gl. BACK
				EXPRESSION:gl. BACK
						OPENGL_CONSTANT:gl. BACK
								KEYWORD:gl.
								NAME:BACK
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enable ( gl. CULL_FACE )
OPENGL_CALL:gl. enable ( gl. CULL_FACE )
		KEYWORD:gl.
		NAME:enable
		KEYWORD:(
		SEQUENCE:gl. CULL_FACE
				EXPRESSION:gl. CULL_FACE
						OPENGL_CONSTANT:gl. CULL_FACE
								KEYWORD:gl.
								NAME:CULL_FACE
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.handleKeys  (  )
CALL: this.handleKeys  (  )
		IGNORED:
		SEQUENCE:this.handleKeys  (  )
				COMPOSITE:this.handleKeys  (  )
						COMPOSITE:this.handleKeys 
								NAME:this.handleKeys
								IGNORED:
						KEYWORD:(
						SEQUENCE:
						KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. viewport ( 0, 0, 500, 500 )
OPENGL_CALL:gl. viewport ( 0, 0, 500, 500 )
		KEYWORD:gl.
		NAME:viewport
		KEYWORD:(
		SEQUENCE:0, 0, 500, 500
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:500
						VALUE:500
				KEYWORD:, 
				EXPRESSION:500
						VALUE:500
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. clear ( gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT )
OPENGL_CALL:gl. clear ( gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT )
		KEYWORD:gl.
		NAME:clear
		KEYWORD:(
		SEQUENCE:gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT
				EXPRESSION:gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT
						OPENGL_CONSTANT:gl. COLOR_BUFFER_BIT
								KEYWORD:gl.
								NAME:COLOR_BUFFER_BIT
						OPERATOR:|
						OPENGL_CONSTANT:gl. DEPTH_BUFFER_BIT
								KEYWORD:gl.
								NAME:DEPTH_BUFFER_BIT
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cx  =  Math.cos  ( rAnglex  )
VARIABLE:var cx 
		KEYWORD:var
		NAME:cx 
				NAME:cx
				IGNORED:
KEYWORD:=
CALL: Math.cos  ( rAnglex  )
		IGNORED:
		SEQUENCE:Math.cos  ( rAnglex  )
				COMPOSITE:Math.cos  ( rAnglex  )
						COMPOSITE:Math.cos 
								NAME:Math.cos
								IGNORED:
						KEYWORD:(
						SEQUENCE:rAnglex 
								EXPRESSION:rAnglex 
										VARIABLE:rAnglex 
												NAME:rAnglex
												IGNORED:
						KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var sx  =  Math.sin  ( rAnglex  )
VARIABLE:var sx 
		KEYWORD:var
		NAME:sx 
				NAME:sx
				IGNORED:
KEYWORD:=
CALL: Math.sin  ( rAnglex  )
		IGNORED:
		SEQUENCE:Math.sin  ( rAnglex  )
				COMPOSITE:Math.sin  ( rAnglex  )
						COMPOSITE:Math.sin 
								NAME:Math.sin
								IGNORED:
						KEYWORD:(
						SEQUENCE:rAnglex 
								EXPRESSION:rAnglex 
										VARIABLE:rAnglex 
												NAME:rAnglex
												IGNORED:
						KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cy  =  Math.cos  ( rAngley  )
VARIABLE:var cy 
		KEYWORD:var
		NAME:cy 
				NAME:cy
				IGNORED:
KEYWORD:=
CALL: Math.cos  ( rAngley  )
		IGNORED:
		SEQUENCE:Math.cos  ( rAngley  )
				COMPOSITE:Math.cos  ( rAngley  )
						COMPOSITE:Math.cos 
								NAME:Math.cos
								IGNORED:
						KEYWORD:(
						SEQUENCE:rAngley 
								EXPRESSION:rAngley 
										VARIABLE:rAngley 
												NAME:rAngley
												IGNORED:
						KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var sy  =  Math.sin  ( rAngley  )
VARIABLE:var sy 
		KEYWORD:var
		NAME:sy 
				NAME:sy
				IGNORED:
KEYWORD:=
CALL: Math.sin  ( rAngley  )
		IGNORED:
		SEQUENCE:Math.sin  ( rAngley  )
				COMPOSITE:Math.sin  ( rAngley  )
						COMPOSITE:Math.sin 
								NAME:Math.sin
								IGNORED:
						KEYWORD:(
						SEQUENCE:rAngley 
								EXPRESSION:rAngley 
										VARIABLE:rAngley 
												NAME:rAngley
												IGNORED:
						KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pMatrix   = new  Float32Array  ( [ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ] )
NAME:pMatrix 
		NAME:pMatrix
		IGNORED:
IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Float32Array  ( [ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ] )
		KEYWORD:new 
		TYPE:Float32Array 
				TYPE:Float32Array
				IGNORED:
		COMPOSITE:( [ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ] )
				KEYWORD:(
				SEQUENCE:[ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ]
						ARRAY_CONTENT:[ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ]
								KEYWORD:[
								SEQUENCE:2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0
										EXPRESSION:2.4142136573791504
												VALUE:2.4142136573791504
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:2.4142136573791504
												VALUE:2.4142136573791504
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:-1.0020020008087158
												VALUE:-1.0020020008087158
										KEYWORD:,
										EXPRESSION:-1
												VALUE:-1
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:-0.20020020008087158
												VALUE:-0.20020020008087158
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
								KEYWORD:]
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix   = new  Float32Array  ( [ cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,0,-cx,zoom -sx ,1 ] )
NAME:mvMatrix 
		NAME:mvMatrix
		IGNORED:
IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Float32Array  ( [ cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,0,-cx,zoom -sx ,1 ] )
		KEYWORD:new 
		TYPE:Float32Array 
				TYPE:Float32Array
				IGNORED:
		COMPOSITE:( [ cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,0,-cx,zoom -sx ,1 ] )
				KEYWORD:(
				SEQUENCE:[ cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,0,-cx,zoom -sx ,1 ]
						ARRAY_CONTENT:[ cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,0,-cx,zoom -sx ,1 ]
								KEYWORD:[
								SEQUENCE:cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,0,-cx,zoom -sx ,1
										EXPRESSION:cy 
												VARIABLE:cy 
														NAME:cy
														IGNORED:
										KEYWORD:,
										EXPRESSION:sx *sy 
												VARIABLE:sx 
														NAME:sx
														IGNORED:
												OPERATOR:*
												VARIABLE:sy 
														NAME:sy
														IGNORED:
										KEYWORD:,
										EXPRESSION:-cx*sy 
												VALUE:-cx
												OPERATOR:*
												VARIABLE:sy 
														NAME:sy
														IGNORED:
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:cx 
												VARIABLE:cx 
														NAME:cx
														IGNORED:
										KEYWORD:,
										EXPRESSION:sx 
												VARIABLE:sx 
														NAME:sx
														IGNORED:
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:sy 
												VARIABLE:sy 
														NAME:sy
														IGNORED:
										KEYWORD:,
										EXPRESSION:-cy*sx 
												VALUE:-cy
												OPERATOR:*
												VARIABLE:sx 
														NAME:sx
														IGNORED:
										KEYWORD:,
										EXPRESSION:cx *cy 
												VARIABLE:cx 
														NAME:cx
														IGNORED:
												OPERATOR:*
												VARIABLE:cy 
														NAME:cy
														IGNORED:
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:-cx
												VALUE:-cx
										KEYWORD:,
										EXPRESSION:zoom -sx 
												VARIABLE:zoom 
														NAME:zoom
														IGNORED:
												OPERATOR:-
												VARIABLE:sx 
														NAME:sx
														IGNORED:
										KEYWORD:,
										EXPRESSION:1
												VALUE:1
								KEYWORD:]
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. frontFace ( gl. CCW )
OPENGL_CALL:gl. frontFace ( gl. CCW )
		KEYWORD:gl.
		NAME:frontFace
		KEYWORD:(
		SEQUENCE:gl. CCW
				EXPRESSION:gl. CCW
						OPENGL_CONSTANT:gl. CCW
								KEYWORD:gl.
								NAME:CCW
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, cubeVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:cubeVertexPositionBuffer [ 0 ]
						VARIABLE:cubeVertexPositionBuffer [ 0 ]
								NAME:cubeVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( vertexPositionAttribute , cubeVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( vertexPositionAttribute , cubeVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:vertexPositionAttribute , cubeVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:vertexPositionAttribute 
						VARIABLE:vertexPositionAttribute 
								NAME:vertexPositionAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:cubeVertexPositionBuffer [ 1 ]
						VARIABLE:cubeVertexPositionBuffer [ 1 ]
								NAME:cubeVertexPositionBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexTextureCoordBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexTextureCoordBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, cubeVertexTextureCoordBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:cubeVertexTextureCoordBuffer [ 0 ]
						VARIABLE:cubeVertexTextureCoordBuffer [ 0 ]
								NAME:cubeVertexTextureCoordBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( textureCoordAttribute , cubeVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( textureCoordAttribute , cubeVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:textureCoordAttribute , cubeVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:textureCoordAttribute 
						VARIABLE:textureCoordAttribute 
								NAME:textureCoordAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:cubeVertexTextureCoordBuffer [ 1 ]
						VARIABLE:cubeVertexTextureCoordBuffer [ 1 ]
								NAME:cubeVertexTextureCoordBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. activeTexture ( gl. TEXTURE0 )
OPENGL_CALL:gl. activeTexture ( gl. TEXTURE0 )
		KEYWORD:gl.
		NAME:activeTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE0
				EXPRESSION:gl. TEXTURE0
						OPENGL_CONSTANT:gl. TEXTURE0
								KEYWORD:gl.
								NAME:TEXTURE0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindTexture ( gl. TEXTURE_2D, textures [ 0 ] )
OPENGL_CALL:gl. bindTexture ( gl. TEXTURE_2D, textures [ 0 ] )
		KEYWORD:gl.
		NAME:bindTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, textures [ 0 ]
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:textures [ 0 ]
						VARIABLE:textures [ 0 ]
								NAME:textures
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniform1i ( samplerUniform , 0 )
OPENGL_CALL:gl. uniform1i ( samplerUniform , 0 )
		KEYWORD:gl.
		NAME:uniform1i
		KEYWORD:(
		SEQUENCE:samplerUniform , 0
				EXPRESSION:samplerUniform 
						VARIABLE:samplerUniform 
								NAME:samplerUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, cubeVertexIndexBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, cubeVertexIndexBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ELEMENT_ARRAY_BUFFER, cubeVertexIndexBuffer [ 0 ]
				EXPRESSION:gl. ELEMENT_ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ELEMENT_ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ELEMENT_ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:cubeVertexIndexBuffer [ 0 ]
						VARIABLE:cubeVertexIndexBuffer [ 0 ]
								NAME:cubeVertexIndexBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.setMatrixUniforms  ( gl  )
CALL: this.setMatrixUniforms  ( gl  )
		IGNORED:
		SEQUENCE:this.setMatrixUniforms  ( gl  )
				COMPOSITE:this.setMatrixUniforms  ( gl  )
						COMPOSITE:this.setMatrixUniforms 
								NAME:this.setMatrixUniforms
								IGNORED:
						KEYWORD:(
						SEQUENCE:gl 
								EXPRESSION:gl 
										VARIABLE:gl 
												NAME:gl
												IGNORED:
						KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. drawElements ( gl. TRIANGLES, cubeVertexIndexBuffer [ 2 ], gl. UNSIGNED_SHORT, 0 )
OPENGL_CALL:gl. drawElements ( gl. TRIANGLES, cubeVertexIndexBuffer [ 2 ], gl. UNSIGNED_SHORT, 0 )
		KEYWORD:gl.
		NAME:drawElements
		KEYWORD:(
		SEQUENCE:gl. TRIANGLES, cubeVertexIndexBuffer [ 2 ], gl. UNSIGNED_SHORT, 0
				EXPRESSION:gl. TRIANGLES
						OPENGL_CONSTANT:gl. TRIANGLES
								KEYWORD:gl.
								NAME:TRIANGLES
				KEYWORD:, 
				EXPRESSION:cubeVertexIndexBuffer [ 2 ]
						VARIABLE:cubeVertexIndexBuffer [ 2 ]
								NAME:cubeVertexIndexBuffer
								COMPOSITE:[ 2 ]
										KEYWORD:[
										EXPRESSION:2
												VALUE:2
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. UNSIGNED_SHORT
						OPENGL_CONSTANT:gl. UNSIGNED_SHORT
								KEYWORD:gl.
								NAME:UNSIGNED_SHORT
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, doorVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, doorVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, doorVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:doorVertexPositionBuffer [ 0 ]
						VARIABLE:doorVertexPositionBuffer [ 0 ]
								NAME:doorVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( vertexPositionAttribute , doorVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( vertexPositionAttribute , doorVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:vertexPositionAttribute , doorVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:vertexPositionAttribute 
						VARIABLE:vertexPositionAttribute 
								NAME:vertexPositionAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:doorVertexPositionBuffer [ 1 ]
						VARIABLE:doorVertexPositionBuffer [ 1 ]
								NAME:doorVertexPositionBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, doorVertexTextureCoordBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, doorVertexTextureCoordBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, doorVertexTextureCoordBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:doorVertexTextureCoordBuffer [ 0 ]
						VARIABLE:doorVertexTextureCoordBuffer [ 0 ]
								NAME:doorVertexTextureCoordBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( textureCoordAttribute , doorVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( textureCoordAttribute , doorVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:textureCoordAttribute , doorVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:textureCoordAttribute 
						VARIABLE:textureCoordAttribute 
								NAME:textureCoordAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:doorVertexTextureCoordBuffer [ 1 ]
						VARIABLE:doorVertexTextureCoordBuffer [ 1 ]
								NAME:doorVertexTextureCoordBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. activeTexture ( gl. TEXTURE0 )
OPENGL_CALL:gl. activeTexture ( gl. TEXTURE0 )
		KEYWORD:gl.
		NAME:activeTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE0
				EXPRESSION:gl. TEXTURE0
						OPENGL_CONSTANT:gl. TEXTURE0
								KEYWORD:gl.
								NAME:TEXTURE0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindTexture ( gl. TEXTURE_2D, textures [ 3 ] )
OPENGL_CALL:gl. bindTexture ( gl. TEXTURE_2D, textures [ 3 ] )
		KEYWORD:gl.
		NAME:bindTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, textures [ 3 ]
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:textures [ 3 ]
						VARIABLE:textures [ 3 ]
								NAME:textures
								COMPOSITE:[ 3 ]
										KEYWORD:[
										EXPRESSION:3
												VALUE:3
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniform1i ( samplerUniform , 0 )
OPENGL_CALL:gl. uniform1i ( samplerUniform , 0 )
		KEYWORD:gl.
		NAME:uniform1i
		KEYWORD:(
		SEQUENCE:samplerUniform , 0
				EXPRESSION:samplerUniform 
						VARIABLE:samplerUniform 
								NAME:samplerUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.setMatrixUniforms  ( gl  )
CALL: this.setMatrixUniforms  ( gl  )
		IGNORED:
		SEQUENCE:this.setMatrixUniforms  ( gl  )
				COMPOSITE:this.setMatrixUniforms  ( gl  )
						COMPOSITE:this.setMatrixUniforms 
								NAME:this.setMatrixUniforms
								IGNORED:
						KEYWORD:(
						SEQUENCE:gl 
								EXPRESSION:gl 
										VARIABLE:gl 
												NAME:gl
												IGNORED:
						KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. drawArrays ( gl. TRIANGLE_STRIP, 0, doorVertexPositionBuffer [ 2 ] )
OPENGL_CALL:gl. drawArrays ( gl. TRIANGLE_STRIP, 0, doorVertexPositionBuffer [ 2 ] )
		KEYWORD:gl.
		NAME:drawArrays
		KEYWORD:(
		SEQUENCE:gl. TRIANGLE_STRIP, 0, doorVertexPositionBuffer [ 2 ]
				EXPRESSION:gl. TRIANGLE_STRIP
						OPENGL_CONSTANT:gl. TRIANGLE_STRIP
								KEYWORD:gl.
								NAME:TRIANGLE_STRIP
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:doorVertexPositionBuffer [ 2 ]
						VARIABLE:doorVertexPositionBuffer [ 2 ]
								NAME:doorVertexPositionBuffer
								COMPOSITE:[ 2 ]
										KEYWORD:[
										EXPRESSION:2
												VALUE:2
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. disable ( gl. CULL_FACE )
OPENGL_CALL:gl. disable ( gl. CULL_FACE )
		KEYWORD:gl.
		NAME:disable
		KEYWORD:(
		SEQUENCE:gl. CULL_FACE
				EXPRESSION:gl. CULL_FACE
						OPENGL_CONSTANT:gl. CULL_FACE
								KEYWORD:gl.
								NAME:CULL_FACE
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix2   = new  Float32Array  ( mvMatrix  )
NAME:mvMatrix2 
		NAME:mvMatrix2
		IGNORED:
IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Float32Array  ( mvMatrix  )
		KEYWORD:new 
		TYPE:Float32Array 
				TYPE:Float32Array
				IGNORED:
		COMPOSITE:( mvMatrix  )
				KEYWORD:(
				SEQUENCE:mvMatrix 
						EXPRESSION:mvMatrix 
								VARIABLE:mvMatrix 
										NAME:mvMatrix
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix [ 0 ] * = 10
NAME:mvMatrix [ 0 ]
		NAME:mvMatrix
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
KEYWORD:*
KEYWORD:=
EXPRESSION:10
		VALUE:10


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix [ 1 ] * = 10
NAME:mvMatrix [ 1 ]
		NAME:mvMatrix
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
KEYWORD:*
KEYWORD:=
EXPRESSION:10
		VALUE:10


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix [ 2 ] * = 10
NAME:mvMatrix [ 2 ]
		NAME:mvMatrix
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
KEYWORD:*
KEYWORD:=
EXPRESSION:10
		VALUE:10


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix [ 8 ] * = 10
NAME:mvMatrix [ 8 ]
		NAME:mvMatrix
		COMPOSITE:[ 8 ]
				KEYWORD:[
				EXPRESSION:8
						VALUE:8
				KEYWORD:]
KEYWORD:*
KEYWORD:=
EXPRESSION:10
		VALUE:10


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix [ 9 ] * = 10
NAME:mvMatrix [ 9 ]
		NAME:mvMatrix
		COMPOSITE:[ 9 ]
				KEYWORD:[
				EXPRESSION:9
						VALUE:9
				KEYWORD:]
KEYWORD:*
KEYWORD:=
EXPRESSION:10
		VALUE:10


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix [ 10 ] * = 10
NAME:mvMatrix [ 10 ]
		NAME:mvMatrix
		COMPOSITE:[ 10 ]
				KEYWORD:[
				EXPRESSION:10
						VALUE:10
				KEYWORD:]
KEYWORD:*
KEYWORD:=
EXPRESSION:10
		VALUE:10


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, greenVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, greenVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, greenVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:greenVertexPositionBuffer [ 0 ]
						VARIABLE:greenVertexPositionBuffer [ 0 ]
								NAME:greenVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( vertexPositionAttribute , greenVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( vertexPositionAttribute , greenVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:vertexPositionAttribute , greenVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:vertexPositionAttribute 
						VARIABLE:vertexPositionAttribute 
								NAME:vertexPositionAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:greenVertexPositionBuffer [ 1 ]
						VARIABLE:greenVertexPositionBuffer [ 1 ]
								NAME:greenVertexPositionBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, greenVertexTextureCoordBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, greenVertexTextureCoordBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, greenVertexTextureCoordBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:greenVertexTextureCoordBuffer [ 0 ]
						VARIABLE:greenVertexTextureCoordBuffer [ 0 ]
								NAME:greenVertexTextureCoordBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( textureCoordAttribute , greenVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( textureCoordAttribute , greenVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:textureCoordAttribute , greenVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:textureCoordAttribute 
						VARIABLE:textureCoordAttribute 
								NAME:textureCoordAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:greenVertexTextureCoordBuffer [ 1 ]
						VARIABLE:greenVertexTextureCoordBuffer [ 1 ]
								NAME:greenVertexTextureCoordBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. activeTexture ( gl. TEXTURE0 )
OPENGL_CALL:gl. activeTexture ( gl. TEXTURE0 )
		KEYWORD:gl.
		NAME:activeTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE0
				EXPRESSION:gl. TEXTURE0
						OPENGL_CONSTANT:gl. TEXTURE0
								KEYWORD:gl.
								NAME:TEXTURE0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindTexture ( gl. TEXTURE_2D, textures [ 2 ] )
OPENGL_CALL:gl. bindTexture ( gl. TEXTURE_2D, textures [ 2 ] )
		KEYWORD:gl.
		NAME:bindTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, textures [ 2 ]
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:textures [ 2 ]
						VARIABLE:textures [ 2 ]
								NAME:textures
								COMPOSITE:[ 2 ]
										KEYWORD:[
										EXPRESSION:2
												VALUE:2
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniform1i ( samplerUniform , 0 )
OPENGL_CALL:gl. uniform1i ( samplerUniform , 0 )
		KEYWORD:gl.
		NAME:uniform1i
		KEYWORD:(
		SEQUENCE:samplerUniform , 0
				EXPRESSION:samplerUniform 
						VARIABLE:samplerUniform 
								NAME:samplerUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.setMatrixUniforms  ( gl  )
CALL: this.setMatrixUniforms  ( gl  )
		IGNORED:
		SEQUENCE:this.setMatrixUniforms  ( gl  )
				COMPOSITE:this.setMatrixUniforms  ( gl  )
						COMPOSITE:this.setMatrixUniforms 
								NAME:this.setMatrixUniforms
								IGNORED:
						KEYWORD:(
						SEQUENCE:gl 
								EXPRESSION:gl 
										VARIABLE:gl 
												NAME:gl
												IGNORED:
						KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. drawArrays ( gl. TRIANGLE_STRIP, 0, greenVertexPositionBuffer [ 2 ] )
OPENGL_CALL:gl. drawArrays ( gl. TRIANGLE_STRIP, 0, greenVertexPositionBuffer [ 2 ] )
		KEYWORD:gl.
		NAME:drawArrays
		KEYWORD:(
		SEQUENCE:gl. TRIANGLE_STRIP, 0, greenVertexPositionBuffer [ 2 ]
				EXPRESSION:gl. TRIANGLE_STRIP
						OPENGL_CONSTANT:gl. TRIANGLE_STRIP
								KEYWORD:gl.
								NAME:TRIANGLE_STRIP
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:greenVertexPositionBuffer [ 2 ]
						VARIABLE:greenVertexPositionBuffer [ 2 ]
								NAME:greenVertexPositionBuffer
								COMPOSITE:[ 2 ]
										KEYWORD:[
										EXPRESSION:2
												VALUE:2
										KEYWORD:]
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix   = mvMatrix2 
NAME:mvMatrix 
		NAME:mvMatrix
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:mvMatrix2 
		VARIABLE:mvMatrix2 
				NAME:mvMatrix2
				IGNORED:


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enable ( gl. CULL_FACE )
OPENGL_CALL:gl. enable ( gl. CULL_FACE )
		KEYWORD:gl.
		NAME:enable
		KEYWORD:(
		SEQUENCE:gl. CULL_FACE
				EXPRESSION:gl. CULL_FACE
						OPENGL_CONSTANT:gl. CULL_FACE
								KEYWORD:gl.
								NAME:CULL_FACE
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix [ 13 ] + = 2*cx 
NAME:mvMatrix [ 13 ]
		NAME:mvMatrix
		COMPOSITE:[ 13 ]
				KEYWORD:[
				EXPRESSION:13
						VALUE:13
				KEYWORD:]
KEYWORD:+
KEYWORD:=
EXPRESSION:2*cx 
		VALUE:2
		OPERATOR:*
		VARIABLE:cx 
				NAME:cx
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix [ 14 ] + = 2*sx 
NAME:mvMatrix [ 14 ]
		NAME:mvMatrix
		COMPOSITE:[ 14 ]
				KEYWORD:[
				EXPRESSION:14
						VALUE:14
				KEYWORD:]
KEYWORD:+
KEYWORD:=
EXPRESSION:2*sx 
		VALUE:2
		OPERATOR:*
		VARIABLE:sx 
				NAME:sx
				IGNORED:


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, pyramidVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, pyramidVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, pyramidVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:pyramidVertexPositionBuffer [ 0 ]
						VARIABLE:pyramidVertexPositionBuffer [ 0 ]
								NAME:pyramidVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( vertexPositionAttribute , pyramidVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( vertexPositionAttribute , pyramidVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:vertexPositionAttribute , pyramidVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:vertexPositionAttribute 
						VARIABLE:vertexPositionAttribute 
								NAME:vertexPositionAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:pyramidVertexPositionBuffer [ 1 ]
						VARIABLE:pyramidVertexPositionBuffer [ 1 ]
								NAME:pyramidVertexPositionBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, pyramidVertexTextureCoordBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, pyramidVertexTextureCoordBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, pyramidVertexTextureCoordBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:pyramidVertexTextureCoordBuffer [ 0 ]
						VARIABLE:pyramidVertexTextureCoordBuffer [ 0 ]
								NAME:pyramidVertexTextureCoordBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( textureCoordAttribute , pyramidVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( textureCoordAttribute , pyramidVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:textureCoordAttribute , pyramidVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:textureCoordAttribute 
						VARIABLE:textureCoordAttribute 
								NAME:textureCoordAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:pyramidVertexTextureCoordBuffer [ 1 ]
						VARIABLE:pyramidVertexTextureCoordBuffer [ 1 ]
								NAME:pyramidVertexTextureCoordBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. activeTexture ( gl. TEXTURE0 )
OPENGL_CALL:gl. activeTexture ( gl. TEXTURE0 )
		KEYWORD:gl.
		NAME:activeTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE0
				EXPRESSION:gl. TEXTURE0
						OPENGL_CONSTANT:gl. TEXTURE0
								KEYWORD:gl.
								NAME:TEXTURE0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindTexture ( gl. TEXTURE_2D, textures [ 1 ] )
OPENGL_CALL:gl. bindTexture ( gl. TEXTURE_2D, textures [ 1 ] )
		KEYWORD:gl.
		NAME:bindTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, textures [ 1 ]
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:textures [ 1 ]
						VARIABLE:textures [ 1 ]
								NAME:textures
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniform1i ( samplerUniform , 0 )
OPENGL_CALL:gl. uniform1i ( samplerUniform , 0 )
		KEYWORD:gl.
		NAME:uniform1i
		KEYWORD:(
		SEQUENCE:samplerUniform , 0
				EXPRESSION:samplerUniform 
						VARIABLE:samplerUniform 
								NAME:samplerUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.setMatrixUniforms  ( gl  )
CALL: this.setMatrixUniforms  ( gl  )
		IGNORED:
		SEQUENCE:this.setMatrixUniforms  ( gl  )
				COMPOSITE:this.setMatrixUniforms  ( gl  )
						COMPOSITE:this.setMatrixUniforms 
								NAME:this.setMatrixUniforms
								IGNORED:
						KEYWORD:(
						SEQUENCE:gl 
								EXPRESSION:gl 
										VARIABLE:gl 
												NAME:gl
												IGNORED:
						KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. drawArrays ( gl. TRIANGLE_FAN, 0, pyramidVertexPositionBuffer [ 2 ] )
OPENGL_CALL:gl. drawArrays ( gl. TRIANGLE_FAN, 0, pyramidVertexPositionBuffer [ 2 ] )
		KEYWORD:gl.
		NAME:drawArrays
		KEYWORD:(
		SEQUENCE:gl. TRIANGLE_FAN, 0, pyramidVertexPositionBuffer [ 2 ]
				EXPRESSION:gl. TRIANGLE_FAN
						OPENGL_CONSTANT:gl. TRIANGLE_FAN
								KEYWORD:gl.
								NAME:TRIANGLE_FAN
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:pyramidVertexPositionBuffer [ 2 ]
						VARIABLE:pyramidVertexPositionBuffer [ 2 ]
								NAME:pyramidVertexPositionBuffer
								COMPOSITE:[ 2 ]
										KEYWORD:[
										EXPRESSION:2
												VALUE:2
										KEYWORD:]
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.animate  (  )
CALL: this.animate  (  )
		IGNORED:
		SEQUENCE:this.animate  (  )
				COMPOSITE:this.animate  (  )
						COMPOSITE:this.animate 
								NAME:this.animate
								IGNORED:
						KEYWORD:(
						SEQUENCE:
						KEYWORD:)


[METHOD_DECLARATION] -------> , animate : function (  )
KEYWORD:,
NAME:animate
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var timeNow  = new  Date  (  ) . getTime  (  )
VARIABLE:var timeNow 
		KEYWORD:var
		NAME:timeNow 
				NAME:timeNow
				IGNORED:
KEYWORD:=
CALL:new  Date  (  ) . getTime  (  )
		COMPOSITE:new  Date  (  ) .
				NEW_STATEMENT:new  Date  (  )
						KEYWORD:new 
						TYPE:Date 
								TYPE:Date
								IGNORED:
						COMPOSITE:(  )
								KEYWORD:(
								SEQUENCE:
								KEYWORD:)
				KEYWORD:.
		SEQUENCE:getTime  (  )
				COMPOSITE:getTime  (  )
						COMPOSITE:getTime 
								NAME:getTime
								IGNORED:
						KEYWORD:(
						SEQUENCE:
						KEYWORD:)


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( lastTime !=0 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:lastTime !=0
		VARIABLE:lastTime 
				NAME:lastTime
				IGNORED:
		OPERATOR:!=
		VALUE:0
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var elapsed  = timeNow -lastTime 
VARIABLE:var elapsed 
		KEYWORD:var
		NAME:elapsed 
				NAME:elapsed
				IGNORED:
KEYWORD:=
EXPRESSION:timeNow -lastTime 
		VARIABLE:timeNow 
				NAME:timeNow
				IGNORED:
		OPERATOR:-
		VARIABLE:lastTime 
				NAME:lastTime
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> rAnglex  + = speedx *elapsed *0.001
NAME:rAnglex 
		NAME:rAnglex
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION:speedx *elapsed *0.001
		VARIABLE:speedx 
				NAME:speedx
				IGNORED:
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> rAngley  + = speedy *elapsed *0.001
NAME:rAngley 
		NAME:rAngley
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION:speedy *elapsed *0.001
		VARIABLE:speedy 
				NAME:speedy
				IGNORED:
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> lastTime   = timeNow 
NAME:lastTime 
		NAME:lastTime
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:timeNow 
		VARIABLE:timeNow 
				NAME:timeNow
				IGNORED:


[METHOD_DECLARATION] -------> , handleKeys : function (  )
KEYWORD:,
NAME:handleKeys
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var timeNow  = new  Date  (  ) . getTime  (  )
VARIABLE:var timeNow 
		KEYWORD:var
		NAME:timeNow 
				NAME:timeNow
				IGNORED:
KEYWORD:=
CALL:new  Date  (  ) . getTime  (  )
		COMPOSITE:new  Date  (  ) .
				NEW_STATEMENT:new  Date  (  )
						KEYWORD:new 
						TYPE:Date 
								TYPE:Date
								IGNORED:
						COMPOSITE:(  )
								KEYWORD:(
								SEQUENCE:
								KEYWORD:)
				KEYWORD:.
		SEQUENCE:getTime  (  )
				COMPOSITE:getTime  (  )
						COMPOSITE:getTime 
								NAME:getTime
								IGNORED:
						KEYWORD:(
						SEQUENCE:
						KEYWORD:)


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( lastTime2 !=0 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:lastTime2 !=0
		VARIABLE:lastTime2 
				NAME:lastTime2
				IGNORED:
		OPERATOR:!=
		VALUE:0
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var elapsed  = timeNow -lastTime2 
VARIABLE:var elapsed 
		KEYWORD:var
		NAME:elapsed 
				NAME:elapsed
				IGNORED:
KEYWORD:=
EXPRESSION:timeNow -lastTime2 
		VARIABLE:timeNow 
				NAME:timeNow
				IGNORED:
		OPERATOR:-
		VARIABLE:lastTime2 
				NAME:lastTime2
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands [ 0 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands [ 0 ]
		VARIABLE:commands [ 0 ]
				NAME:commands
				COMPOSITE:[ 0 ]
						KEYWORD:[
						EXPRESSION:0
								VALUE:0
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> zoom  + = 5*elapsed *0.001
NAME:zoom 
		NAME:zoom
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION:5*elapsed *0.001
		VALUE:5
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands [ 1 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands [ 1 ]
		VARIABLE:commands [ 1 ]
				NAME:commands
				COMPOSITE:[ 1 ]
						KEYWORD:[
						EXPRESSION:1
								VALUE:1
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> zoom  - = 5*elapsed *0.001
NAME:zoom 
		NAME:zoom
		IGNORED:
KEYWORD:-
KEYWORD:=
EXPRESSION:5*elapsed *0.001
		VALUE:5
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands [ 2 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands [ 2 ]
		VARIABLE:commands [ 2 ]
				NAME:commands
				COMPOSITE:[ 2 ]
						KEYWORD:[
						EXPRESSION:2
								VALUE:2
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> speedx  - = 2*elapsed *0.001
NAME:speedx 
		NAME:speedx
		IGNORED:
KEYWORD:-
KEYWORD:=
EXPRESSION:2*elapsed *0.001
		VALUE:2
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands [ 3 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands [ 3 ]
		VARIABLE:commands [ 3 ]
				NAME:commands
				COMPOSITE:[ 3 ]
						KEYWORD:[
						EXPRESSION:3
								VALUE:3
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> speedx  + = 2*elapsed *0.001
NAME:speedx 
		NAME:speedx
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION:2*elapsed *0.001
		VALUE:2
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands [ 4 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands [ 4 ]
		VARIABLE:commands [ 4 ]
				NAME:commands
				COMPOSITE:[ 4 ]
						KEYWORD:[
						EXPRESSION:4
								VALUE:4
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> speedy  - = 2*elapsed *0.001
NAME:speedy 
		NAME:speedy
		IGNORED:
KEYWORD:-
KEYWORD:=
EXPRESSION:2*elapsed *0.001
		VALUE:2
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands [ 5 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands [ 5 ]
		VARIABLE:commands [ 5 ]
				NAME:commands
				COMPOSITE:[ 5 ]
						KEYWORD:[
						EXPRESSION:5
								VALUE:5
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> speedy  + = 2*elapsed *0.001
NAME:speedy 
		NAME:speedy
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION:2*elapsed *0.001
		VALUE:2
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.001


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> lastTime2   = timeNow 
NAME:lastTime2 
		NAME:lastTime2
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:timeNow 
		VARIABLE:timeNow 
				NAME:timeNow
				IGNORED:


[METHOD_DECLARATION] -------> , setCommands : function ( e , value  )
KEYWORD:,
NAME:setCommands
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:e , value 
		VARIABLE:e 
				NAME:e
				IGNORED:
		KEYWORD:, 
		VARIABLE:value 
				NAME:value
				IGNORED:
KEYWORD:)


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==65 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==65
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:65
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 0 ]  = value 
NAME:commands [ 0 ]
		NAME:commands
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==90 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==90
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:90
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 1 ]  = value 
NAME:commands [ 1 ]
		NAME:commands
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==38 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==38
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:38
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 2 ]  = value 
NAME:commands [ 2 ]
		NAME:commands
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==40 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==40
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:40
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 3 ]  = value 
NAME:commands [ 3 ]
		NAME:commands
		COMPOSITE:[ 3 ]
				KEYWORD:[
				EXPRESSION:3
						VALUE:3
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==37 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==37
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:37
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 4 ]  = value 
NAME:commands [ 4 ]
		NAME:commands
		COMPOSITE:[ 4 ]
				KEYWORD:[
				EXPRESSION:4
						VALUE:4
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==39 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==39
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:39
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 5 ]  = value 
NAME:commands [ 5 ]
		NAME:commands
		COMPOSITE:[ 5 ]
				KEYWORD:[
				EXPRESSION:5
						VALUE:5
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[METHOD_DECLARATION] -------> , keyPressed : function ( e  )
KEYWORD:,
NAME:keyPressed
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:e 
		VARIABLE:e 
				NAME:e
				IGNORED:
KEYWORD:)


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==87 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==87
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:87
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> wrapper   = wrapper ==2 ? 0 : ( wrapper +1 )
NAME:wrapper 
		NAME:wrapper
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:wrapper ==2 ? 0 : ( wrapper +1 )
		TERNARY_OPERATOR:wrapper ==2 ? 0 : ( wrapper +1 )
				EXPRESSION:wrapper ==2
						VARIABLE:wrapper 
								NAME:wrapper
								IGNORED:
						OPERATOR:==
						VALUE:2
				KEYWORD:?
				EXPRESSION:0
						VALUE:0
				KEYWORD::
				EXPRESSION:( wrapper +1 )
						COMPOSITE:( wrapper +1 )
								KEYWORD:(
								EXPRESSION:wrapper +1
										VARIABLE:wrapper 
												NAME:wrapper
												IGNORED:
										OPERATOR:+
										VALUE:1
								KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.setCommands  ( e , true  )
CALL: this.setCommands  ( e , true  )
		IGNORED:
		SEQUENCE:this.setCommands  ( e , true  )
				COMPOSITE:this.setCommands  ( e , true  )
						COMPOSITE:this.setCommands 
								NAME:this.setCommands
								IGNORED:
						KEYWORD:(
						SEQUENCE:e , true 
								EXPRESSION:e 
										VARIABLE:e 
												NAME:e
												IGNORED:
								KEYWORD:, 
								EXPRESSION:true 
										VARIABLE:true 
												NAME:true
												IGNORED:
						KEYWORD:)


[METHOD_DECLARATION] -------> , keyReleased : function ( e  )
KEYWORD:,
NAME:keyReleased
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:e 
		VARIABLE:e 
				NAME:e
				IGNORED:
KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.setCommands  ( e , false  )
CALL: this.setCommands  ( e , false  )
		IGNORED:
		SEQUENCE:this.setCommands  ( e , false  )
				COMPOSITE:this.setCommands  ( e , false  )
						COMPOSITE:this.setCommands 
								NAME:this.setCommands
								IGNORED:
						KEYWORD:(
						SEQUENCE:e , false 
								EXPRESSION:e 
										VARIABLE:e 
												NAME:e
												IGNORED:
								KEYWORD:, 
								EXPRESSION:false 
										VARIABLE:false 
												NAME:false
												IGNORED:
						KEYWORD:)



test_va2Drawer.js
[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var vertexPositionAttribute 
VARIABLE:var vertexPositionAttribute 
		KEYWORD:var
		NAME:vertexPositionAttribute 
				NAME:vertexPositionAttribute
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var vertexNormalAttribute 
VARIABLE:var vertexNormalAttribute 
		KEYWORD:var
		NAME:vertexNormalAttribute 
				NAME:vertexNormalAttribute
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var textureCoordAttribute 
VARIABLE:var textureCoordAttribute 
		KEYWORD:var
		NAME:textureCoordAttribute 
				NAME:textureCoordAttribute
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var pMatrixUniform 
VARIABLE:var pMatrixUniform 
		KEYWORD:var
		NAME:pMatrixUniform 
				NAME:pMatrixUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var mvMatrixUniform 
VARIABLE:var mvMatrixUniform 
		KEYWORD:var
		NAME:mvMatrixUniform 
				NAME:mvMatrixUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var nMatrixUniform 
VARIABLE:var nMatrixUniform 
		KEYWORD:var
		NAME:nMatrixUniform 
				NAME:nMatrixUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var samplerUniform 
VARIABLE:var samplerUniform 
		KEYWORD:var
		NAME:samplerUniform 
				NAME:samplerUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var ambientColorUniform 
VARIABLE:var ambientColorUniform 
		KEYWORD:var
		NAME:ambientColorUniform 
				NAME:ambientColorUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var pointLightingLocationUniform 
VARIABLE:var pointLightingLocationUniform 
		KEYWORD:var
		NAME:pointLightingLocationUniform 
				NAME:pointLightingLocationUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var pointLightingSpecularColorUniform 
VARIABLE:var pointLightingSpecularColorUniform 
		KEYWORD:var
		NAME:pointLightingSpecularColorUniform 
				NAME:pointLightingSpecularColorUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var pointLightingDiffuseColorUniform 
VARIABLE:var pointLightingDiffuseColorUniform 
		KEYWORD:var
		NAME:pointLightingDiffuseColorUniform 
				NAME:pointLightingDiffuseColorUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var materialShininessUniform 
VARIABLE:var materialShininessUniform 
		KEYWORD:var
		NAME:materialShininessUniform 
				NAME:materialShininessUniform
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var alphaUniform 
VARIABLE:var alphaUniform 
		KEYWORD:var
		NAME:alphaUniform 
				NAME:alphaUniform
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var doorVertexPositionBuffer  = new  Array  (  )
VARIABLE:var doorVertexPositionBuffer 
		KEYWORD:var
		NAME:doorVertexPositionBuffer 
				NAME:doorVertexPositionBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var doorVertexNormalBuffer  = new  Array  (  )
VARIABLE:var doorVertexNormalBuffer 
		KEYWORD:var
		NAME:doorVertexNormalBuffer 
				NAME:doorVertexNormalBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var doorVertexTextureCoordBuffer  = new  Array  (  )
VARIABLE:var doorVertexTextureCoordBuffer 
		KEYWORD:var
		NAME:doorVertexTextureCoordBuffer 
				NAME:doorVertexTextureCoordBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var greenVertexPositionBuffer  = new  Array  (  )
VARIABLE:var greenVertexPositionBuffer 
		KEYWORD:var
		NAME:greenVertexPositionBuffer 
				NAME:greenVertexPositionBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var greenVertexNormalBuffer  = new  Array  (  )
VARIABLE:var greenVertexNormalBuffer 
		KEYWORD:var
		NAME:greenVertexNormalBuffer 
				NAME:greenVertexNormalBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var greenVertexTextureCoordBuffer  = new  Array  (  )
VARIABLE:var greenVertexTextureCoordBuffer 
		KEYWORD:var
		NAME:greenVertexTextureCoordBuffer 
				NAME:greenVertexTextureCoordBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var pyramidVertexPositionBuffer  = new  Array  (  )
VARIABLE:var pyramidVertexPositionBuffer 
		KEYWORD:var
		NAME:pyramidVertexPositionBuffer 
				NAME:pyramidVertexPositionBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var pyramidVertexNormalBuffer  = new  Array  (  )
VARIABLE:var pyramidVertexNormalBuffer 
		KEYWORD:var
		NAME:pyramidVertexNormalBuffer 
				NAME:pyramidVertexNormalBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var pyramidVertexIndexBuffer  = new  Array  (  )
VARIABLE:var pyramidVertexIndexBuffer 
		KEYWORD:var
		NAME:pyramidVertexIndexBuffer 
				NAME:pyramidVertexIndexBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var pyramidVertexTextureCoordBuffer  = new  Array  (  )
VARIABLE:var pyramidVertexTextureCoordBuffer 
		KEYWORD:var
		NAME:pyramidVertexTextureCoordBuffer 
				NAME:pyramidVertexTextureCoordBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cubeVertexPositionBuffer  = new  Array  (  )
VARIABLE:var cubeVertexPositionBuffer 
		KEYWORD:var
		NAME:cubeVertexPositionBuffer 
				NAME:cubeVertexPositionBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cubeVertexNormalBuffer  = new  Array  (  )
VARIABLE:var cubeVertexNormalBuffer 
		KEYWORD:var
		NAME:cubeVertexNormalBuffer 
				NAME:cubeVertexNormalBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cubeVertexIndexBuffer  = new  Array  (  )
VARIABLE:var cubeVertexIndexBuffer 
		KEYWORD:var
		NAME:cubeVertexIndexBuffer 
				NAME:cubeVertexIndexBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cubeVertexTextureCoordBuffer  = new  Array  (  )
VARIABLE:var cubeVertexTextureCoordBuffer 
		KEYWORD:var
		NAME:cubeVertexTextureCoordBuffer 
				NAME:cubeVertexTextureCoordBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var tractorVertexPositionBuffer  = new  Array  (  )
VARIABLE:var tractorVertexPositionBuffer 
		KEYWORD:var
		NAME:tractorVertexPositionBuffer 
				NAME:tractorVertexPositionBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var tractorVertexNormalBuffer  = new  Array  (  )
VARIABLE:var tractorVertexNormalBuffer 
		KEYWORD:var
		NAME:tractorVertexNormalBuffer 
				NAME:tractorVertexNormalBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var tractorVertexTextureCoordBuffer  = new  Array  (  )
VARIABLE:var tractorVertexTextureCoordBuffer 
		KEYWORD:var
		NAME:tractorVertexTextureCoordBuffer 
				NAME:tractorVertexTextureCoordBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var tractorVertexIndexBuffer  = new  Array  (  )
VARIABLE:var tractorVertexIndexBuffer 
		KEYWORD:var
		NAME:tractorVertexIndexBuffer 
				NAME:tractorVertexIndexBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var seagulVertexPositionBuffer  = new  Array  (  )
VARIABLE:var seagulVertexPositionBuffer 
		KEYWORD:var
		NAME:seagulVertexPositionBuffer 
				NAME:seagulVertexPositionBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var seagulVertexNormalBuffer  = new  Array  (  )
VARIABLE:var seagulVertexNormalBuffer 
		KEYWORD:var
		NAME:seagulVertexNormalBuffer 
				NAME:seagulVertexNormalBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var seagulVertexTextureCoordBuffer  = new  Array  (  )
VARIABLE:var seagulVertexTextureCoordBuffer 
		KEYWORD:var
		NAME:seagulVertexTextureCoordBuffer 
				NAME:seagulVertexTextureCoordBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var seagulVertexIndexBuffer  = new  Array  (  )
VARIABLE:var seagulVertexIndexBuffer 
		KEYWORD:var
		NAME:seagulVertexIndexBuffer 
				NAME:seagulVertexIndexBuffer
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var textures  = new  Array  (  )
VARIABLE:var textures 
		KEYWORD:var
		NAME:textures 
				NAME:textures
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var pMatrix 
VARIABLE:var pMatrix 
		KEYWORD:var
		NAME:pMatrix 
				NAME:pMatrix
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var mvMatrix 
VARIABLE:var mvMatrix 
		KEYWORD:var
		NAME:mvMatrix 
				NAME:mvMatrix
				IGNORED:


[VARIABLE_DECLARATION, LINE_OF_CODE] -------> var normalMatrix 
VARIABLE:var normalMatrix 
		KEYWORD:var
		NAME:normalMatrix 
				NAME:normalMatrix
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var lastTime  = 0
VARIABLE:var lastTime 
		KEYWORD:var
		NAME:lastTime 
				NAME:lastTime
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var commands  = new  Array  (  )
VARIABLE:var commands 
		KEYWORD:var
		NAME:commands 
				NAME:commands
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Array  (  )
		KEYWORD:new 
		TYPE:Array 
				TYPE:Array
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var seagulAngle  = 0
VARIABLE:var seagulAngle 
		KEYWORD:var
		NAME:seagulAngle 
				NAME:seagulAngle
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var tractorx  = 0
VARIABLE:var tractorx 
		KEYWORD:var
		NAME:tractorx 
				NAME:tractorx
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var pitch  = 0
VARIABLE:var pitch 
		KEYWORD:var
		NAME:pitch 
				NAME:pitch
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var yaw  = 0
VARIABLE:var yaw 
		KEYWORD:var
		NAME:yaw 
				NAME:yaw
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var xPos  = 0
VARIABLE:var xPos 
		KEYWORD:var
		NAME:xPos 
				NAME:xPos
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var yStart  = -1.5
VARIABLE:var yStart 
		KEYWORD:var
		NAME:yStart 
				NAME:yStart
				IGNORED:
KEYWORD:=
EXPRESSION:-1.5
		VALUE:-1.5


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var yPos  = yStart 
VARIABLE:var yPos 
		KEYWORD:var
		NAME:yPos 
				NAME:yPos
				IGNORED:
KEYWORD:=
EXPRESSION:yStart 
		VARIABLE:yStart 
				NAME:yStart
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var zPos  = 10
VARIABLE:var zPos 
		KEYWORD:var
		NAME:zPos 
				NAME:zPos
				IGNORED:
KEYWORD:=
EXPRESSION:10
		VALUE:10


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var speed  = 0
VARIABLE:var speed 
		KEYWORD:var
		NAME:speed 
				NAME:speed
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var lspeed  = 0
VARIABLE:var lspeed 
		KEYWORD:var
		NAME:lspeed 
				NAME:lspeed
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var pitchRate  = 0
VARIABLE:var pitchRate 
		KEYWORD:var
		NAME:pitchRate 
				NAME:pitchRate
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var yawRate  = 0
VARIABLE:var yawRate 
		KEYWORD:var
		NAME:yawRate 
				NAME:yawRate
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var joggingAngle  = 0
VARIABLE:var joggingAngle 
		KEYWORD:var
		NAME:joggingAngle 
				NAME:joggingAngle
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[CONSTRUCTOR_DECLARATION] -------> function Test_va2Drawer  (  )
KEYWORD:function
NAME:Test_va2Drawer 
		NAME:Test_va2Drawer
		IGNORED:
KEYWORD:(
METHOD_VARIABLES:
KEYWORD:)


[CLASS_DECLARATION] -------> Test_va2Drawer . prototype =
NAME:Test_va2Drawer
KEYWORD:.
KEYWORD:prototype
KEYWORD:=


[METHOD_DECLARATION] ------->  initShaders : function ( gl  )
IGNORED:
NAME:initShaders
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var shaderProgram  =  getShaderProgram  ( gl , "shaders /shader6.fs" , "shaders /shader6.vs"  )
VARIABLE:var shaderProgram 
		KEYWORD:var
		NAME:shaderProgram 
				NAME:shaderProgram
				IGNORED:
KEYWORD:=
CALL: getShaderProgram  ( gl , "shaders /shader6.fs" , "shaders /shader6.vs"  )
		IGNORED:
		SEQUENCE:getShaderProgram  ( gl , "shaders /shader6.fs" , "shaders /shader6.vs"  )
				COMPOSITE:getShaderProgram  ( gl , "shaders /shader6.fs" , "shaders /shader6.vs"  )
						COMPOSITE:getShaderProgram 
								NAME:getShaderProgram
								IGNORED:
						KEYWORD:(
						SEQUENCE:gl , "shaders /shader6.fs" , "shaders /shader6.vs" 
								EXPRESSION:gl 
										VARIABLE:gl 
												NAME:gl
												IGNORED:
								KEYWORD:, 
								EXPRESSION:"shaders /shader6.fs" 
										VARIABLE:"shaders 
												NAME:"shaders
												IGNORED:
										OPERATOR:/
										VARIABLE:shader6.fs" 
												NAME:shader6.fs"
												IGNORED:
								KEYWORD:, 
								EXPRESSION:"shaders /shader6.vs" 
										VARIABLE:"shaders 
												NAME:"shaders
												IGNORED:
										OPERATOR:/
										VARIABLE:shader6.vs" 
												NAME:shader6.vs"
												IGNORED:
						KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> vertexPositionAttribute   = gl. getAttribLocation ( shaderProgram , "aVertexPosition"  )
NAME:vertexPositionAttribute 
		NAME:vertexPositionAttribute
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getAttribLocation ( shaderProgram , "aVertexPosition"  )
		OPENGL_CALL:gl. getAttribLocation ( shaderProgram , "aVertexPosition"  )
				KEYWORD:gl.
				NAME:getAttribLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "aVertexPosition" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"aVertexPosition" 
								VARIABLE:"aVertexPosition" 
										NAME:"aVertexPosition"
										IGNORED:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enableVertexAttribArray ( vertexPositionAttribute  )
OPENGL_CALL:gl. enableVertexAttribArray ( vertexPositionAttribute  )
		KEYWORD:gl.
		NAME:enableVertexAttribArray
		KEYWORD:(
		SEQUENCE:vertexPositionAttribute 
				EXPRESSION:vertexPositionAttribute 
						VARIABLE:vertexPositionAttribute 
								NAME:vertexPositionAttribute
								IGNORED:
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> vertexNormalAttribute   = gl. getAttribLocation ( shaderProgram , "aVertexNormal"  )
NAME:vertexNormalAttribute 
		NAME:vertexNormalAttribute
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getAttribLocation ( shaderProgram , "aVertexNormal"  )
		OPENGL_CALL:gl. getAttribLocation ( shaderProgram , "aVertexNormal"  )
				KEYWORD:gl.
				NAME:getAttribLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "aVertexNormal" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"aVertexNormal" 
								VARIABLE:"aVertexNormal" 
										NAME:"aVertexNormal"
										IGNORED:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enableVertexAttribArray ( vertexNormalAttribute  )
OPENGL_CALL:gl. enableVertexAttribArray ( vertexNormalAttribute  )
		KEYWORD:gl.
		NAME:enableVertexAttribArray
		KEYWORD:(
		SEQUENCE:vertexNormalAttribute 
				EXPRESSION:vertexNormalAttribute 
						VARIABLE:vertexNormalAttribute 
								NAME:vertexNormalAttribute
								IGNORED:
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> shaderProgram.textureCoordAttribute   = gl. getAttribLocation ( shaderProgram , "aTextureCoord"  )
NAME:shaderProgram.textureCoordAttribute 
		NAME:shaderProgram.textureCoordAttribute
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getAttribLocation ( shaderProgram , "aTextureCoord"  )
		OPENGL_CALL:gl. getAttribLocation ( shaderProgram , "aTextureCoord"  )
				KEYWORD:gl.
				NAME:getAttribLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "aTextureCoord" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"aTextureCoord" 
								VARIABLE:"aTextureCoord" 
										NAME:"aTextureCoord"
										IGNORED:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enableVertexAttribArray ( textureCoordAttribute  )
OPENGL_CALL:gl. enableVertexAttribArray ( textureCoordAttribute  )
		KEYWORD:gl.
		NAME:enableVertexAttribArray
		KEYWORD:(
		SEQUENCE:textureCoordAttribute 
				EXPRESSION:textureCoordAttribute 
						VARIABLE:textureCoordAttribute 
								NAME:textureCoordAttribute
								IGNORED:
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pMatrixUniform   = gl. getUniformLocation ( shaderProgram , "uPMatrix"  )
NAME:pMatrixUniform 
		NAME:pMatrixUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uPMatrix"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uPMatrix"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uPMatrix" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uPMatrix" 
								VARIABLE:"uPMatrix" 
										NAME:"uPMatrix"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrixUniform   = gl. getUniformLocation ( shaderProgram , "uMVMatrix"  )
NAME:mvMatrixUniform 
		NAME:mvMatrixUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uMVMatrix"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uMVMatrix"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uMVMatrix" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uMVMatrix" 
								VARIABLE:"uMVMatrix" 
										NAME:"uMVMatrix"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> nMatrixUniform   = gl. getUniformLocation ( shaderProgram , "uNMatrix"  )
NAME:nMatrixUniform 
		NAME:nMatrixUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uNMatrix"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uNMatrix"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uNMatrix" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uNMatrix" 
								VARIABLE:"uNMatrix" 
										NAME:"uNMatrix"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> samplerUniform   = gl. getUniformLocation ( shaderProgram , "uSampler"  )
NAME:samplerUniform 
		NAME:samplerUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uSampler"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uSampler"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uSampler" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uSampler" 
								VARIABLE:"uSampler" 
										NAME:"uSampler"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> ambientColorUniform   = gl. getUniformLocation ( shaderProgram , "uAmbientColor"  )
NAME:ambientColorUniform 
		NAME:ambientColorUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uAmbientColor"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uAmbientColor"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uAmbientColor" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uAmbientColor" 
								VARIABLE:"uAmbientColor" 
										NAME:"uAmbientColor"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pointLightingLocationUniform   = gl. getUniformLocation ( shaderProgram , "uPointLightingLocation"  )
NAME:pointLightingLocationUniform 
		NAME:pointLightingLocationUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uPointLightingLocation"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uPointLightingLocation"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uPointLightingLocation" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uPointLightingLocation" 
								VARIABLE:"uPointLightingLocation" 
										NAME:"uPointLightingLocation"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pointLightingSpecularColorUniform   = gl. getUniformLocation ( shaderProgram , "uPointLightingSpecularColor"  )
NAME:pointLightingSpecularColorUniform 
		NAME:pointLightingSpecularColorUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uPointLightingSpecularColor"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uPointLightingSpecularColor"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uPointLightingSpecularColor" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uPointLightingSpecularColor" 
								VARIABLE:"uPointLightingSpecularColor" 
										NAME:"uPointLightingSpecularColor"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pointLightingDiffuseColorUniform   = gl. getUniformLocation ( shaderProgram , "uPointLightingDiffuseColor"  )
NAME:pointLightingDiffuseColorUniform 
		NAME:pointLightingDiffuseColorUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uPointLightingDiffuseColor"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uPointLightingDiffuseColor"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uPointLightingDiffuseColor" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uPointLightingDiffuseColor" 
								VARIABLE:"uPointLightingDiffuseColor" 
										NAME:"uPointLightingDiffuseColor"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> materialShininessUniform   = gl. getUniformLocation ( shaderProgram , "uMaterialShininess"  )
NAME:materialShininessUniform 
		NAME:materialShininessUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uMaterialShininess"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uMaterialShininess"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uMaterialShininess" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uMaterialShininess" 
								VARIABLE:"uMaterialShininess" 
										NAME:"uMaterialShininess"
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> alphaUniform   = gl. getUniformLocation ( shaderProgram , "uAlpha"  )
NAME:alphaUniform 
		NAME:alphaUniform
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:gl. getUniformLocation ( shaderProgram , "uAlpha"  )
		OPENGL_CALL:gl. getUniformLocation ( shaderProgram , "uAlpha"  )
				KEYWORD:gl.
				NAME:getUniformLocation
				KEYWORD:(
				SEQUENCE:shaderProgram , "uAlpha" 
						EXPRESSION:shaderProgram 
								VARIABLE:shaderProgram 
										NAME:shaderProgram
										IGNORED:
						KEYWORD:, 
						EXPRESSION:"uAlpha" 
								VARIABLE:"uAlpha" 
										NAME:"uAlpha"
										IGNORED:
				KEYWORD:)


[METHOD_DECLARATION] -------> , setMatrixUniforms : function ( gl  )
KEYWORD:,
NAME:setMatrixUniforms
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniformMatrix4fv ( pMatrixUniform , false , pMatrix  )
OPENGL_CALL:gl. uniformMatrix4fv ( pMatrixUniform , false , pMatrix  )
		KEYWORD:gl.
		NAME:uniformMatrix4fv
		KEYWORD:(
		SEQUENCE:pMatrixUniform , false , pMatrix 
				EXPRESSION:pMatrixUniform 
						VARIABLE:pMatrixUniform 
								NAME:pMatrixUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:pMatrix 
						VARIABLE:pMatrix 
								NAME:pMatrix
								IGNORED:
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniformMatrix4fv ( mvMatrixUniform , false , mvMatrix  )
OPENGL_CALL:gl. uniformMatrix4fv ( mvMatrixUniform , false , mvMatrix  )
		KEYWORD:gl.
		NAME:uniformMatrix4fv
		KEYWORD:(
		SEQUENCE:mvMatrixUniform , false , mvMatrix 
				EXPRESSION:mvMatrixUniform 
						VARIABLE:mvMatrixUniform 
								NAME:mvMatrixUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:mvMatrix 
						VARIABLE:mvMatrix 
								NAME:mvMatrix
								IGNORED:
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniformMatrix3fv ( nMatrixUniform , false , normalMatrix  )
OPENGL_CALL:gl. uniformMatrix3fv ( nMatrixUniform , false , normalMatrix  )
		KEYWORD:gl.
		NAME:uniformMatrix3fv
		KEYWORD:(
		SEQUENCE:nMatrixUniform , false , normalMatrix 
				EXPRESSION:nMatrixUniform 
						VARIABLE:nMatrixUniform 
								NAME:nMatrixUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:normalMatrix 
						VARIABLE:normalMatrix 
								NAME:normalMatrix
								IGNORED:
		KEYWORD:)


[METHOD_DECLARATION] -------> , initBuffers : function ( gl  )
KEYWORD:,
NAME:initBuffers
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pyramidVertexPositionBuffer [ 0 ]  = gl. createBuffer (  )
NAME:pyramidVertexPositionBuffer [ 0 ]
		NAME:pyramidVertexPositionBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, pyramidVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, pyramidVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, pyramidVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:pyramidVertexPositionBuffer [ 0 ]
						VARIABLE:pyramidVertexPositionBuffer [ 0 ]
								NAME:pyramidVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var vertices1  = [ 0.0,1.0,0.0,-1.0,-1.0,-1.0,-1.0,-1.0,1.0,0.0,1.0,0.0,-1.0,-1.0,-1.0,1.0,-1.0,-1.0,0.0,1.0,0.0,-1.0,-1.0,1.0,1.0,-1.0,1.0,0.0,1.0,0.0,1.0,-1.0,1.0,1.0,-1.0,-1.0 ]
VARIABLE:var vertices1 
		KEYWORD:var
		NAME:vertices1 
				NAME:vertices1
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ 0.0,1.0,0.0,-1.0,-1.0,-1.0,-1.0,-1.0,1.0,0.0,1.0,0.0,-1.0,-1.0,-1.0,1.0,-1.0,-1.0,0.0,1.0,0.0,-1.0,-1.0,1.0,1.0,-1.0,1.0,0.0,1.0,0.0,1.0,-1.0,1.0,1.0,-1.0,-1.0 ]
		KEYWORD:[
		SEQUENCE:0.0,1.0,0.0,-1.0,-1.0,-1.0,-1.0,-1.0,1.0,0.0,1.0,0.0,-1.0,-1.0,-1.0,1.0,-1.0,-1.0,0.0,1.0,0.0,-1.0,-1.0,1.0,1.0,-1.0,1.0,0.0,1.0,0.0,1.0,-1.0,1.0,1.0,-1.0,-1.0
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( vertices1  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( vertices1  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( vertices1  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( vertices1  )
						NEW_STATEMENT:new  Float32Array  ( vertices1  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( vertices1  )
										KEYWORD:(
										SEQUENCE:vertices1 
												EXPRESSION:vertices1 
														VARIABLE:vertices1 
																NAME:vertices1
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pyramidVertexPositionBuffer [ 1 ]  = 3
NAME:pyramidVertexPositionBuffer [ 1 ]
		NAME:pyramidVertexPositionBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:3
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pyramidVertexPositionBuffer [ 2 ]  = 12
NAME:pyramidVertexPositionBuffer [ 2 ]
		NAME:pyramidVertexPositionBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:12
		VALUE:12


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pyramidVertexNormalBuffer [ 0 ]  = gl. createBuffer (  )
NAME:pyramidVertexNormalBuffer [ 0 ]
		NAME:pyramidVertexNormalBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, pyramidVertexNormalBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, pyramidVertexNormalBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, pyramidVertexNormalBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:pyramidVertexNormalBuffer [ 0 ]
						VARIABLE:pyramidVertexNormalBuffer [ 0 ]
								NAME:pyramidVertexNormalBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var normals1  = [ -0.89442719099991587856366946749251,0.44721359549995793928183473374626,0.0,-0.89442719099991587856366946749251,0.44721359549995793928183473374626,0.0,-0.89442719099991587856366946749251,0.44721359549995793928183473374626,0.0,0.0,0.44721359549995793928183473374626,-0.89442719099991587856366946749251,0.0,0.44721359549995793928183473374626,-0.89442719099991587856366946749251,0.0,0.44721359549995793928183473374626,-0.89442719099991587856366946749251,0.0,0.44721359549995793928183473374626,0.89442719099991587856366946749251,0.0,0.44721359549995793928183473374626,0.89442719099991587856366946749251,0.0,0.44721359549995793928183473374626,0.89442719099991587856366946749251,0.89442719099991587856366946749251,0.44721359549995793928183473374626,0.0,0.89442719099991587856366946749251,0.44721359549995793928183473374626,0.0,0.89442719099991587856366946749251,0.44721359549995793928183473374626,0.0 ]
VARIABLE:var normals1 
		KEYWORD:var
		NAME:normals1 
				NAME:normals1
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ -0.89442719099991587856366946749251,0.44721359549995793928183473374626,0.0,-0.89442719099991587856366946749251,0.44721359549995793928183473374626,0.0,-0.89442719099991587856366946749251,0.44721359549995793928183473374626,0.0,0.0,0.44721359549995793928183473374626,-0.89442719099991587856366946749251,0.0,0.44721359549995793928183473374626,-0.89442719099991587856366946749251,0.0,0.44721359549995793928183473374626,-0.89442719099991587856366946749251,0.0,0.44721359549995793928183473374626,0.89442719099991587856366946749251,0.0,0.44721359549995793928183473374626,0.89442719099991587856366946749251,0.0,0.44721359549995793928183473374626,0.89442719099991587856366946749251,0.89442719099991587856366946749251,0.44721359549995793928183473374626,0.0,0.89442719099991587856366946749251,0.44721359549995793928183473374626,0.0,0.89442719099991587856366946749251,0.44721359549995793928183473374626,0.0 ]
		KEYWORD:[
		SEQUENCE:-0.89442719099991587856366946749251,0.44721359549995793928183473374626,0.0,-0.89442719099991587856366946749251,0.44721359549995793928183473374626,0.0,-0.89442719099991587856366946749251,0.44721359549995793928183473374626,0.0,0.0,0.44721359549995793928183473374626,-0.89442719099991587856366946749251,0.0,0.44721359549995793928183473374626,-0.89442719099991587856366946749251,0.0,0.44721359549995793928183473374626,-0.89442719099991587856366946749251,0.0,0.44721359549995793928183473374626,0.89442719099991587856366946749251,0.0,0.44721359549995793928183473374626,0.89442719099991587856366946749251,0.0,0.44721359549995793928183473374626,0.89442719099991587856366946749251,0.89442719099991587856366946749251,0.44721359549995793928183473374626,0.0,0.89442719099991587856366946749251,0.44721359549995793928183473374626,0.0,0.89442719099991587856366946749251,0.44721359549995793928183473374626,0.0
				EXPRESSION:-0.89442719099991587856366946749251
						VALUE:-0.89442719099991587856366946749251
				KEYWORD:,
				EXPRESSION:0.44721359549995793928183473374626
						VALUE:0.44721359549995793928183473374626
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:-0.89442719099991587856366946749251
						VALUE:-0.89442719099991587856366946749251
				KEYWORD:,
				EXPRESSION:0.44721359549995793928183473374626
						VALUE:0.44721359549995793928183473374626
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:-0.89442719099991587856366946749251
						VALUE:-0.89442719099991587856366946749251
				KEYWORD:,
				EXPRESSION:0.44721359549995793928183473374626
						VALUE:0.44721359549995793928183473374626
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.44721359549995793928183473374626
						VALUE:0.44721359549995793928183473374626
				KEYWORD:,
				EXPRESSION:-0.89442719099991587856366946749251
						VALUE:-0.89442719099991587856366946749251
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.44721359549995793928183473374626
						VALUE:0.44721359549995793928183473374626
				KEYWORD:,
				EXPRESSION:-0.89442719099991587856366946749251
						VALUE:-0.89442719099991587856366946749251
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.44721359549995793928183473374626
						VALUE:0.44721359549995793928183473374626
				KEYWORD:,
				EXPRESSION:-0.89442719099991587856366946749251
						VALUE:-0.89442719099991587856366946749251
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.44721359549995793928183473374626
						VALUE:0.44721359549995793928183473374626
				KEYWORD:,
				EXPRESSION:0.89442719099991587856366946749251
						VALUE:0.89442719099991587856366946749251
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.44721359549995793928183473374626
						VALUE:0.44721359549995793928183473374626
				KEYWORD:,
				EXPRESSION:0.89442719099991587856366946749251
						VALUE:0.89442719099991587856366946749251
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.44721359549995793928183473374626
						VALUE:0.44721359549995793928183473374626
				KEYWORD:,
				EXPRESSION:0.89442719099991587856366946749251
						VALUE:0.89442719099991587856366946749251
				KEYWORD:,
				EXPRESSION:0.89442719099991587856366946749251
						VALUE:0.89442719099991587856366946749251
				KEYWORD:,
				EXPRESSION:0.44721359549995793928183473374626
						VALUE:0.44721359549995793928183473374626
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.89442719099991587856366946749251
						VALUE:0.89442719099991587856366946749251
				KEYWORD:,
				EXPRESSION:0.44721359549995793928183473374626
						VALUE:0.44721359549995793928183473374626
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.89442719099991587856366946749251
						VALUE:0.89442719099991587856366946749251
				KEYWORD:,
				EXPRESSION:0.44721359549995793928183473374626
						VALUE:0.44721359549995793928183473374626
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( normals1  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( normals1  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( normals1  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( normals1  )
						NEW_STATEMENT:new  Float32Array  ( normals1  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( normals1  )
										KEYWORD:(
										SEQUENCE:normals1 
												EXPRESSION:normals1 
														VARIABLE:normals1 
																NAME:normals1
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pyramidVertexNormalBuffer [ 1 ]  = 3
NAME:pyramidVertexNormalBuffer [ 1 ]
		NAME:pyramidVertexNormalBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:3
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pyramidVertexNormalBuffer [ 2 ]  = 12
NAME:pyramidVertexNormalBuffer [ 2 ]
		NAME:pyramidVertexNormalBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:12
		VALUE:12


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pyramidVertexTextureCoordBuffer [ 0 ]  = gl. createBuffer (  )
NAME:pyramidVertexTextureCoordBuffer [ 0 ]
		NAME:pyramidVertexTextureCoordBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, pyramidVertexTextureCoordBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, pyramidVertexTextureCoordBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, pyramidVertexTextureCoordBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:pyramidVertexTextureCoordBuffer [ 0 ]
						VARIABLE:pyramidVertexTextureCoordBuffer [ 0 ]
								NAME:pyramidVertexTextureCoordBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var textureCoords1  = [ 3.0,0.0,0.0,6.0,6.0,6.0,3.0,0.0,0.0,6.0,6.0,6.0,3.0,0.0,6.0,6.0,0.0,6.0,3.0,0.0,0.0,6.0,6.0,6.0 ]
VARIABLE:var textureCoords1 
		KEYWORD:var
		NAME:textureCoords1 
				NAME:textureCoords1
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ 3.0,0.0,0.0,6.0,6.0,6.0,3.0,0.0,0.0,6.0,6.0,6.0,3.0,0.0,6.0,6.0,0.0,6.0,3.0,0.0,0.0,6.0,6.0,6.0 ]
		KEYWORD:[
		SEQUENCE:3.0,0.0,0.0,6.0,6.0,6.0,3.0,0.0,0.0,6.0,6.0,6.0,3.0,0.0,6.0,6.0,0.0,6.0,3.0,0.0,0.0,6.0,6.0,6.0
				EXPRESSION:3.0
						VALUE:3.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:6.0
						VALUE:6.0
				KEYWORD:,
				EXPRESSION:6.0
						VALUE:6.0
				KEYWORD:,
				EXPRESSION:6.0
						VALUE:6.0
				KEYWORD:,
				EXPRESSION:3.0
						VALUE:3.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:6.0
						VALUE:6.0
				KEYWORD:,
				EXPRESSION:6.0
						VALUE:6.0
				KEYWORD:,
				EXPRESSION:6.0
						VALUE:6.0
				KEYWORD:,
				EXPRESSION:3.0
						VALUE:3.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:6.0
						VALUE:6.0
				KEYWORD:,
				EXPRESSION:6.0
						VALUE:6.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:6.0
						VALUE:6.0
				KEYWORD:,
				EXPRESSION:3.0
						VALUE:3.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:6.0
						VALUE:6.0
				KEYWORD:,
				EXPRESSION:6.0
						VALUE:6.0
				KEYWORD:,
				EXPRESSION:6.0
						VALUE:6.0
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( textureCoords1  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( textureCoords1  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( textureCoords1  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( textureCoords1  )
						NEW_STATEMENT:new  Float32Array  ( textureCoords1  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( textureCoords1  )
										KEYWORD:(
										SEQUENCE:textureCoords1 
												EXPRESSION:textureCoords1 
														VARIABLE:textureCoords1 
																NAME:textureCoords1
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pyramidVertexTextureCoordBuffer [ 1 ]  = 2
NAME:pyramidVertexTextureCoordBuffer [ 1 ]
		NAME:pyramidVertexTextureCoordBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:2
		VALUE:2


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pyramidVertexTextureCoordBuffer [ 2 ]  = 12
NAME:pyramidVertexTextureCoordBuffer [ 2 ]
		NAME:pyramidVertexTextureCoordBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:12
		VALUE:12


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pyramidVertexIndexBuffer [ 0 ]  = gl. createBuffer (  )
NAME:pyramidVertexIndexBuffer [ 0 ]
		NAME:pyramidVertexIndexBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, pyramidVertexIndexBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, pyramidVertexIndexBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ELEMENT_ARRAY_BUFFER, pyramidVertexIndexBuffer [ 0 ]
				EXPRESSION:gl. ELEMENT_ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ELEMENT_ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ELEMENT_ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:pyramidVertexIndexBuffer [ 0 ]
						VARIABLE:pyramidVertexIndexBuffer [ 0 ]
								NAME:pyramidVertexIndexBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cubeVertexIndices  = [ 0,1,2,3,5,4,6,7,8,9,10,11 ]
VARIABLE:var cubeVertexIndices 
		KEYWORD:var
		NAME:cubeVertexIndices 
				NAME:cubeVertexIndices
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ 0,1,2,3,5,4,6,7,8,9,10,11 ]
		KEYWORD:[
		SEQUENCE:0,1,2,3,5,4,6,7,8,9,10,11
				EXPRESSION:0
						VALUE:0
				KEYWORD:,
				EXPRESSION:1
						VALUE:1
				KEYWORD:,
				EXPRESSION:2
						VALUE:2
				KEYWORD:,
				EXPRESSION:3
						VALUE:3
				KEYWORD:,
				EXPRESSION:5
						VALUE:5
				KEYWORD:,
				EXPRESSION:4
						VALUE:4
				KEYWORD:,
				EXPRESSION:6
						VALUE:6
				KEYWORD:,
				EXPRESSION:7
						VALUE:7
				KEYWORD:,
				EXPRESSION:8
						VALUE:8
				KEYWORD:,
				EXPRESSION:9
						VALUE:9
				KEYWORD:,
				EXPRESSION:10
						VALUE:10
				KEYWORD:,
				EXPRESSION:11
						VALUE:11
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ELEMENT_ARRAY_BUFFER, new  Uint16Array  ( cubeVertexIndices  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ELEMENT_ARRAY_BUFFER, new  Uint16Array  ( cubeVertexIndices  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ELEMENT_ARRAY_BUFFER, new  Uint16Array  ( cubeVertexIndices  ), gl. STATIC_DRAW
				EXPRESSION:gl. ELEMENT_ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ELEMENT_ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ELEMENT_ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Uint16Array  ( cubeVertexIndices  )
						NEW_STATEMENT:new  Uint16Array  ( cubeVertexIndices  )
								KEYWORD:new 
								VARIABLE:Uint16Array 
										NAME:Uint16Array
										IGNORED:
								COMPOSITE:( cubeVertexIndices  )
										KEYWORD:(
										SEQUENCE:cubeVertexIndices 
												EXPRESSION:cubeVertexIndices 
														VARIABLE:cubeVertexIndices 
																NAME:cubeVertexIndices
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pyramidVertexIndexBuffer [ 1 ]  = 1
NAME:pyramidVertexIndexBuffer [ 1 ]
		NAME:pyramidVertexIndexBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:1
		VALUE:1


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pyramidVertexIndexBuffer [ 2 ]  = 12
NAME:pyramidVertexIndexBuffer [ 2 ]
		NAME:pyramidVertexIndexBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:12
		VALUE:12


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexPositionBuffer [ 0 ]  = gl. createBuffer (  )
NAME:cubeVertexPositionBuffer [ 0 ]
		NAME:cubeVertexPositionBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, cubeVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:cubeVertexPositionBuffer [ 0 ]
						VARIABLE:cubeVertexPositionBuffer [ 0 ]
								NAME:cubeVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var vertices2  = [ -1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,1.0,1.0,-1.0,1.0,1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,-1.0,1.0,-1.0,-1.0,1.0,-1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,1.0,1.0,-1.0,1.0,-1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,-1.0,1.0,-1.0 ]
VARIABLE:var vertices2 
		KEYWORD:var
		NAME:vertices2 
				NAME:vertices2
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ -1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,1.0,1.0,-1.0,1.0,1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,-1.0,1.0,-1.0,-1.0,1.0,-1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,1.0,1.0,-1.0,1.0,-1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,-1.0,1.0,-1.0 ]
		KEYWORD:[
		SEQUENCE:-1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,1.0,1.0,-1.0,1.0,1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,-1.0,1.0,-1.0,-1.0,1.0,-1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,1.0,1.0,-1.0,1.0,-1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,-1.0,1.0,-1.0
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( vertices2  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( vertices2  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( vertices2  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( vertices2  )
						NEW_STATEMENT:new  Float32Array  ( vertices2  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( vertices2  )
										KEYWORD:(
										SEQUENCE:vertices2 
												EXPRESSION:vertices2 
														VARIABLE:vertices2 
																NAME:vertices2
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexPositionBuffer [ 1 ]  = 3
NAME:cubeVertexPositionBuffer [ 1 ]
		NAME:cubeVertexPositionBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:3
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexPositionBuffer [ 2 ]  = 16
NAME:cubeVertexPositionBuffer [ 2 ]
		NAME:cubeVertexPositionBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:16
		VALUE:16


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexNormalBuffer [ 0 ]  = gl. createBuffer (  )
NAME:cubeVertexNormalBuffer [ 0 ]
		NAME:cubeVertexNormalBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexNormalBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexNormalBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, cubeVertexNormalBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:cubeVertexNormalBuffer [ 0 ]
						VARIABLE:cubeVertexNormalBuffer [ 0 ]
								NAME:cubeVertexNormalBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var normals2  = [ 0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0 ]
VARIABLE:var normals2 
		KEYWORD:var
		NAME:normals2 
				NAME:normals2
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ 0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0 ]
		KEYWORD:[
		SEQUENCE:0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0,-1.0,0.0,0.0
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( normals2  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( normals2  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( normals2  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( normals2  )
						NEW_STATEMENT:new  Float32Array  ( normals2  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( normals2  )
										KEYWORD:(
										SEQUENCE:normals2 
												EXPRESSION:normals2 
														VARIABLE:normals2 
																NAME:normals2
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexNormalBuffer [ 1 ]  = 3
NAME:cubeVertexNormalBuffer [ 1 ]
		NAME:cubeVertexNormalBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:3
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexNormalBuffer [ 2 ]  = 16
NAME:cubeVertexNormalBuffer [ 2 ]
		NAME:cubeVertexNormalBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:16
		VALUE:16


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexTextureCoordBuffer [ 0 ]  = gl. createBuffer (  )
NAME:cubeVertexTextureCoordBuffer [ 0 ]
		NAME:cubeVertexTextureCoordBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexTextureCoordBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexTextureCoordBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, cubeVertexTextureCoordBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:cubeVertexTextureCoordBuffer [ 0 ]
						VARIABLE:cubeVertexTextureCoordBuffer [ 0 ]
								NAME:cubeVertexTextureCoordBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var textureCoords2  = [ 0.0,0.0,10.0,0.0,10.0,10.0,0.0,10.0,10.0,0.0,10.0,10.0,0.0,10.0,0.0,0.0,10.0,0.0,10.0,10.0,0.0,10.0,0.0,0.0,0.0,0.0,10.0,0.0,10.0,10.0,0.0,10.0 ]
VARIABLE:var textureCoords2 
		KEYWORD:var
		NAME:textureCoords2 
				NAME:textureCoords2
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ 0.0,0.0,10.0,0.0,10.0,10.0,0.0,10.0,10.0,0.0,10.0,10.0,0.0,10.0,0.0,0.0,10.0,0.0,10.0,10.0,0.0,10.0,0.0,0.0,0.0,0.0,10.0,0.0,10.0,10.0,0.0,10.0 ]
		KEYWORD:[
		SEQUENCE:0.0,0.0,10.0,0.0,10.0,10.0,0.0,10.0,10.0,0.0,10.0,10.0,0.0,10.0,0.0,0.0,10.0,0.0,10.0,10.0,0.0,10.0,0.0,0.0,0.0,0.0,10.0,0.0,10.0,10.0,0.0,10.0
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( textureCoords2  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( textureCoords2  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( textureCoords2  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( textureCoords2  )
						NEW_STATEMENT:new  Float32Array  ( textureCoords2  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( textureCoords2  )
										KEYWORD:(
										SEQUENCE:textureCoords2 
												EXPRESSION:textureCoords2 
														VARIABLE:textureCoords2 
																NAME:textureCoords2
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexTextureCoordBuffer [ 1 ]  = 2
NAME:cubeVertexTextureCoordBuffer [ 1 ]
		NAME:cubeVertexTextureCoordBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:2
		VALUE:2


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexTextureCoordBuffer [ 2 ]  = 16
NAME:cubeVertexTextureCoordBuffer [ 2 ]
		NAME:cubeVertexTextureCoordBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:16
		VALUE:16


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexIndexBuffer [ 0 ]  = gl. createBuffer (  )
NAME:cubeVertexIndexBuffer [ 0 ]
		NAME:cubeVertexIndexBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, cubeVertexIndexBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, cubeVertexIndexBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ELEMENT_ARRAY_BUFFER, cubeVertexIndexBuffer [ 0 ]
				EXPRESSION:gl. ELEMENT_ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ELEMENT_ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ELEMENT_ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:cubeVertexIndexBuffer [ 0 ]
						VARIABLE:cubeVertexIndexBuffer [ 0 ]
								NAME:cubeVertexIndexBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cubeVertexIndices  = [ 0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15 ]
VARIABLE:var cubeVertexIndices 
		KEYWORD:var
		NAME:cubeVertexIndices 
				NAME:cubeVertexIndices
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ 0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15 ]
		KEYWORD:[
		SEQUENCE:0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15
				EXPRESSION:0
						VALUE:0
				KEYWORD:,
				EXPRESSION:1
						VALUE:1
				KEYWORD:,
				EXPRESSION:2
						VALUE:2
				KEYWORD:,
				EXPRESSION:0
						VALUE:0
				KEYWORD:,
				EXPRESSION:2
						VALUE:2
				KEYWORD:,
				EXPRESSION:3
						VALUE:3
				KEYWORD:,
				EXPRESSION:4
						VALUE:4
				KEYWORD:,
				EXPRESSION:5
						VALUE:5
				KEYWORD:,
				EXPRESSION:6
						VALUE:6
				KEYWORD:,
				EXPRESSION:4
						VALUE:4
				KEYWORD:,
				EXPRESSION:6
						VALUE:6
				KEYWORD:,
				EXPRESSION:7
						VALUE:7
				KEYWORD:,
				EXPRESSION:8
						VALUE:8
				KEYWORD:,
				EXPRESSION:9
						VALUE:9
				KEYWORD:,
				EXPRESSION:10
						VALUE:10
				KEYWORD:,
				EXPRESSION:8
						VALUE:8
				KEYWORD:,
				EXPRESSION:10
						VALUE:10
				KEYWORD:,
				EXPRESSION:11
						VALUE:11
				KEYWORD:,
				EXPRESSION:12
						VALUE:12
				KEYWORD:,
				EXPRESSION:13
						VALUE:13
				KEYWORD:,
				EXPRESSION:14
						VALUE:14
				KEYWORD:,
				EXPRESSION:12
						VALUE:12
				KEYWORD:,
				EXPRESSION:14
						VALUE:14
				KEYWORD:,
				EXPRESSION:15
						VALUE:15
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ELEMENT_ARRAY_BUFFER, new  Uint16Array  ( cubeVertexIndices  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ELEMENT_ARRAY_BUFFER, new  Uint16Array  ( cubeVertexIndices  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ELEMENT_ARRAY_BUFFER, new  Uint16Array  ( cubeVertexIndices  ), gl. STATIC_DRAW
				EXPRESSION:gl. ELEMENT_ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ELEMENT_ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ELEMENT_ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Uint16Array  ( cubeVertexIndices  )
						NEW_STATEMENT:new  Uint16Array  ( cubeVertexIndices  )
								KEYWORD:new 
								VARIABLE:Uint16Array 
										NAME:Uint16Array
										IGNORED:
								COMPOSITE:( cubeVertexIndices  )
										KEYWORD:(
										SEQUENCE:cubeVertexIndices 
												EXPRESSION:cubeVertexIndices 
														VARIABLE:cubeVertexIndices 
																NAME:cubeVertexIndices
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexIndexBuffer [ 1 ]  = 1
NAME:cubeVertexIndexBuffer [ 1 ]
		NAME:cubeVertexIndexBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:1
		VALUE:1


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexIndexBuffer [ 2 ]  = 24
NAME:cubeVertexIndexBuffer [ 2 ]
		NAME:cubeVertexIndexBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:24
		VALUE:24


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> greenVertexPositionBuffer [ 0 ]  = gl. createBuffer (  )
NAME:greenVertexPositionBuffer [ 0 ]
		NAME:greenVertexPositionBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, greenVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, greenVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, greenVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:greenVertexPositionBuffer [ 0 ]
						VARIABLE:greenVertexPositionBuffer [ 0 ]
								NAME:greenVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var vertices3  = [ -1.0,-1.0,-1.0,-1.0,-1.0,1.0,1.0,-1.0,-1.0,1.0,-1.0,1.0 ]
VARIABLE:var vertices3 
		KEYWORD:var
		NAME:vertices3 
				NAME:vertices3
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ -1.0,-1.0,-1.0,-1.0,-1.0,1.0,1.0,-1.0,-1.0,1.0,-1.0,1.0 ]
		KEYWORD:[
		SEQUENCE:-1.0,-1.0,-1.0,-1.0,-1.0,1.0,1.0,-1.0,-1.0,1.0,-1.0,1.0
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( vertices3  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( vertices3  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( vertices3  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( vertices3  )
						NEW_STATEMENT:new  Float32Array  ( vertices3  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( vertices3  )
										KEYWORD:(
										SEQUENCE:vertices3 
												EXPRESSION:vertices3 
														VARIABLE:vertices3 
																NAME:vertices3
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> greenVertexPositionBuffer [ 1 ]  = 3
NAME:greenVertexPositionBuffer [ 1 ]
		NAME:greenVertexPositionBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:3
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> greenVertexPositionBuffer [ 2 ]  = 4
NAME:greenVertexPositionBuffer [ 2 ]
		NAME:greenVertexPositionBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:4
		VALUE:4


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> greenVertexNormalBuffer [ 0 ]  = gl. createBuffer (  )
NAME:greenVertexNormalBuffer [ 0 ]
		NAME:greenVertexNormalBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, greenVertexNormalBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, greenVertexNormalBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, greenVertexNormalBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:greenVertexNormalBuffer [ 0 ]
						VARIABLE:greenVertexNormalBuffer [ 0 ]
								NAME:greenVertexNormalBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var normals3  = [ 0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0 ]
VARIABLE:var normals3 
		KEYWORD:var
		NAME:normals3 
				NAME:normals3
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ 0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0 ]
		KEYWORD:[
		SEQUENCE:0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( normals3  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( normals3  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( normals3  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( normals3  )
						NEW_STATEMENT:new  Float32Array  ( normals3  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( normals3  )
										KEYWORD:(
										SEQUENCE:normals3 
												EXPRESSION:normals3 
														VARIABLE:normals3 
																NAME:normals3
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> greenVertexNormalBuffer [ 1 ]  = 3
NAME:greenVertexNormalBuffer [ 1 ]
		NAME:greenVertexNormalBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:3
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> greenVertexNormalBuffer [ 2 ]  = 4
NAME:greenVertexNormalBuffer [ 2 ]
		NAME:greenVertexNormalBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:4
		VALUE:4


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> greenVertexTextureCoordBuffer [ 0 ]  = gl. createBuffer (  )
NAME:greenVertexTextureCoordBuffer [ 0 ]
		NAME:greenVertexTextureCoordBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, greenVertexTextureCoordBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, greenVertexTextureCoordBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, greenVertexTextureCoordBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:greenVertexTextureCoordBuffer [ 0 ]
						VARIABLE:greenVertexTextureCoordBuffer [ 0 ]
								NAME:greenVertexTextureCoordBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var textureCoords3  = [ 0.0,10.0,0.0,0.0,10.0,0.0,10.0,10.0 ]
VARIABLE:var textureCoords3 
		KEYWORD:var
		NAME:textureCoords3 
				NAME:textureCoords3
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ 0.0,10.0,0.0,0.0,10.0,0.0,10.0,10.0 ]
		KEYWORD:[
		SEQUENCE:0.0,10.0,0.0,0.0,10.0,0.0,10.0,10.0
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
				KEYWORD:,
				EXPRESSION:10.0
						VALUE:10.0
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( textureCoords3  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( textureCoords3  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( textureCoords3  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( textureCoords3  )
						NEW_STATEMENT:new  Float32Array  ( textureCoords3  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( textureCoords3  )
										KEYWORD:(
										SEQUENCE:textureCoords3 
												EXPRESSION:textureCoords3 
														VARIABLE:textureCoords3 
																NAME:textureCoords3
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> greenVertexTextureCoordBuffer [ 1 ]  = 2
NAME:greenVertexTextureCoordBuffer [ 1 ]
		NAME:greenVertexTextureCoordBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:2
		VALUE:2


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> greenVertexTextureCoordBuffer [ 2 ]  = 4
NAME:greenVertexTextureCoordBuffer [ 2 ]
		NAME:greenVertexTextureCoordBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:4
		VALUE:4


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> doorVertexPositionBuffer [ 0 ]  = gl. createBuffer (  )
NAME:doorVertexPositionBuffer [ 0 ]
		NAME:doorVertexPositionBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, doorVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, doorVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, doorVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:doorVertexPositionBuffer [ 0 ]
						VARIABLE:doorVertexPositionBuffer [ 0 ]
								NAME:doorVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var vertices4  = [ -0.2,-1.0,1.001,0.2,-1.0,1.001,-0.2,0.0,1.001,0.2,0.0,1.001 ]
VARIABLE:var vertices4 
		KEYWORD:var
		NAME:vertices4 
				NAME:vertices4
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ -0.2,-1.0,1.001,0.2,-1.0,1.001,-0.2,0.0,1.001,0.2,0.0,1.001 ]
		KEYWORD:[
		SEQUENCE:-0.2,-1.0,1.001,0.2,-1.0,1.001,-0.2,0.0,1.001,0.2,0.0,1.001
				EXPRESSION:-0.2
						VALUE:-0.2
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.001
						VALUE:1.001
				KEYWORD:,
				EXPRESSION:0.2
						VALUE:0.2
				KEYWORD:,
				EXPRESSION:-1.0
						VALUE:-1.0
				KEYWORD:,
				EXPRESSION:1.001
						VALUE:1.001
				KEYWORD:,
				EXPRESSION:-0.2
						VALUE:-0.2
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.001
						VALUE:1.001
				KEYWORD:,
				EXPRESSION:0.2
						VALUE:0.2
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.001
						VALUE:1.001
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( vertices4  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( vertices4  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( vertices4  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( vertices4  )
						NEW_STATEMENT:new  Float32Array  ( vertices4  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( vertices4  )
										KEYWORD:(
										SEQUENCE:vertices4 
												EXPRESSION:vertices4 
														VARIABLE:vertices4 
																NAME:vertices4
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> doorVertexPositionBuffer [ 1 ]  = 3
NAME:doorVertexPositionBuffer [ 1 ]
		NAME:doorVertexPositionBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:3
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> doorVertexPositionBuffer [ 2 ]  = 4
NAME:doorVertexPositionBuffer [ 2 ]
		NAME:doorVertexPositionBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:4
		VALUE:4


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> doorVertexNormalBuffer [ 0 ]  = gl. createBuffer (  )
NAME:doorVertexNormalBuffer [ 0 ]
		NAME:doorVertexNormalBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, doorVertexNormalBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, doorVertexNormalBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, doorVertexNormalBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:doorVertexNormalBuffer [ 0 ]
						VARIABLE:doorVertexNormalBuffer [ 0 ]
								NAME:doorVertexNormalBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var normals4  = [ 0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0 ]
VARIABLE:var normals4 
		KEYWORD:var
		NAME:normals4 
				NAME:normals4
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ 0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0 ]
		KEYWORD:[
		SEQUENCE:0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( normals4  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( normals4  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( normals4  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( normals4  )
						NEW_STATEMENT:new  Float32Array  ( normals4  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( normals4  )
										KEYWORD:(
										SEQUENCE:normals4 
												EXPRESSION:normals4 
														VARIABLE:normals4 
																NAME:normals4
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> doorVertexNormalBuffer [ 1 ]  = 3
NAME:doorVertexNormalBuffer [ 1 ]
		NAME:doorVertexNormalBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:3
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> doorVertexNormalBuffer [ 2 ]  = 4
NAME:doorVertexNormalBuffer [ 2 ]
		NAME:doorVertexNormalBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:4
		VALUE:4


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> doorVertexTextureCoordBuffer [ 0 ]  = gl. createBuffer (  )
NAME:doorVertexTextureCoordBuffer [ 0 ]
		NAME:doorVertexTextureCoordBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, doorVertexTextureCoordBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, doorVertexTextureCoordBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, doorVertexTextureCoordBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:doorVertexTextureCoordBuffer [ 0 ]
						VARIABLE:doorVertexTextureCoordBuffer [ 0 ]
								NAME:doorVertexTextureCoordBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var textureCoords4  = [ 0.0,1.0,1.0,1.0,0.0,0.0,1.0,0.0 ]
VARIABLE:var textureCoords4 
		KEYWORD:var
		NAME:textureCoords4 
				NAME:textureCoords4
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:[ 0.0,1.0,1.0,1.0,0.0,0.0,1.0,0.0 ]
		KEYWORD:[
		SEQUENCE:0.0,1.0,1.0,1.0,0.0,0.0,1.0,0.0
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:,
				EXPRESSION:1.0
						VALUE:1.0
				KEYWORD:,
				EXPRESSION:0.0
						VALUE:0.0
		KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( textureCoords4  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( textureCoords4  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( textureCoords4  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( textureCoords4  )
						NEW_STATEMENT:new  Float32Array  ( textureCoords4  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( textureCoords4  )
										KEYWORD:(
										SEQUENCE:textureCoords4 
												EXPRESSION:textureCoords4 
														VARIABLE:textureCoords4 
																NAME:textureCoords4
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> doorVertexTextureCoordBuffer [ 1 ]  = 2
NAME:doorVertexTextureCoordBuffer [ 1 ]
		NAME:doorVertexTextureCoordBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:2
		VALUE:2


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> doorVertexTextureCoordBuffer [ 2 ]  = 4
NAME:doorVertexTextureCoordBuffer [ 2 ]
		NAME:doorVertexTextureCoordBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:4
		VALUE:4


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var tractor  =  loadObj  ( "models /tractor.obj"  )
VARIABLE:var tractor 
		KEYWORD:var
		NAME:tractor 
				NAME:tractor
				IGNORED:
KEYWORD:=
CALL: loadObj  ( "models /tractor.obj"  )
		IGNORED:
		SEQUENCE:loadObj  ( "models /tractor.obj"  )
				COMPOSITE:loadObj  ( "models /tractor.obj"  )
						COMPOSITE:loadObj 
								NAME:loadObj
								IGNORED:
						KEYWORD:(
						SEQUENCE:"models /tractor.obj" 
								EXPRESSION:"models /tractor.obj" 
										VARIABLE:"models 
												NAME:"models
												IGNORED:
										OPERATOR:/
										VARIABLE:tractor.obj" 
												NAME:tractor.obj"
												IGNORED:
						KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tractorVertexPositionBuffer [ 0 ]  = gl. createBuffer (  )
NAME:tractorVertexPositionBuffer [ 0 ]
		NAME:tractorVertexPositionBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, tractorVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, tractorVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, tractorVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:tractorVertexPositionBuffer [ 0 ]
						VARIABLE:tractorVertexPositionBuffer [ 0 ]
								NAME:tractorVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( tractor.vertexPositions  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( tractor.vertexPositions  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( tractor.vertexPositions  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( tractor.vertexPositions  )
						NEW_STATEMENT:new  Float32Array  ( tractor.vertexPositions  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( tractor.vertexPositions  )
										KEYWORD:(
										SEQUENCE:tractor.vertexPositions 
												EXPRESSION:tractor.vertexPositions 
														VARIABLE:tractor.vertexPositions 
																NAME:tractor.vertexPositions
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tractorVertexPositionBuffer [ 1 ]  = 3
NAME:tractorVertexPositionBuffer [ 1 ]
		NAME:tractorVertexPositionBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:3
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tractorVertexPositionBuffer [ 2 ]  = tractor.vertexPositions.length /3
NAME:tractorVertexPositionBuffer [ 2 ]
		NAME:tractorVertexPositionBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:tractor.vertexPositions.length /3
		VARIABLE:tractor.vertexPositions.length 
				NAME:tractor.vertexPositions.length
				IGNORED:
		OPERATOR:/
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tractorVertexNormalBuffer [ 0 ]  = gl. createBuffer (  )
NAME:tractorVertexNormalBuffer [ 0 ]
		NAME:tractorVertexNormalBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, tractorVertexNormalBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, tractorVertexNormalBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, tractorVertexNormalBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:tractorVertexNormalBuffer [ 0 ]
						VARIABLE:tractorVertexNormalBuffer [ 0 ]
								NAME:tractorVertexNormalBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( tractor.vertexNormals  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( tractor.vertexNormals  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( tractor.vertexNormals  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( tractor.vertexNormals  )
						NEW_STATEMENT:new  Float32Array  ( tractor.vertexNormals  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( tractor.vertexNormals  )
										KEYWORD:(
										SEQUENCE:tractor.vertexNormals 
												EXPRESSION:tractor.vertexNormals 
														VARIABLE:tractor.vertexNormals 
																NAME:tractor.vertexNormals
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tractorVertexNormalBuffer [ 1 ]  = 3
NAME:tractorVertexNormalBuffer [ 1 ]
		NAME:tractorVertexNormalBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:3
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tractorVertexNormalBuffer [ 2 ]  = tractor.vertexNormals.length /3
NAME:tractorVertexNormalBuffer [ 2 ]
		NAME:tractorVertexNormalBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:tractor.vertexNormals.length /3
		VARIABLE:tractor.vertexNormals.length 
				NAME:tractor.vertexNormals.length
				IGNORED:
		OPERATOR:/
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tractorVertexTextureCoordBuffer [ 0 ]  = gl. createBuffer (  )
NAME:tractorVertexTextureCoordBuffer [ 0 ]
		NAME:tractorVertexTextureCoordBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, tractorVertexTextureCoordBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, tractorVertexTextureCoordBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, tractorVertexTextureCoordBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:tractorVertexTextureCoordBuffer [ 0 ]
						VARIABLE:tractorVertexTextureCoordBuffer [ 0 ]
								NAME:tractorVertexTextureCoordBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( tractor.vertexTextureCoords  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( tractor.vertexTextureCoords  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( tractor.vertexTextureCoords  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( tractor.vertexTextureCoords  )
						NEW_STATEMENT:new  Float32Array  ( tractor.vertexTextureCoords  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( tractor.vertexTextureCoords  )
										KEYWORD:(
										SEQUENCE:tractor.vertexTextureCoords 
												EXPRESSION:tractor.vertexTextureCoords 
														VARIABLE:tractor.vertexTextureCoords 
																NAME:tractor.vertexTextureCoords
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tractorVertexTextureCoordBuffer [ 1 ]  = 2
NAME:tractorVertexTextureCoordBuffer [ 1 ]
		NAME:tractorVertexTextureCoordBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:2
		VALUE:2


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tractorVertexTextureCoordBuffer [ 2 ]  = tractor.vertexTextureCoords.length /2
NAME:tractorVertexTextureCoordBuffer [ 2 ]
		NAME:tractorVertexTextureCoordBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:tractor.vertexTextureCoords.length /2
		VARIABLE:tractor.vertexTextureCoords.length 
				NAME:tractor.vertexTextureCoords.length
				IGNORED:
		OPERATOR:/
		VALUE:2


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tractorVertexIndexBuffer [ 0 ]  = gl. createBuffer (  )
NAME:tractorVertexIndexBuffer [ 0 ]
		NAME:tractorVertexIndexBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, tractorVertexIndexBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, tractorVertexIndexBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ELEMENT_ARRAY_BUFFER, tractorVertexIndexBuffer [ 0 ]
				EXPRESSION:gl. ELEMENT_ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ELEMENT_ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ELEMENT_ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:tractorVertexIndexBuffer [ 0 ]
						VARIABLE:tractorVertexIndexBuffer [ 0 ]
								NAME:tractorVertexIndexBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ELEMENT_ARRAY_BUFFER, new  Uint16Array  ( tractor.indices  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ELEMENT_ARRAY_BUFFER, new  Uint16Array  ( tractor.indices  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ELEMENT_ARRAY_BUFFER, new  Uint16Array  ( tractor.indices  ), gl. STATIC_DRAW
				EXPRESSION:gl. ELEMENT_ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ELEMENT_ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ELEMENT_ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Uint16Array  ( tractor.indices  )
						NEW_STATEMENT:new  Uint16Array  ( tractor.indices  )
								KEYWORD:new 
								VARIABLE:Uint16Array 
										NAME:Uint16Array
										IGNORED:
								COMPOSITE:( tractor.indices  )
										KEYWORD:(
										SEQUENCE:tractor.indices 
												EXPRESSION:tractor.indices 
														VARIABLE:tractor.indices 
																NAME:tractor.indices
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tractorVertexIndexBuffer [ 1 ]  = 1
NAME:tractorVertexIndexBuffer [ 1 ]
		NAME:tractorVertexIndexBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:1
		VALUE:1


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tractorVertexIndexBuffer [ 2 ]  = tractor.indices.length 
NAME:tractorVertexIndexBuffer [ 2 ]
		NAME:tractorVertexIndexBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:tractor.indices.length 
		VARIABLE:tractor.indices.length 
				NAME:tractor.indices.length
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var seagul  =  loadObj  ( "models /seagul.obj"  )
VARIABLE:var seagul 
		KEYWORD:var
		NAME:seagul 
				NAME:seagul
				IGNORED:
KEYWORD:=
CALL: loadObj  ( "models /seagul.obj"  )
		IGNORED:
		SEQUENCE:loadObj  ( "models /seagul.obj"  )
				COMPOSITE:loadObj  ( "models /seagul.obj"  )
						COMPOSITE:loadObj 
								NAME:loadObj
								IGNORED:
						KEYWORD:(
						SEQUENCE:"models /seagul.obj" 
								EXPRESSION:"models /seagul.obj" 
										VARIABLE:"models 
												NAME:"models
												IGNORED:
										OPERATOR:/
										VARIABLE:seagul.obj" 
												NAME:seagul.obj"
												IGNORED:
						KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> seagulVertexPositionBuffer [ 0 ]  = gl. createBuffer (  )
NAME:seagulVertexPositionBuffer [ 0 ]
		NAME:seagulVertexPositionBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, seagulVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, seagulVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, seagulVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:seagulVertexPositionBuffer [ 0 ]
						VARIABLE:seagulVertexPositionBuffer [ 0 ]
								NAME:seagulVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( seagul.vertexPositions  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( seagul.vertexPositions  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( seagul.vertexPositions  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( seagul.vertexPositions  )
						NEW_STATEMENT:new  Float32Array  ( seagul.vertexPositions  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( seagul.vertexPositions  )
										KEYWORD:(
										SEQUENCE:seagul.vertexPositions 
												EXPRESSION:seagul.vertexPositions 
														VARIABLE:seagul.vertexPositions 
																NAME:seagul.vertexPositions
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> seagulVertexPositionBuffer [ 1 ]  = 3
NAME:seagulVertexPositionBuffer [ 1 ]
		NAME:seagulVertexPositionBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:3
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> seagulVertexPositionBuffer [ 2 ]  = seagul.vertexPositions.length /3
NAME:seagulVertexPositionBuffer [ 2 ]
		NAME:seagulVertexPositionBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:seagul.vertexPositions.length /3
		VARIABLE:seagul.vertexPositions.length 
				NAME:seagul.vertexPositions.length
				IGNORED:
		OPERATOR:/
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> seagulVertexNormalBuffer [ 0 ]  = gl. createBuffer (  )
NAME:seagulVertexNormalBuffer [ 0 ]
		NAME:seagulVertexNormalBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, seagulVertexNormalBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, seagulVertexNormalBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, seagulVertexNormalBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:seagulVertexNormalBuffer [ 0 ]
						VARIABLE:seagulVertexNormalBuffer [ 0 ]
								NAME:seagulVertexNormalBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( seagul.vertexNormals  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( seagul.vertexNormals  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( seagul.vertexNormals  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( seagul.vertexNormals  )
						NEW_STATEMENT:new  Float32Array  ( seagul.vertexNormals  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( seagul.vertexNormals  )
										KEYWORD:(
										SEQUENCE:seagul.vertexNormals 
												EXPRESSION:seagul.vertexNormals 
														VARIABLE:seagul.vertexNormals 
																NAME:seagul.vertexNormals
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> seagulVertexNormalBuffer [ 1 ]  = 3
NAME:seagulVertexNormalBuffer [ 1 ]
		NAME:seagulVertexNormalBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:3
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> seagulVertexNormalBuffer [ 2 ]  = seagul.vertexNormals.length /3
NAME:seagulVertexNormalBuffer [ 2 ]
		NAME:seagulVertexNormalBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:seagul.vertexNormals.length /3
		VARIABLE:seagul.vertexNormals.length 
				NAME:seagul.vertexNormals.length
				IGNORED:
		OPERATOR:/
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> seagulVertexTextureCoordBuffer [ 0 ]  = gl. createBuffer (  )
NAME:seagulVertexTextureCoordBuffer [ 0 ]
		NAME:seagulVertexTextureCoordBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, seagulVertexTextureCoordBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, seagulVertexTextureCoordBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, seagulVertexTextureCoordBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:seagulVertexTextureCoordBuffer [ 0 ]
						VARIABLE:seagulVertexTextureCoordBuffer [ 0 ]
								NAME:seagulVertexTextureCoordBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( seagul.vertexTextureCoords  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ARRAY_BUFFER, new  Float32Array  ( seagul.vertexTextureCoords  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, new  Float32Array  ( seagul.vertexTextureCoords  ), gl. STATIC_DRAW
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Float32Array  ( seagul.vertexTextureCoords  )
						NEW_STATEMENT:new  Float32Array  ( seagul.vertexTextureCoords  )
								KEYWORD:new 
								VARIABLE:Float32Array 
										NAME:Float32Array
										IGNORED:
								COMPOSITE:( seagul.vertexTextureCoords  )
										KEYWORD:(
										SEQUENCE:seagul.vertexTextureCoords 
												EXPRESSION:seagul.vertexTextureCoords 
														VARIABLE:seagul.vertexTextureCoords 
																NAME:seagul.vertexTextureCoords
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> seagulVertexTextureCoordBuffer [ 1 ]  = 2
NAME:seagulVertexTextureCoordBuffer [ 1 ]
		NAME:seagulVertexTextureCoordBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:2
		VALUE:2


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> seagulVertexTextureCoordBuffer [ 2 ]  = seagul.vertexTextureCoords.length /2
NAME:seagulVertexTextureCoordBuffer [ 2 ]
		NAME:seagulVertexTextureCoordBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:seagul.vertexTextureCoords.length /2
		VARIABLE:seagul.vertexTextureCoords.length 
				NAME:seagul.vertexTextureCoords.length
				IGNORED:
		OPERATOR:/
		VALUE:2


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> seagulVertexIndexBuffer [ 0 ]  = gl. createBuffer (  )
NAME:seagulVertexIndexBuffer [ 0 ]
		NAME:seagulVertexIndexBuffer
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createBuffer (  )
		OPENGL_CALL:gl. createBuffer (  )
				KEYWORD:gl.
				NAME:createBuffer
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, seagulVertexIndexBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, seagulVertexIndexBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ELEMENT_ARRAY_BUFFER, seagulVertexIndexBuffer [ 0 ]
				EXPRESSION:gl. ELEMENT_ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ELEMENT_ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ELEMENT_ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:seagulVertexIndexBuffer [ 0 ]
						VARIABLE:seagulVertexIndexBuffer [ 0 ]
								NAME:seagulVertexIndexBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bufferData ( gl. ELEMENT_ARRAY_BUFFER, new  Uint16Array  ( seagul.indices  ), gl. STATIC_DRAW )
OPENGL_CALL:gl. bufferData ( gl. ELEMENT_ARRAY_BUFFER, new  Uint16Array  ( seagul.indices  ), gl. STATIC_DRAW )
		KEYWORD:gl.
		NAME:bufferData
		KEYWORD:(
		SEQUENCE:gl. ELEMENT_ARRAY_BUFFER, new  Uint16Array  ( seagul.indices  ), gl. STATIC_DRAW
				EXPRESSION:gl. ELEMENT_ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ELEMENT_ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ELEMENT_ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:new  Uint16Array  ( seagul.indices  )
						NEW_STATEMENT:new  Uint16Array  ( seagul.indices  )
								KEYWORD:new 
								VARIABLE:Uint16Array 
										NAME:Uint16Array
										IGNORED:
								COMPOSITE:( seagul.indices  )
										KEYWORD:(
										SEQUENCE:seagul.indices 
												EXPRESSION:seagul.indices 
														VARIABLE:seagul.indices 
																NAME:seagul.indices
																IGNORED:
										KEYWORD:)
				KEYWORD:, 
				EXPRESSION:gl. STATIC_DRAW
						OPENGL_CONSTANT:gl. STATIC_DRAW
								KEYWORD:gl.
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> seagulVertexIndexBuffer [ 1 ]  = 1
NAME:seagulVertexIndexBuffer [ 1 ]
		NAME:seagulVertexIndexBuffer
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:1
		VALUE:1


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> seagulVertexIndexBuffer [ 2 ]  = seagul.indices.length 
NAME:seagulVertexIndexBuffer [ 2 ]
		NAME:seagulVertexIndexBuffer
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:seagul.indices.length 
		VARIABLE:seagul.indices.length 
				NAME:seagul.indices.length
				IGNORED:


[METHOD_DECLARATION] -------> , initTexture : function ( gl  )
KEYWORD:,
NAME:initTexture
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[FOR, ASSIGNMENT, LINE_OF_CODE] -------> for ( var i  = 0 ; i  < 6 ; i  ++  )
KEYWORD:for
KEYWORD:(
COMPOSITE:var i  = 0
		VARIABLE:var i 
				KEYWORD:var
				NAME:i 
						NAME:i
						IGNORED:
		KEYWORD:=
		EXPRESSION:0
				VALUE:0
KEYWORD:;
VALUE:i 
		VALUE:i
		IGNORED:
KEYWORD:<
EXPRESSION:6
		VALUE:6
KEYWORD:;
SEQUENCE:i  ++ 
		COMPOSITE:i  ++ 
				VARIABLE:i 
						VARIABLE:i
						IGNORED:
				KEYWORD:++
				EXPRESSION:
						IGNORED:
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> textures [ i  ]  = gl. createTexture (  )
NAME:textures [ i  ]
		NAME:textures
		COMPOSITE:[ i  ]
				KEYWORD:[
				EXPRESSION:i 
						NAME:i 
								NAME:i
								IGNORED:
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:gl. createTexture (  )
		OPENGL_CALL:gl. createTexture (  )
				KEYWORD:gl.
				NAME:createTexture
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var tex1  = new  Image  (  )
VARIABLE:var tex1 
		KEYWORD:var
		NAME:tex1 
				NAME:tex1
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Image  (  )
		KEYWORD:new 
		TYPE:Image 
				TYPE:Image
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tex1.onload   =  function  (  )
NAME:tex1.onload 
		NAME:tex1.onload
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION: function  (  )
		CALL: function  (  )
				IGNORED:
				SEQUENCE:function  (  )
						COMPOSITE:function  (  )
								COMPOSITE:function 
										NAME:function
										IGNORED:
								KEYWORD:(
								SEQUENCE:
								KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindTexture ( gl. TEXTURE_2D, textures [ 0 ] )
OPENGL_CALL:gl. bindTexture ( gl. TEXTURE_2D, textures [ 0 ] )
		KEYWORD:gl.
		NAME:bindTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, textures [ 0 ]
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:textures [ 0 ]
						VARIABLE:textures [ 0 ]
								NAME:textures
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texImage2D ( gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex1  )
OPENGL_CALL:gl. texImage2D ( gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex1  )
		KEYWORD:gl.
		NAME:texImage2D
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex1 
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:gl. RGB
						OPENGL_CONSTANT:gl. RGB
								KEYWORD:gl.
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:gl. RGB
						OPENGL_CONSTANT:gl. RGB
								KEYWORD:gl.
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:gl. UNSIGNED_BYTE
						OPENGL_CONSTANT:gl. UNSIGNED_BYTE
								KEYWORD:gl.
								NAME:UNSIGNED_BYTE
				KEYWORD:, 
				EXPRESSION:tex1 
						VARIABLE:tex1 
								NAME:tex1
								IGNORED:
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_MAG_FILTER
						OPENGL_CONSTANT:gl. TEXTURE_MAG_FILTER
								KEYWORD:gl.
								NAME:TEXTURE_MAG_FILTER
				KEYWORD:, 
				EXPRESSION:gl. LINEAR
						OPENGL_CONSTANT:gl. LINEAR
								KEYWORD:gl.
								NAME:LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_MIN_FILTER
						OPENGL_CONSTANT:gl. TEXTURE_MIN_FILTER
								KEYWORD:gl.
								NAME:TEXTURE_MIN_FILTER
				KEYWORD:, 
				EXPRESSION:gl. LINEAR_MIPMAP_LINEAR
						OPENGL_CONSTANT:gl. LINEAR_MIPMAP_LINEAR
								KEYWORD:gl.
								NAME:LINEAR_MIPMAP_LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_S, gl. REPEAT )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_S, gl. REPEAT )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_WRAP_S, gl. REPEAT
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_WRAP_S
						OPENGL_CONSTANT:gl. TEXTURE_WRAP_S
								KEYWORD:gl.
								NAME:TEXTURE_WRAP_S
				KEYWORD:, 
				EXPRESSION:gl. REPEAT
						OPENGL_CONSTANT:gl. REPEAT
								KEYWORD:gl.
								NAME:REPEAT
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_T, gl. REPEAT )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_T, gl. REPEAT )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_WRAP_T, gl. REPEAT
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_WRAP_T
						OPENGL_CONSTANT:gl. TEXTURE_WRAP_T
								KEYWORD:gl.
								NAME:TEXTURE_WRAP_T
				KEYWORD:, 
				EXPRESSION:gl. REPEAT
						OPENGL_CONSTANT:gl. REPEAT
								KEYWORD:gl.
								NAME:REPEAT
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. generateMipmap ( gl. TEXTURE_2D )
OPENGL_CALL:gl. generateMipmap ( gl. TEXTURE_2D )
		KEYWORD:gl.
		NAME:generateMipmap
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tex1.src   = "images /muro.gif" 
NAME:tex1.src 
		NAME:tex1.src
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:"images /muro.gif" 
		VARIABLE:"images 
				NAME:"images
				IGNORED:
		OPERATOR:/
		VARIABLE:muro.gif" 
				NAME:muro.gif"
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var tex2  = new  Image  (  )
VARIABLE:var tex2 
		KEYWORD:var
		NAME:tex2 
				NAME:tex2
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Image  (  )
		KEYWORD:new 
		TYPE:Image 
				TYPE:Image
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tex2.onload   =  function  (  )
NAME:tex2.onload 
		NAME:tex2.onload
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION: function  (  )
		CALL: function  (  )
				IGNORED:
				SEQUENCE:function  (  )
						COMPOSITE:function  (  )
								COMPOSITE:function 
										NAME:function
										IGNORED:
								KEYWORD:(
								SEQUENCE:
								KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindTexture ( gl. TEXTURE_2D, textures [ 1 ] )
OPENGL_CALL:gl. bindTexture ( gl. TEXTURE_2D, textures [ 1 ] )
		KEYWORD:gl.
		NAME:bindTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, textures [ 1 ]
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:textures [ 1 ]
						VARIABLE:textures [ 1 ]
								NAME:textures
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texImage2D ( gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex2  )
OPENGL_CALL:gl. texImage2D ( gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex2  )
		KEYWORD:gl.
		NAME:texImage2D
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex2 
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:gl. RGB
						OPENGL_CONSTANT:gl. RGB
								KEYWORD:gl.
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:gl. RGB
						OPENGL_CONSTANT:gl. RGB
								KEYWORD:gl.
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:gl. UNSIGNED_BYTE
						OPENGL_CONSTANT:gl. UNSIGNED_BYTE
								KEYWORD:gl.
								NAME:UNSIGNED_BYTE
				KEYWORD:, 
				EXPRESSION:tex2 
						VARIABLE:tex2 
								NAME:tex2
								IGNORED:
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_MAG_FILTER
						OPENGL_CONSTANT:gl. TEXTURE_MAG_FILTER
								KEYWORD:gl.
								NAME:TEXTURE_MAG_FILTER
				KEYWORD:, 
				EXPRESSION:gl. LINEAR
						OPENGL_CONSTANT:gl. LINEAR
								KEYWORD:gl.
								NAME:LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_MIN_FILTER
						OPENGL_CONSTANT:gl. TEXTURE_MIN_FILTER
								KEYWORD:gl.
								NAME:TEXTURE_MIN_FILTER
				KEYWORD:, 
				EXPRESSION:gl. LINEAR_MIPMAP_LINEAR
						OPENGL_CONSTANT:gl. LINEAR_MIPMAP_LINEAR
								KEYWORD:gl.
								NAME:LINEAR_MIPMAP_LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_S, gl. REPEAT )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_S, gl. REPEAT )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_WRAP_S, gl. REPEAT
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_WRAP_S
						OPENGL_CONSTANT:gl. TEXTURE_WRAP_S
								KEYWORD:gl.
								NAME:TEXTURE_WRAP_S
				KEYWORD:, 
				EXPRESSION:gl. REPEAT
						OPENGL_CONSTANT:gl. REPEAT
								KEYWORD:gl.
								NAME:REPEAT
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_T, gl. REPEAT )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_T, gl. REPEAT )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_WRAP_T, gl. REPEAT
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_WRAP_T
						OPENGL_CONSTANT:gl. TEXTURE_WRAP_T
								KEYWORD:gl.
								NAME:TEXTURE_WRAP_T
				KEYWORD:, 
				EXPRESSION:gl. REPEAT
						OPENGL_CONSTANT:gl. REPEAT
								KEYWORD:gl.
								NAME:REPEAT
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. generateMipmap ( gl. TEXTURE_2D )
OPENGL_CALL:gl. generateMipmap ( gl. TEXTURE_2D )
		KEYWORD:gl.
		NAME:generateMipmap
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tex2.src   = "images /roof.gif" 
NAME:tex2.src 
		NAME:tex2.src
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:"images /roof.gif" 
		VARIABLE:"images 
				NAME:"images
				IGNORED:
		OPERATOR:/
		VARIABLE:roof.gif" 
				NAME:roof.gif"
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var tex3  = new  Image  (  )
VARIABLE:var tex3 
		KEYWORD:var
		NAME:tex3 
				NAME:tex3
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Image  (  )
		KEYWORD:new 
		TYPE:Image 
				TYPE:Image
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tex3.onload   =  function  (  )
NAME:tex3.onload 
		NAME:tex3.onload
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION: function  (  )
		CALL: function  (  )
				IGNORED:
				SEQUENCE:function  (  )
						COMPOSITE:function  (  )
								COMPOSITE:function 
										NAME:function
										IGNORED:
								KEYWORD:(
								SEQUENCE:
								KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindTexture ( gl. TEXTURE_2D, textures [ 2 ] )
OPENGL_CALL:gl. bindTexture ( gl. TEXTURE_2D, textures [ 2 ] )
		KEYWORD:gl.
		NAME:bindTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, textures [ 2 ]
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:textures [ 2 ]
						VARIABLE:textures [ 2 ]
								NAME:textures
								COMPOSITE:[ 2 ]
										KEYWORD:[
										EXPRESSION:2
												VALUE:2
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texImage2D ( gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex3  )
OPENGL_CALL:gl. texImage2D ( gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex3  )
		KEYWORD:gl.
		NAME:texImage2D
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex3 
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:gl. RGB
						OPENGL_CONSTANT:gl. RGB
								KEYWORD:gl.
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:gl. RGB
						OPENGL_CONSTANT:gl. RGB
								KEYWORD:gl.
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:gl. UNSIGNED_BYTE
						OPENGL_CONSTANT:gl. UNSIGNED_BYTE
								KEYWORD:gl.
								NAME:UNSIGNED_BYTE
				KEYWORD:, 
				EXPRESSION:tex3 
						VARIABLE:tex3 
								NAME:tex3
								IGNORED:
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_MAG_FILTER
						OPENGL_CONSTANT:gl. TEXTURE_MAG_FILTER
								KEYWORD:gl.
								NAME:TEXTURE_MAG_FILTER
				KEYWORD:, 
				EXPRESSION:gl. LINEAR
						OPENGL_CONSTANT:gl. LINEAR
								KEYWORD:gl.
								NAME:LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_MIN_FILTER
						OPENGL_CONSTANT:gl. TEXTURE_MIN_FILTER
								KEYWORD:gl.
								NAME:TEXTURE_MIN_FILTER
				KEYWORD:, 
				EXPRESSION:gl. LINEAR_MIPMAP_LINEAR
						OPENGL_CONSTANT:gl. LINEAR_MIPMAP_LINEAR
								KEYWORD:gl.
								NAME:LINEAR_MIPMAP_LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_S, gl. REPEAT )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_S, gl. REPEAT )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_WRAP_S, gl. REPEAT
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_WRAP_S
						OPENGL_CONSTANT:gl. TEXTURE_WRAP_S
								KEYWORD:gl.
								NAME:TEXTURE_WRAP_S
				KEYWORD:, 
				EXPRESSION:gl. REPEAT
						OPENGL_CONSTANT:gl. REPEAT
								KEYWORD:gl.
								NAME:REPEAT
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_T, gl. REPEAT )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_T, gl. REPEAT )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_WRAP_T, gl. REPEAT
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_WRAP_T
						OPENGL_CONSTANT:gl. TEXTURE_WRAP_T
								KEYWORD:gl.
								NAME:TEXTURE_WRAP_T
				KEYWORD:, 
				EXPRESSION:gl. REPEAT
						OPENGL_CONSTANT:gl. REPEAT
								KEYWORD:gl.
								NAME:REPEAT
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. generateMipmap ( gl. TEXTURE_2D )
OPENGL_CALL:gl. generateMipmap ( gl. TEXTURE_2D )
		KEYWORD:gl.
		NAME:generateMipmap
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tex3.src   = "images /grass.gif" 
NAME:tex3.src 
		NAME:tex3.src
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:"images /grass.gif" 
		VARIABLE:"images 
				NAME:"images
				IGNORED:
		OPERATOR:/
		VARIABLE:grass.gif" 
				NAME:grass.gif"
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var tex4  = new  Image  (  )
VARIABLE:var tex4 
		KEYWORD:var
		NAME:tex4 
				NAME:tex4
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Image  (  )
		KEYWORD:new 
		TYPE:Image 
				TYPE:Image
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tex4.onload   =  function  (  )
NAME:tex4.onload 
		NAME:tex4.onload
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION: function  (  )
		CALL: function  (  )
				IGNORED:
				SEQUENCE:function  (  )
						COMPOSITE:function  (  )
								COMPOSITE:function 
										NAME:function
										IGNORED:
								KEYWORD:(
								SEQUENCE:
								KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindTexture ( gl. TEXTURE_2D, textures [ 3 ] )
OPENGL_CALL:gl. bindTexture ( gl. TEXTURE_2D, textures [ 3 ] )
		KEYWORD:gl.
		NAME:bindTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, textures [ 3 ]
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:textures [ 3 ]
						VARIABLE:textures [ 3 ]
								NAME:textures
								COMPOSITE:[ 3 ]
										KEYWORD:[
										EXPRESSION:3
												VALUE:3
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texImage2D ( gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex4  )
OPENGL_CALL:gl. texImage2D ( gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex4  )
		KEYWORD:gl.
		NAME:texImage2D
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex4 
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:gl. RGB
						OPENGL_CONSTANT:gl. RGB
								KEYWORD:gl.
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:gl. RGB
						OPENGL_CONSTANT:gl. RGB
								KEYWORD:gl.
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:gl. UNSIGNED_BYTE
						OPENGL_CONSTANT:gl. UNSIGNED_BYTE
								KEYWORD:gl.
								NAME:UNSIGNED_BYTE
				KEYWORD:, 
				EXPRESSION:tex4 
						VARIABLE:tex4 
								NAME:tex4
								IGNORED:
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_MAG_FILTER
						OPENGL_CONSTANT:gl. TEXTURE_MAG_FILTER
								KEYWORD:gl.
								NAME:TEXTURE_MAG_FILTER
				KEYWORD:, 
				EXPRESSION:gl. LINEAR
						OPENGL_CONSTANT:gl. LINEAR
								KEYWORD:gl.
								NAME:LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_MIN_FILTER
						OPENGL_CONSTANT:gl. TEXTURE_MIN_FILTER
								KEYWORD:gl.
								NAME:TEXTURE_MIN_FILTER
				KEYWORD:, 
				EXPRESSION:gl. LINEAR_MIPMAP_LINEAR
						OPENGL_CONSTANT:gl. LINEAR_MIPMAP_LINEAR
								KEYWORD:gl.
								NAME:LINEAR_MIPMAP_LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. generateMipmap ( gl. TEXTURE_2D )
OPENGL_CALL:gl. generateMipmap ( gl. TEXTURE_2D )
		KEYWORD:gl.
		NAME:generateMipmap
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tex4.src   = "images /door.gif" 
NAME:tex4.src 
		NAME:tex4.src
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:"images /door.gif" 
		VARIABLE:"images 
				NAME:"images
				IGNORED:
		OPERATOR:/
		VARIABLE:door.gif" 
				NAME:door.gif"
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var tex5  = new  Image  (  )
VARIABLE:var tex5 
		KEYWORD:var
		NAME:tex5 
				NAME:tex5
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Image  (  )
		KEYWORD:new 
		TYPE:Image 
				TYPE:Image
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tex5.onload   =  function  (  )
NAME:tex5.onload 
		NAME:tex5.onload
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION: function  (  )
		CALL: function  (  )
				IGNORED:
				SEQUENCE:function  (  )
						COMPOSITE:function  (  )
								COMPOSITE:function 
										NAME:function
										IGNORED:
								KEYWORD:(
								SEQUENCE:
								KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindTexture ( gl. TEXTURE_2D, textures [ 4 ] )
OPENGL_CALL:gl. bindTexture ( gl. TEXTURE_2D, textures [ 4 ] )
		KEYWORD:gl.
		NAME:bindTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, textures [ 4 ]
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:textures [ 4 ]
						VARIABLE:textures [ 4 ]
								NAME:textures
								COMPOSITE:[ 4 ]
										KEYWORD:[
										EXPRESSION:4
												VALUE:4
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texImage2D ( gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex5  )
OPENGL_CALL:gl. texImage2D ( gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex5  )
		KEYWORD:gl.
		NAME:texImage2D
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex5 
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:gl. RGB
						OPENGL_CONSTANT:gl. RGB
								KEYWORD:gl.
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:gl. RGB
						OPENGL_CONSTANT:gl. RGB
								KEYWORD:gl.
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:gl. UNSIGNED_BYTE
						OPENGL_CONSTANT:gl. UNSIGNED_BYTE
								KEYWORD:gl.
								NAME:UNSIGNED_BYTE
				KEYWORD:, 
				EXPRESSION:tex5 
						VARIABLE:tex5 
								NAME:tex5
								IGNORED:
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_MAG_FILTER
						OPENGL_CONSTANT:gl. TEXTURE_MAG_FILTER
								KEYWORD:gl.
								NAME:TEXTURE_MAG_FILTER
				KEYWORD:, 
				EXPRESSION:gl. LINEAR
						OPENGL_CONSTANT:gl. LINEAR
								KEYWORD:gl.
								NAME:LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_MIN_FILTER
						OPENGL_CONSTANT:gl. TEXTURE_MIN_FILTER
								KEYWORD:gl.
								NAME:TEXTURE_MIN_FILTER
				KEYWORD:, 
				EXPRESSION:gl. LINEAR_MIPMAP_LINEAR
						OPENGL_CONSTANT:gl. LINEAR_MIPMAP_LINEAR
								KEYWORD:gl.
								NAME:LINEAR_MIPMAP_LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_S, gl. MIRRORED_REPEAT )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_S, gl. MIRRORED_REPEAT )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_WRAP_S, gl. MIRRORED_REPEAT
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_WRAP_S
						OPENGL_CONSTANT:gl. TEXTURE_WRAP_S
								KEYWORD:gl.
								NAME:TEXTURE_WRAP_S
				KEYWORD:, 
				EXPRESSION:gl. MIRRORED_REPEAT
						OPENGL_CONSTANT:gl. MIRRORED_REPEAT
								KEYWORD:gl.
								NAME:MIRRORED_REPEAT
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_T, gl. MIRRORED_REPEAT )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_T, gl. MIRRORED_REPEAT )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_WRAP_T, gl. MIRRORED_REPEAT
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_WRAP_T
						OPENGL_CONSTANT:gl. TEXTURE_WRAP_T
								KEYWORD:gl.
								NAME:TEXTURE_WRAP_T
				KEYWORD:, 
				EXPRESSION:gl. MIRRORED_REPEAT
						OPENGL_CONSTANT:gl. MIRRORED_REPEAT
								KEYWORD:gl.
								NAME:MIRRORED_REPEAT
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. generateMipmap ( gl. TEXTURE_2D )
OPENGL_CALL:gl. generateMipmap ( gl. TEXTURE_2D )
		KEYWORD:gl.
		NAME:generateMipmap
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tex5.src   = "images /tractor.gif" 
NAME:tex5.src 
		NAME:tex5.src
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:"images /tractor.gif" 
		VARIABLE:"images 
				NAME:"images
				IGNORED:
		OPERATOR:/
		VARIABLE:tractor.gif" 
				NAME:tractor.gif"
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var tex6  = new  Image  (  )
VARIABLE:var tex6 
		KEYWORD:var
		NAME:tex6 
				NAME:tex6
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Image  (  )
		KEYWORD:new 
		TYPE:Image 
				TYPE:Image
				IGNORED:
		COMPOSITE:(  )
				KEYWORD:(
				SEQUENCE:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tex6.onload   =  function  (  )
NAME:tex6.onload 
		NAME:tex6.onload
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION: function  (  )
		CALL: function  (  )
				IGNORED:
				SEQUENCE:function  (  )
						COMPOSITE:function  (  )
								COMPOSITE:function 
										NAME:function
										IGNORED:
								KEYWORD:(
								SEQUENCE:
								KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindTexture ( gl. TEXTURE_2D, textures [ 5 ] )
OPENGL_CALL:gl. bindTexture ( gl. TEXTURE_2D, textures [ 5 ] )
		KEYWORD:gl.
		NAME:bindTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, textures [ 5 ]
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:textures [ 5 ]
						VARIABLE:textures [ 5 ]
								NAME:textures
								COMPOSITE:[ 5 ]
										KEYWORD:[
										EXPRESSION:5
												VALUE:5
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texImage2D ( gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex6  )
OPENGL_CALL:gl. texImage2D ( gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex6  )
		KEYWORD:gl.
		NAME:texImage2D
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, 0, gl. RGB, gl. RGB, gl. UNSIGNED_BYTE, tex6 
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:gl. RGB
						OPENGL_CONSTANT:gl. RGB
								KEYWORD:gl.
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:gl. RGB
						OPENGL_CONSTANT:gl. RGB
								KEYWORD:gl.
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:gl. UNSIGNED_BYTE
						OPENGL_CONSTANT:gl. UNSIGNED_BYTE
								KEYWORD:gl.
								NAME:UNSIGNED_BYTE
				KEYWORD:, 
				EXPRESSION:tex6 
						VARIABLE:tex6 
								NAME:tex6
								IGNORED:
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_MAG_FILTER, gl. LINEAR
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_MAG_FILTER
						OPENGL_CONSTANT:gl. TEXTURE_MAG_FILTER
								KEYWORD:gl.
								NAME:TEXTURE_MAG_FILTER
				KEYWORD:, 
				EXPRESSION:gl. LINEAR
						OPENGL_CONSTANT:gl. LINEAR
								KEYWORD:gl.
								NAME:LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_MIN_FILTER, gl. LINEAR_MIPMAP_LINEAR
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_MIN_FILTER
						OPENGL_CONSTANT:gl. TEXTURE_MIN_FILTER
								KEYWORD:gl.
								NAME:TEXTURE_MIN_FILTER
				KEYWORD:, 
				EXPRESSION:gl. LINEAR_MIPMAP_LINEAR
						OPENGL_CONSTANT:gl. LINEAR_MIPMAP_LINEAR
								KEYWORD:gl.
								NAME:LINEAR_MIPMAP_LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_S, gl. REPEAT )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_S, gl. REPEAT )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_WRAP_S, gl. REPEAT
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_WRAP_S
						OPENGL_CONSTANT:gl. TEXTURE_WRAP_S
								KEYWORD:gl.
								NAME:TEXTURE_WRAP_S
				KEYWORD:, 
				EXPRESSION:gl. REPEAT
						OPENGL_CONSTANT:gl. REPEAT
								KEYWORD:gl.
								NAME:REPEAT
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_T, gl. REPEAT )
OPENGL_CALL:gl. texParameteri ( gl. TEXTURE_2D, gl. TEXTURE_WRAP_T, gl. REPEAT )
		KEYWORD:gl.
		NAME:texParameteri
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, gl. TEXTURE_WRAP_T, gl. REPEAT
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:gl. TEXTURE_WRAP_T
						OPENGL_CONSTANT:gl. TEXTURE_WRAP_T
								KEYWORD:gl.
								NAME:TEXTURE_WRAP_T
				KEYWORD:, 
				EXPRESSION:gl. REPEAT
						OPENGL_CONSTANT:gl. REPEAT
								KEYWORD:gl.
								NAME:REPEAT
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. generateMipmap ( gl. TEXTURE_2D )
OPENGL_CALL:gl. generateMipmap ( gl. TEXTURE_2D )
		KEYWORD:gl.
		NAME:generateMipmap
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindTexture ( gl. TEXTURE_2D, null  )
OPENGL_CALL:gl. bindTexture ( gl. TEXTURE_2D, null  )
		KEYWORD:gl.
		NAME:bindTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, null 
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:null 
						VARIABLE:null 
								NAME:null
								IGNORED:
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tex6.src   = "images /seagul.gif" 
NAME:tex6.src 
		NAME:tex6.src
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:"images /seagul.gif" 
		VARIABLE:"images 
				NAME:"images
				IGNORED:
		OPERATOR:/
		VARIABLE:seagul.gif" 
				NAME:seagul.gif"
				IGNORED:


[METHOD_DECLARATION] -------> , drawScene : function ( gl  )
KEYWORD:,
NAME:drawScene
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:gl 
		VARIABLE:gl 
				NAME:gl
				IGNORED:
KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. clearColor ( 0.0, 0.71, 0.91, 1.0 )
OPENGL_CALL:gl. clearColor ( 0.0, 0.71, 0.91, 1.0 )
		KEYWORD:gl.
		NAME:clearColor
		KEYWORD:(
		SEQUENCE:0.0, 0.71, 0.91, 1.0
				EXPRESSION:0.0
						VALUE:0.0
				KEYWORD:, 
				EXPRESSION:0.71
						VALUE:0.71
				KEYWORD:, 
				EXPRESSION:0.91
						VALUE:0.91
				KEYWORD:, 
				EXPRESSION:1.0
						VALUE:1.0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enable ( gl. DEPTH_TEST )
OPENGL_CALL:gl. enable ( gl. DEPTH_TEST )
		KEYWORD:gl.
		NAME:enable
		KEYWORD:(
		SEQUENCE:gl. DEPTH_TEST
				EXPRESSION:gl. DEPTH_TEST
						OPENGL_CONSTANT:gl. DEPTH_TEST
								KEYWORD:gl.
								NAME:DEPTH_TEST
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. cullFace ( gl. BACK )
OPENGL_CALL:gl. cullFace ( gl. BACK )
		KEYWORD:gl.
		NAME:cullFace
		KEYWORD:(
		SEQUENCE:gl. BACK
				EXPRESSION:gl. BACK
						OPENGL_CONSTANT:gl. BACK
								KEYWORD:gl.
								NAME:BACK
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enable ( gl. CULL_FACE )
OPENGL_CALL:gl. enable ( gl. CULL_FACE )
		KEYWORD:gl.
		NAME:enable
		KEYWORD:(
		SEQUENCE:gl. CULL_FACE
				EXPRESSION:gl. CULL_FACE
						OPENGL_CONSTANT:gl. CULL_FACE
								KEYWORD:gl.
								NAME:CULL_FACE
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.handleKeys  (  )
CALL: this.handleKeys  (  )
		IGNORED:
		SEQUENCE:this.handleKeys  (  )
				COMPOSITE:this.handleKeys  (  )
						COMPOSITE:this.handleKeys 
								NAME:this.handleKeys
								IGNORED:
						KEYWORD:(
						SEQUENCE:
						KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. viewport ( 0, 0, 500, 500 )
OPENGL_CALL:gl. viewport ( 0, 0, 500, 500 )
		KEYWORD:gl.
		NAME:viewport
		KEYWORD:(
		SEQUENCE:0, 0, 500, 500
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:500
						VALUE:500
				KEYWORD:, 
				EXPRESSION:500
						VALUE:500
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. clear ( gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT )
OPENGL_CALL:gl. clear ( gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT )
		KEYWORD:gl.
		NAME:clear
		KEYWORD:(
		SEQUENCE:gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT
				EXPRESSION:gl. COLOR_BUFFER_BIT|gl. DEPTH_BUFFER_BIT
						OPENGL_CONSTANT:gl. COLOR_BUFFER_BIT
								KEYWORD:gl.
								NAME:COLOR_BUFFER_BIT
						OPERATOR:|
						OPENGL_CONSTANT:gl. DEPTH_BUFFER_BIT
								KEYWORD:gl.
								NAME:DEPTH_BUFFER_BIT
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cx  =  Math.cos  ( -pitch )
VARIABLE:var cx 
		KEYWORD:var
		NAME:cx 
				NAME:cx
				IGNORED:
KEYWORD:=
CALL: Math.cos  ( -pitch )
		IGNORED:
		SEQUENCE:Math.cos  ( -pitch )
				COMPOSITE:Math.cos  ( -pitch )
						COMPOSITE:Math.cos 
								NAME:Math.cos
								IGNORED:
						KEYWORD:(
						SEQUENCE:-pitch
								EXPRESSION:-pitch
										VALUE:-pitch
						KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var sx  =  Math.sin  ( -pitch )
VARIABLE:var sx 
		KEYWORD:var
		NAME:sx 
				NAME:sx
				IGNORED:
KEYWORD:=
CALL: Math.sin  ( -pitch )
		IGNORED:
		SEQUENCE:Math.sin  ( -pitch )
				COMPOSITE:Math.sin  ( -pitch )
						COMPOSITE:Math.sin 
								NAME:Math.sin
								IGNORED:
						KEYWORD:(
						SEQUENCE:-pitch
								EXPRESSION:-pitch
										VALUE:-pitch
						KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cy  =  Math.cos  ( -yaw )
VARIABLE:var cy 
		KEYWORD:var
		NAME:cy 
				NAME:cy
				IGNORED:
KEYWORD:=
CALL: Math.cos  ( -yaw )
		IGNORED:
		SEQUENCE:Math.cos  ( -yaw )
				COMPOSITE:Math.cos  ( -yaw )
						COMPOSITE:Math.cos 
								NAME:Math.cos
								IGNORED:
						KEYWORD:(
						SEQUENCE:-yaw
								EXPRESSION:-yaw
										VALUE:-yaw
						KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var sy  =  Math.sin  ( -yaw )
VARIABLE:var sy 
		KEYWORD:var
		NAME:sy 
				NAME:sy
				IGNORED:
KEYWORD:=
CALL: Math.sin  ( -yaw )
		IGNORED:
		SEQUENCE:Math.sin  ( -yaw )
				COMPOSITE:Math.sin  ( -yaw )
						COMPOSITE:Math.sin 
								NAME:Math.sin
								IGNORED:
						KEYWORD:(
						SEQUENCE:-yaw
								EXPRESSION:-yaw
										VALUE:-yaw
						KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pMatrix   = new  Float32Array  ( [ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ] )
NAME:pMatrix 
		NAME:pMatrix
		IGNORED:
IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Float32Array  ( [ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ] )
		KEYWORD:new 
		TYPE:Float32Array 
				TYPE:Float32Array
				IGNORED:
		COMPOSITE:( [ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ] )
				KEYWORD:(
				SEQUENCE:[ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ]
						ARRAY_CONTENT:[ 2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0 ]
								KEYWORD:[
								SEQUENCE:2.4142136573791504,0,0,0,0,2.4142136573791504,0,0,0,0,-1.0020020008087158,-1,0,0,-0.20020020008087158,0
										EXPRESSION:2.4142136573791504
												VALUE:2.4142136573791504
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:2.4142136573791504
												VALUE:2.4142136573791504
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:-1.0020020008087158
												VALUE:-1.0020020008087158
										KEYWORD:,
										EXPRESSION:-1
												VALUE:-1
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:-0.20020020008087158
												VALUE:-0.20020020008087158
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
								KEYWORD:]
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix   = new  Float32Array  ( [ cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,-cy*xPos -sy *zPos ,-cx-sx *sy *xPos -cx *yPos +cy *sx *zPos ,-sx+cx *sy *xPos -sx *yPos -cx *cy *zPos ,1 ] )
NAME:mvMatrix 
		NAME:mvMatrix
		IGNORED:
IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Float32Array  ( [ cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,-cy*xPos -sy *zPos ,-cx-sx *sy *xPos -cx *yPos +cy *sx *zPos ,-sx+cx *sy *xPos -sx *yPos -cx *cy *zPos ,1 ] )
		KEYWORD:new 
		TYPE:Float32Array 
				TYPE:Float32Array
				IGNORED:
		COMPOSITE:( [ cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,-cy*xPos -sy *zPos ,-cx-sx *sy *xPos -cx *yPos +cy *sx *zPos ,-sx+cx *sy *xPos -sx *yPos -cx *cy *zPos ,1 ] )
				KEYWORD:(
				SEQUENCE:[ cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,-cy*xPos -sy *zPos ,-cx-sx *sy *xPos -cx *yPos +cy *sx *zPos ,-sx+cx *sy *xPos -sx *yPos -cx *cy *zPos ,1 ]
						ARRAY_CONTENT:[ cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,-cy*xPos -sy *zPos ,-cx-sx *sy *xPos -cx *yPos +cy *sx *zPos ,-sx+cx *sy *xPos -sx *yPos -cx *cy *zPos ,1 ]
								KEYWORD:[
								SEQUENCE:cy ,sx *sy ,-cx*sy ,0,0,cx ,sx ,0,sy ,-cy*sx ,cx *cy ,0,-cy*xPos -sy *zPos ,-cx-sx *sy *xPos -cx *yPos +cy *sx *zPos ,-sx+cx *sy *xPos -sx *yPos -cx *cy *zPos ,1
										EXPRESSION:cy 
												VARIABLE:cy 
														NAME:cy
														IGNORED:
										KEYWORD:,
										EXPRESSION:sx *sy 
												VARIABLE:sx 
														NAME:sx
														IGNORED:
												OPERATOR:*
												VARIABLE:sy 
														NAME:sy
														IGNORED:
										KEYWORD:,
										EXPRESSION:-cx*sy 
												VALUE:-cx
												OPERATOR:*
												VARIABLE:sy 
														NAME:sy
														IGNORED:
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:cx 
												VARIABLE:cx 
														NAME:cx
														IGNORED:
										KEYWORD:,
										EXPRESSION:sx 
												VARIABLE:sx 
														NAME:sx
														IGNORED:
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:sy 
												VARIABLE:sy 
														NAME:sy
														IGNORED:
										KEYWORD:,
										EXPRESSION:-cy*sx 
												VALUE:-cy
												OPERATOR:*
												VARIABLE:sx 
														NAME:sx
														IGNORED:
										KEYWORD:,
										EXPRESSION:cx *cy 
												VARIABLE:cx 
														NAME:cx
														IGNORED:
												OPERATOR:*
												VARIABLE:cy 
														NAME:cy
														IGNORED:
										KEYWORD:,
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:-cy*xPos -sy *zPos 
												VALUE:-cy
												OPERATOR:*
												VARIABLE:xPos 
														NAME:xPos
														IGNORED:
												OPERATOR:-
												VARIABLE:sy 
														NAME:sy
														IGNORED:
												OPERATOR:*
												VARIABLE:zPos 
														NAME:zPos
														IGNORED:
										KEYWORD:,
										EXPRESSION:-cx-sx *sy *xPos -cx *yPos +cy *sx *zPos 
												VALUE:-cx
												OPERATOR:-
												VARIABLE:sx 
														NAME:sx
														IGNORED:
												OPERATOR:*
												VARIABLE:sy 
														NAME:sy
														IGNORED:
												OPERATOR:*
												VARIABLE:xPos 
														NAME:xPos
														IGNORED:
												OPERATOR:-
												VARIABLE:cx 
														NAME:cx
														IGNORED:
												OPERATOR:*
												VARIABLE:yPos 
														NAME:yPos
														IGNORED:
												OPERATOR:+
												VARIABLE:cy 
														NAME:cy
														IGNORED:
												OPERATOR:*
												VARIABLE:sx 
														NAME:sx
														IGNORED:
												OPERATOR:*
												VARIABLE:zPos 
														NAME:zPos
														IGNORED:
										KEYWORD:,
										EXPRESSION:-sx+cx *sy *xPos -sx *yPos -cx *cy *zPos 
												VALUE:-sx
												OPERATOR:+
												VARIABLE:cx 
														NAME:cx
														IGNORED:
												OPERATOR:*
												VARIABLE:sy 
														NAME:sy
														IGNORED:
												OPERATOR:*
												VARIABLE:xPos 
														NAME:xPos
														IGNORED:
												OPERATOR:-
												VARIABLE:sx 
														NAME:sx
														IGNORED:
												OPERATOR:*
												VARIABLE:yPos 
														NAME:yPos
														IGNORED:
												OPERATOR:-
												VARIABLE:cx 
														NAME:cx
														IGNORED:
												OPERATOR:*
												VARIABLE:cy 
														NAME:cy
														IGNORED:
												OPERATOR:*
												VARIABLE:zPos 
														NAME:zPos
														IGNORED:
										KEYWORD:,
										EXPRESSION:1
												VALUE:1
								KEYWORD:]
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> normalMatrix   = new  Float32Array  ( 9 )
NAME:normalMatrix 
		NAME:normalMatrix
		IGNORED:
IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Float32Array  ( 9 )
		KEYWORD:new 
		TYPE:Float32Array 
				TYPE:Float32Array
				IGNORED:
		COMPOSITE:( 9 )
				KEYWORD:(
				SEQUENCE:9
						EXPRESSION:9
								VALUE:9
				KEYWORD:)


[FOR, ASSIGNMENT, LINE_OF_CODE] -------> for ( var i  = 0 ; i  < 3 ; i  ++  )
KEYWORD:for
KEYWORD:(
COMPOSITE:var i  = 0
		VARIABLE:var i 
				KEYWORD:var
				NAME:i 
						NAME:i
						IGNORED:
		KEYWORD:=
		EXPRESSION:0
				VALUE:0
KEYWORD:;
VALUE:i 
		VALUE:i
		IGNORED:
KEYWORD:<
EXPRESSION:3
		VALUE:3
KEYWORD:;
SEQUENCE:i  ++ 
		COMPOSITE:i  ++ 
				VARIABLE:i 
						VARIABLE:i
						IGNORED:
				KEYWORD:++
				EXPRESSION:
						IGNORED:
KEYWORD:)


[FOR, ASSIGNMENT, LINE_OF_CODE] -------> for ( var j  = 0 ; j  < 3 ; j  ++  )
KEYWORD:for
KEYWORD:(
COMPOSITE:var j  = 0
		VARIABLE:var j 
				KEYWORD:var
				NAME:j 
						NAME:j
						IGNORED:
		KEYWORD:=
		EXPRESSION:0
				VALUE:0
KEYWORD:;
VALUE:j 
		VALUE:j
		IGNORED:
KEYWORD:<
EXPRESSION:3
		VALUE:3
KEYWORD:;
SEQUENCE:j  ++ 
		COMPOSITE:j  ++ 
				VARIABLE:j 
						VARIABLE:j
						IGNORED:
				KEYWORD:++
				EXPRESSION:
						IGNORED:
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> normalMatrix [ i +3*j  ]  = mvMatrix [ i +4*j  ]
NAME:normalMatrix [ i +3*j  ]
		NAME:normalMatrix
		COMPOSITE:[ i +3*j  ]
				KEYWORD:[
				EXPRESSION:i +3*j 
						NAME:i 
								NAME:i
								IGNORED:
						OPERATOR:+
						VALUE:3
						OPERATOR:*
						NAME:j 
								NAME:j
								IGNORED:
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:mvMatrix [ i +4*j  ]
		VARIABLE:mvMatrix [ i +4*j  ]
				NAME:mvMatrix
				COMPOSITE:[ i +4*j  ]
						KEYWORD:[
						EXPRESSION:i +4*j 
								VARIABLE:i 
										NAME:i
										IGNORED:
								OPERATOR:+
								VALUE:4
								OPERATOR:*
								VARIABLE:j 
										NAME:j
										IGNORED:
						KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniform3f ( ambientColorUniform , 0.1, 0.1, 0.1 )
OPENGL_CALL:gl. uniform3f ( ambientColorUniform , 0.1, 0.1, 0.1 )
		KEYWORD:gl.
		NAME:uniform3f
		KEYWORD:(
		SEQUENCE:ambientColorUniform , 0.1, 0.1, 0.1
				EXPRESSION:ambientColorUniform 
						VARIABLE:ambientColorUniform 
								NAME:ambientColorUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0.1
						VALUE:0.1
				KEYWORD:, 
				EXPRESSION:0.1
						VALUE:0.1
				KEYWORD:, 
				EXPRESSION:0.1
						VALUE:0.1
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var lightLoc  = new  Float32Array  ( [ 0,4,2,1 ] )
VARIABLE:var lightLoc 
		KEYWORD:var
		NAME:lightLoc 
				NAME:lightLoc
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Float32Array  ( [ 0,4,2,1 ] )
		KEYWORD:new 
		TYPE:Float32Array 
				TYPE:Float32Array
				IGNORED:
		COMPOSITE:( [ 0,4,2,1 ] )
				KEYWORD:(
				SEQUENCE:[ 0,4,2,1 ]
						ARRAY_CONTENT:[ 0,4,2,1 ]
								KEYWORD:[
								SEQUENCE:0,4,2,1
										EXPRESSION:0
												VALUE:0
										KEYWORD:,
										EXPRESSION:4
												VALUE:4
										KEYWORD:,
										EXPRESSION:2
												VALUE:2
										KEYWORD:,
										EXPRESSION:1
												VALUE:1
								KEYWORD:]
				KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var tlightLoc  =  multiplyMatrixVector  ( pMatrix ,  multiplyMatrixVector  ( mvMatrix , lightLoc  ) )
VARIABLE:var tlightLoc 
		KEYWORD:var
		NAME:tlightLoc 
				NAME:tlightLoc
				IGNORED:
KEYWORD:=
CALL: multiplyMatrixVector  ( pMatrix ,  multiplyMatrixVector  ( mvMatrix , lightLoc  ) )
		IGNORED:
		SEQUENCE:multiplyMatrixVector  ( pMatrix ,  multiplyMatrixVector  ( mvMatrix , lightLoc  ) )
				COMPOSITE:multiplyMatrixVector  ( pMatrix ,  multiplyMatrixVector  ( mvMatrix , lightLoc  ) )
						COMPOSITE:multiplyMatrixVector 
								NAME:multiplyMatrixVector
								IGNORED:
						KEYWORD:(
						SEQUENCE:pMatrix ,  multiplyMatrixVector  ( mvMatrix , lightLoc  )
								EXPRESSION:pMatrix 
										VARIABLE:pMatrix 
												NAME:pMatrix
												IGNORED:
								KEYWORD:, 
								EXPRESSION: multiplyMatrixVector  ( mvMatrix , lightLoc  )
										CALL: multiplyMatrixVector  ( mvMatrix , lightLoc  )
												IGNORED:
												SEQUENCE:multiplyMatrixVector  ( mvMatrix , lightLoc  )
														COMPOSITE:multiplyMatrixVector  ( mvMatrix , lightLoc  )
																COMPOSITE:multiplyMatrixVector 
																		NAME:multiplyMatrixVector
																		IGNORED:
																KEYWORD:(
																SEQUENCE:mvMatrix , lightLoc 
																		EXPRESSION:mvMatrix 
																				VARIABLE:mvMatrix 
																						NAME:mvMatrix
																						IGNORED:
																		KEYWORD:, 
																		EXPRESSION:lightLoc 
																				VARIABLE:lightLoc 
																						NAME:lightLoc
																						IGNORED:
																KEYWORD:)
						KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniform3f ( pointLightingLocationUniform , tlightLoc [ 0 ], tlightLoc [ 1 ], tlightLoc [ 2 ] )
OPENGL_CALL:gl. uniform3f ( pointLightingLocationUniform , tlightLoc [ 0 ], tlightLoc [ 1 ], tlightLoc [ 2 ] )
		KEYWORD:gl.
		NAME:uniform3f
		KEYWORD:(
		SEQUENCE:pointLightingLocationUniform , tlightLoc [ 0 ], tlightLoc [ 1 ], tlightLoc [ 2 ]
				EXPRESSION:pointLightingLocationUniform 
						VARIABLE:pointLightingLocationUniform 
								NAME:pointLightingLocationUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:tlightLoc [ 0 ]
						VARIABLE:tlightLoc [ 0 ]
								NAME:tlightLoc
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:tlightLoc [ 1 ]
						VARIABLE:tlightLoc [ 1 ]
								NAME:tlightLoc
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:tlightLoc [ 2 ]
						VARIABLE:tlightLoc [ 2 ]
								NAME:tlightLoc
								COMPOSITE:[ 2 ]
										KEYWORD:[
										EXPRESSION:2
												VALUE:2
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniform3f ( pointLightingDiffuseColorUniform , 0.5, 0.5, 0.5 )
OPENGL_CALL:gl. uniform3f ( pointLightingDiffuseColorUniform , 0.5, 0.5, 0.5 )
		KEYWORD:gl.
		NAME:uniform3f
		KEYWORD:(
		SEQUENCE:pointLightingDiffuseColorUniform , 0.5, 0.5, 0.5
				EXPRESSION:pointLightingDiffuseColorUniform 
						VARIABLE:pointLightingDiffuseColorUniform 
								NAME:pointLightingDiffuseColorUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0.5
						VALUE:0.5
				KEYWORD:, 
				EXPRESSION:0.5
						VALUE:0.5
				KEYWORD:, 
				EXPRESSION:0.5
						VALUE:0.5
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniform3f ( pointLightingSpecularColorUniform , 0.5, 0.5, 0.5 )
OPENGL_CALL:gl. uniform3f ( pointLightingSpecularColorUniform , 0.5, 0.5, 0.5 )
		KEYWORD:gl.
		NAME:uniform3f
		KEYWORD:(
		SEQUENCE:pointLightingSpecularColorUniform , 0.5, 0.5, 0.5
				EXPRESSION:pointLightingSpecularColorUniform 
						VARIABLE:pointLightingSpecularColorUniform 
								NAME:pointLightingSpecularColorUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0.5
						VALUE:0.5
				KEYWORD:, 
				EXPRESSION:0.5
						VALUE:0.5
				KEYWORD:, 
				EXPRESSION:0.5
						VALUE:0.5
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniform1f ( materialShininessUniform , 50 )
OPENGL_CALL:gl. uniform1f ( materialShininessUniform , 50 )
		KEYWORD:gl.
		NAME:uniform1f
		KEYWORD:(
		SEQUENCE:materialShininessUniform , 50
				EXPRESSION:materialShininessUniform 
						VARIABLE:materialShininessUniform 
								NAME:materialShininessUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:50
						VALUE:50
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniform1f ( alphaUniform , 1 )
OPENGL_CALL:gl. uniform1f ( alphaUniform , 1 )
		KEYWORD:gl.
		NAME:uniform1f
		KEYWORD:(
		SEQUENCE:alphaUniform , 1
				EXPRESSION:alphaUniform 
						VARIABLE:alphaUniform 
								NAME:alphaUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:1
						VALUE:1
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. frontFace ( gl. CCW )
OPENGL_CALL:gl. frontFace ( gl. CCW )
		KEYWORD:gl.
		NAME:frontFace
		KEYWORD:(
		SEQUENCE:gl. CCW
				EXPRESSION:gl. CCW
						OPENGL_CONSTANT:gl. CCW
								KEYWORD:gl.
								NAME:CCW
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, cubeVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:cubeVertexPositionBuffer [ 0 ]
						VARIABLE:cubeVertexPositionBuffer [ 0 ]
								NAME:cubeVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( vertexPositionAttribute , cubeVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( vertexPositionAttribute , cubeVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:vertexPositionAttribute , cubeVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:vertexPositionAttribute 
						VARIABLE:vertexPositionAttribute 
								NAME:vertexPositionAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:cubeVertexPositionBuffer [ 1 ]
						VARIABLE:cubeVertexPositionBuffer [ 1 ]
								NAME:cubeVertexPositionBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexNormalBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexNormalBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, cubeVertexNormalBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:cubeVertexNormalBuffer [ 0 ]
						VARIABLE:cubeVertexNormalBuffer [ 0 ]
								NAME:cubeVertexNormalBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( vertexNormalAttribute , cubeVertexNormalBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( vertexNormalAttribute , cubeVertexNormalBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:vertexNormalAttribute , cubeVertexNormalBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:vertexNormalAttribute 
						VARIABLE:vertexNormalAttribute 
								NAME:vertexNormalAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:cubeVertexNormalBuffer [ 1 ]
						VARIABLE:cubeVertexNormalBuffer [ 1 ]
								NAME:cubeVertexNormalBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexTextureCoordBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, cubeVertexTextureCoordBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, cubeVertexTextureCoordBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:cubeVertexTextureCoordBuffer [ 0 ]
						VARIABLE:cubeVertexTextureCoordBuffer [ 0 ]
								NAME:cubeVertexTextureCoordBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( textureCoordAttribute , cubeVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( textureCoordAttribute , cubeVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:textureCoordAttribute , cubeVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:textureCoordAttribute 
						VARIABLE:textureCoordAttribute 
								NAME:textureCoordAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:cubeVertexTextureCoordBuffer [ 1 ]
						VARIABLE:cubeVertexTextureCoordBuffer [ 1 ]
								NAME:cubeVertexTextureCoordBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. activeTexture ( gl. TEXTURE0 )
OPENGL_CALL:gl. activeTexture ( gl. TEXTURE0 )
		KEYWORD:gl.
		NAME:activeTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE0
				EXPRESSION:gl. TEXTURE0
						OPENGL_CONSTANT:gl. TEXTURE0
								KEYWORD:gl.
								NAME:TEXTURE0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindTexture ( gl. TEXTURE_2D, textures [ 0 ] )
OPENGL_CALL:gl. bindTexture ( gl. TEXTURE_2D, textures [ 0 ] )
		KEYWORD:gl.
		NAME:bindTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, textures [ 0 ]
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:textures [ 0 ]
						VARIABLE:textures [ 0 ]
								NAME:textures
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniform1i ( samplerUniform , 0 )
OPENGL_CALL:gl. uniform1i ( samplerUniform , 0 )
		KEYWORD:gl.
		NAME:uniform1i
		KEYWORD:(
		SEQUENCE:samplerUniform , 0
				EXPRESSION:samplerUniform 
						VARIABLE:samplerUniform 
								NAME:samplerUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, cubeVertexIndexBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, cubeVertexIndexBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ELEMENT_ARRAY_BUFFER, cubeVertexIndexBuffer [ 0 ]
				EXPRESSION:gl. ELEMENT_ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ELEMENT_ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ELEMENT_ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:cubeVertexIndexBuffer [ 0 ]
						VARIABLE:cubeVertexIndexBuffer [ 0 ]
								NAME:cubeVertexIndexBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.setMatrixUniforms  ( gl  )
CALL: this.setMatrixUniforms  ( gl  )
		IGNORED:
		SEQUENCE:this.setMatrixUniforms  ( gl  )
				COMPOSITE:this.setMatrixUniforms  ( gl  )
						COMPOSITE:this.setMatrixUniforms 
								NAME:this.setMatrixUniforms
								IGNORED:
						KEYWORD:(
						SEQUENCE:gl 
								EXPRESSION:gl 
										VARIABLE:gl 
												NAME:gl
												IGNORED:
						KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. drawElements ( gl. TRIANGLES, cubeVertexIndexBuffer [ 2 ], gl. UNSIGNED_SHORT, 0 )
OPENGL_CALL:gl. drawElements ( gl. TRIANGLES, cubeVertexIndexBuffer [ 2 ], gl. UNSIGNED_SHORT, 0 )
		KEYWORD:gl.
		NAME:drawElements
		KEYWORD:(
		SEQUENCE:gl. TRIANGLES, cubeVertexIndexBuffer [ 2 ], gl. UNSIGNED_SHORT, 0
				EXPRESSION:gl. TRIANGLES
						OPENGL_CONSTANT:gl. TRIANGLES
								KEYWORD:gl.
								NAME:TRIANGLES
				KEYWORD:, 
				EXPRESSION:cubeVertexIndexBuffer [ 2 ]
						VARIABLE:cubeVertexIndexBuffer [ 2 ]
								NAME:cubeVertexIndexBuffer
								COMPOSITE:[ 2 ]
										KEYWORD:[
										EXPRESSION:2
												VALUE:2
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. UNSIGNED_SHORT
						OPENGL_CONSTANT:gl. UNSIGNED_SHORT
								KEYWORD:gl.
								NAME:UNSIGNED_SHORT
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, doorVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, doorVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, doorVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:doorVertexPositionBuffer [ 0 ]
						VARIABLE:doorVertexPositionBuffer [ 0 ]
								NAME:doorVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( vertexPositionAttribute , doorVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( vertexPositionAttribute , doorVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:vertexPositionAttribute , doorVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:vertexPositionAttribute 
						VARIABLE:vertexPositionAttribute 
								NAME:vertexPositionAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:doorVertexPositionBuffer [ 1 ]
						VARIABLE:doorVertexPositionBuffer [ 1 ]
								NAME:doorVertexPositionBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, doorVertexNormalBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, doorVertexNormalBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, doorVertexNormalBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:doorVertexNormalBuffer [ 0 ]
						VARIABLE:doorVertexNormalBuffer [ 0 ]
								NAME:doorVertexNormalBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( vertexNormalAttribute , doorVertexNormalBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( vertexNormalAttribute , doorVertexNormalBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:vertexNormalAttribute , doorVertexNormalBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:vertexNormalAttribute 
						VARIABLE:vertexNormalAttribute 
								NAME:vertexNormalAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:doorVertexNormalBuffer [ 1 ]
						VARIABLE:doorVertexNormalBuffer [ 1 ]
								NAME:doorVertexNormalBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, doorVertexTextureCoordBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, doorVertexTextureCoordBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, doorVertexTextureCoordBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:doorVertexTextureCoordBuffer [ 0 ]
						VARIABLE:doorVertexTextureCoordBuffer [ 0 ]
								NAME:doorVertexTextureCoordBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( textureCoordAttribute , doorVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( textureCoordAttribute , doorVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:textureCoordAttribute , doorVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:textureCoordAttribute 
						VARIABLE:textureCoordAttribute 
								NAME:textureCoordAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:doorVertexTextureCoordBuffer [ 1 ]
						VARIABLE:doorVertexTextureCoordBuffer [ 1 ]
								NAME:doorVertexTextureCoordBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. activeTexture ( gl. TEXTURE0 )
OPENGL_CALL:gl. activeTexture ( gl. TEXTURE0 )
		KEYWORD:gl.
		NAME:activeTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE0
				EXPRESSION:gl. TEXTURE0
						OPENGL_CONSTANT:gl. TEXTURE0
								KEYWORD:gl.
								NAME:TEXTURE0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindTexture ( gl. TEXTURE_2D, textures [ 3 ] )
OPENGL_CALL:gl. bindTexture ( gl. TEXTURE_2D, textures [ 3 ] )
		KEYWORD:gl.
		NAME:bindTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, textures [ 3 ]
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:textures [ 3 ]
						VARIABLE:textures [ 3 ]
								NAME:textures
								COMPOSITE:[ 3 ]
										KEYWORD:[
										EXPRESSION:3
												VALUE:3
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniform1i ( samplerUniform , 0 )
OPENGL_CALL:gl. uniform1i ( samplerUniform , 0 )
		KEYWORD:gl.
		NAME:uniform1i
		KEYWORD:(
		SEQUENCE:samplerUniform , 0
				EXPRESSION:samplerUniform 
						VARIABLE:samplerUniform 
								NAME:samplerUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.setMatrixUniforms  ( gl  )
CALL: this.setMatrixUniforms  ( gl  )
		IGNORED:
		SEQUENCE:this.setMatrixUniforms  ( gl  )
				COMPOSITE:this.setMatrixUniforms  ( gl  )
						COMPOSITE:this.setMatrixUniforms 
								NAME:this.setMatrixUniforms
								IGNORED:
						KEYWORD:(
						SEQUENCE:gl 
								EXPRESSION:gl 
										VARIABLE:gl 
												NAME:gl
												IGNORED:
						KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. drawArrays ( gl. TRIANGLE_STRIP, 0, doorVertexPositionBuffer [ 2 ] )
OPENGL_CALL:gl. drawArrays ( gl. TRIANGLE_STRIP, 0, doorVertexPositionBuffer [ 2 ] )
		KEYWORD:gl.
		NAME:drawArrays
		KEYWORD:(
		SEQUENCE:gl. TRIANGLE_STRIP, 0, doorVertexPositionBuffer [ 2 ]
				EXPRESSION:gl. TRIANGLE_STRIP
						OPENGL_CONSTANT:gl. TRIANGLE_STRIP
								KEYWORD:gl.
								NAME:TRIANGLE_STRIP
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:doorVertexPositionBuffer [ 2 ]
						VARIABLE:doorVertexPositionBuffer [ 2 ]
								NAME:doorVertexPositionBuffer
								COMPOSITE:[ 2 ]
										KEYWORD:[
										EXPRESSION:2
												VALUE:2
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. disable ( gl. CULL_FACE )
OPENGL_CALL:gl. disable ( gl. CULL_FACE )
		KEYWORD:gl.
		NAME:disable
		KEYWORD:(
		SEQUENCE:gl. CULL_FACE
				EXPRESSION:gl. CULL_FACE
						OPENGL_CONSTANT:gl. CULL_FACE
								KEYWORD:gl.
								NAME:CULL_FACE
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix2   = new  Float32Array  ( mvMatrix  )
NAME:mvMatrix2 
		NAME:mvMatrix2
		IGNORED:
IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Float32Array  ( mvMatrix  )
		KEYWORD:new 
		TYPE:Float32Array 
				TYPE:Float32Array
				IGNORED:
		COMPOSITE:( mvMatrix  )
				KEYWORD:(
				SEQUENCE:mvMatrix 
						EXPRESSION:mvMatrix 
								VARIABLE:mvMatrix 
										NAME:mvMatrix
										IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix [ 0 ] * = 10
NAME:mvMatrix [ 0 ]
		NAME:mvMatrix
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
KEYWORD:*
KEYWORD:=
EXPRESSION:10
		VALUE:10


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix [ 1 ] * = 10
NAME:mvMatrix [ 1 ]
		NAME:mvMatrix
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
KEYWORD:*
KEYWORD:=
EXPRESSION:10
		VALUE:10


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix [ 2 ] * = 10
NAME:mvMatrix [ 2 ]
		NAME:mvMatrix
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
KEYWORD:*
KEYWORD:=
EXPRESSION:10
		VALUE:10


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix [ 8 ] * = 10
NAME:mvMatrix [ 8 ]
		NAME:mvMatrix
		COMPOSITE:[ 8 ]
				KEYWORD:[
				EXPRESSION:8
						VALUE:8
				KEYWORD:]
KEYWORD:*
KEYWORD:=
EXPRESSION:10
		VALUE:10


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix [ 9 ] * = 10
NAME:mvMatrix [ 9 ]
		NAME:mvMatrix
		COMPOSITE:[ 9 ]
				KEYWORD:[
				EXPRESSION:9
						VALUE:9
				KEYWORD:]
KEYWORD:*
KEYWORD:=
EXPRESSION:10
		VALUE:10


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix [ 10 ] * = 10
NAME:mvMatrix [ 10 ]
		NAME:mvMatrix
		COMPOSITE:[ 10 ]
				KEYWORD:[
				EXPRESSION:10
						VALUE:10
				KEYWORD:]
KEYWORD:*
KEYWORD:=
EXPRESSION:10
		VALUE:10


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> normalMatrix   = new  Float32Array  ( 9 )
NAME:normalMatrix 
		NAME:normalMatrix
		IGNORED:
IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Float32Array  ( 9 )
		KEYWORD:new 
		TYPE:Float32Array 
				TYPE:Float32Array
				IGNORED:
		COMPOSITE:( 9 )
				KEYWORD:(
				SEQUENCE:9
						EXPRESSION:9
								VALUE:9
				KEYWORD:)


[FOR, ASSIGNMENT, LINE_OF_CODE] -------> for ( var i  = 0 ; i  < 3 ; i  ++  )
KEYWORD:for
KEYWORD:(
COMPOSITE:var i  = 0
		VARIABLE:var i 
				KEYWORD:var
				NAME:i 
						NAME:i
						IGNORED:
		KEYWORD:=
		EXPRESSION:0
				VALUE:0
KEYWORD:;
VALUE:i 
		VALUE:i
		IGNORED:
KEYWORD:<
EXPRESSION:3
		VALUE:3
KEYWORD:;
SEQUENCE:i  ++ 
		COMPOSITE:i  ++ 
				VARIABLE:i 
						VARIABLE:i
						IGNORED:
				KEYWORD:++
				EXPRESSION:
						IGNORED:
KEYWORD:)


[FOR, ASSIGNMENT, LINE_OF_CODE] -------> for ( var j  = 0 ; j  < 3 ; j  ++  )
KEYWORD:for
KEYWORD:(
COMPOSITE:var j  = 0
		VARIABLE:var j 
				KEYWORD:var
				NAME:j 
						NAME:j
						IGNORED:
		KEYWORD:=
		EXPRESSION:0
				VALUE:0
KEYWORD:;
VALUE:j 
		VALUE:j
		IGNORED:
KEYWORD:<
EXPRESSION:3
		VALUE:3
KEYWORD:;
SEQUENCE:j  ++ 
		COMPOSITE:j  ++ 
				VARIABLE:j 
						VARIABLE:j
						IGNORED:
				KEYWORD:++
				EXPRESSION:
						IGNORED:
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> normalMatrix [ i +3*j  ]  = mvMatrix [ i +4*j  ]
NAME:normalMatrix [ i +3*j  ]
		NAME:normalMatrix
		COMPOSITE:[ i +3*j  ]
				KEYWORD:[
				EXPRESSION:i +3*j 
						NAME:i 
								NAME:i
								IGNORED:
						OPERATOR:+
						VALUE:3
						OPERATOR:*
						NAME:j 
								NAME:j
								IGNORED:
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:mvMatrix [ i +4*j  ]
		VARIABLE:mvMatrix [ i +4*j  ]
				NAME:mvMatrix
				COMPOSITE:[ i +4*j  ]
						KEYWORD:[
						EXPRESSION:i +4*j 
								VARIABLE:i 
										NAME:i
										IGNORED:
								OPERATOR:+
								VALUE:4
								OPERATOR:*
								VARIABLE:j 
										NAME:j
										IGNORED:
						KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, greenVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, greenVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, greenVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:greenVertexPositionBuffer [ 0 ]
						VARIABLE:greenVertexPositionBuffer [ 0 ]
								NAME:greenVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( vertexPositionAttribute , greenVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( vertexPositionAttribute , greenVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:vertexPositionAttribute , greenVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:vertexPositionAttribute 
						VARIABLE:vertexPositionAttribute 
								NAME:vertexPositionAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:greenVertexPositionBuffer [ 1 ]
						VARIABLE:greenVertexPositionBuffer [ 1 ]
								NAME:greenVertexPositionBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, greenVertexNormalBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, greenVertexNormalBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, greenVertexNormalBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:greenVertexNormalBuffer [ 0 ]
						VARIABLE:greenVertexNormalBuffer [ 0 ]
								NAME:greenVertexNormalBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( vertexNormalAttribute , greenVertexNormalBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( vertexNormalAttribute , greenVertexNormalBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:vertexNormalAttribute , greenVertexNormalBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:vertexNormalAttribute 
						VARIABLE:vertexNormalAttribute 
								NAME:vertexNormalAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:greenVertexNormalBuffer [ 1 ]
						VARIABLE:greenVertexNormalBuffer [ 1 ]
								NAME:greenVertexNormalBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, greenVertexTextureCoordBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, greenVertexTextureCoordBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, greenVertexTextureCoordBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:greenVertexTextureCoordBuffer [ 0 ]
						VARIABLE:greenVertexTextureCoordBuffer [ 0 ]
								NAME:greenVertexTextureCoordBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( textureCoordAttribute , greenVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( textureCoordAttribute , greenVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:textureCoordAttribute , greenVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:textureCoordAttribute 
						VARIABLE:textureCoordAttribute 
								NAME:textureCoordAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:greenVertexTextureCoordBuffer [ 1 ]
						VARIABLE:greenVertexTextureCoordBuffer [ 1 ]
								NAME:greenVertexTextureCoordBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. activeTexture ( gl. TEXTURE0 )
OPENGL_CALL:gl. activeTexture ( gl. TEXTURE0 )
		KEYWORD:gl.
		NAME:activeTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE0
				EXPRESSION:gl. TEXTURE0
						OPENGL_CONSTANT:gl. TEXTURE0
								KEYWORD:gl.
								NAME:TEXTURE0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindTexture ( gl. TEXTURE_2D, textures [ 2 ] )
OPENGL_CALL:gl. bindTexture ( gl. TEXTURE_2D, textures [ 2 ] )
		KEYWORD:gl.
		NAME:bindTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, textures [ 2 ]
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:textures [ 2 ]
						VARIABLE:textures [ 2 ]
								NAME:textures
								COMPOSITE:[ 2 ]
										KEYWORD:[
										EXPRESSION:2
												VALUE:2
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniform1i ( samplerUniform , 0 )
OPENGL_CALL:gl. uniform1i ( samplerUniform , 0 )
		KEYWORD:gl.
		NAME:uniform1i
		KEYWORD:(
		SEQUENCE:samplerUniform , 0
				EXPRESSION:samplerUniform 
						VARIABLE:samplerUniform 
								NAME:samplerUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.setMatrixUniforms  ( gl  )
CALL: this.setMatrixUniforms  ( gl  )
		IGNORED:
		SEQUENCE:this.setMatrixUniforms  ( gl  )
				COMPOSITE:this.setMatrixUniforms  ( gl  )
						COMPOSITE:this.setMatrixUniforms 
								NAME:this.setMatrixUniforms
								IGNORED:
						KEYWORD:(
						SEQUENCE:gl 
								EXPRESSION:gl 
										VARIABLE:gl 
												NAME:gl
												IGNORED:
						KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. drawArrays ( gl. TRIANGLE_STRIP, 0, greenVertexPositionBuffer [ 2 ] )
OPENGL_CALL:gl. drawArrays ( gl. TRIANGLE_STRIP, 0, greenVertexPositionBuffer [ 2 ] )
		KEYWORD:gl.
		NAME:drawArrays
		KEYWORD:(
		SEQUENCE:gl. TRIANGLE_STRIP, 0, greenVertexPositionBuffer [ 2 ]
				EXPRESSION:gl. TRIANGLE_STRIP
						OPENGL_CONSTANT:gl. TRIANGLE_STRIP
								KEYWORD:gl.
								NAME:TRIANGLE_STRIP
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:greenVertexPositionBuffer [ 2 ]
						VARIABLE:greenVertexPositionBuffer [ 2 ]
								NAME:greenVertexPositionBuffer
								COMPOSITE:[ 2 ]
										KEYWORD:[
										EXPRESSION:2
												VALUE:2
										KEYWORD:]
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix   = new  Float32Array  ( mvMatrix2  )
NAME:mvMatrix 
		NAME:mvMatrix
		IGNORED:
IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Float32Array  ( mvMatrix2  )
		KEYWORD:new 
		TYPE:Float32Array 
				TYPE:Float32Array
				IGNORED:
		COMPOSITE:( mvMatrix2  )
				KEYWORD:(
				SEQUENCE:mvMatrix2 
						EXPRESSION:mvMatrix2 
								VARIABLE:mvMatrix2 
										NAME:mvMatrix2
										IGNORED:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. enable ( gl. CULL_FACE )
OPENGL_CALL:gl. enable ( gl. CULL_FACE )
		KEYWORD:gl.
		NAME:enable
		KEYWORD:(
		SEQUENCE:gl. CULL_FACE
				EXPRESSION:gl. CULL_FACE
						OPENGL_CONSTANT:gl. CULL_FACE
								KEYWORD:gl.
								NAME:CULL_FACE
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix [ 13 ] + = 2*cx 
NAME:mvMatrix [ 13 ]
		NAME:mvMatrix
		COMPOSITE:[ 13 ]
				KEYWORD:[
				EXPRESSION:13
						VALUE:13
				KEYWORD:]
KEYWORD:+
KEYWORD:=
EXPRESSION:2*cx 
		VALUE:2
		OPERATOR:*
		VARIABLE:cx 
				NAME:cx
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix [ 14 ] + = 2*sx 
NAME:mvMatrix [ 14 ]
		NAME:mvMatrix
		COMPOSITE:[ 14 ]
				KEYWORD:[
				EXPRESSION:14
						VALUE:14
				KEYWORD:]
KEYWORD:+
KEYWORD:=
EXPRESSION:2*sx 
		VALUE:2
		OPERATOR:*
		VARIABLE:sx 
				NAME:sx
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> normalMatrix   = new  Float32Array  ( 9 )
NAME:normalMatrix 
		NAME:normalMatrix
		IGNORED:
IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Float32Array  ( 9 )
		KEYWORD:new 
		TYPE:Float32Array 
				TYPE:Float32Array
				IGNORED:
		COMPOSITE:( 9 )
				KEYWORD:(
				SEQUENCE:9
						EXPRESSION:9
								VALUE:9
				KEYWORD:)


[FOR, ASSIGNMENT, LINE_OF_CODE] -------> for ( var i  = 0 ; i  < 3 ; i  ++  )
KEYWORD:for
KEYWORD:(
COMPOSITE:var i  = 0
		VARIABLE:var i 
				KEYWORD:var
				NAME:i 
						NAME:i
						IGNORED:
		KEYWORD:=
		EXPRESSION:0
				VALUE:0
KEYWORD:;
VALUE:i 
		VALUE:i
		IGNORED:
KEYWORD:<
EXPRESSION:3
		VALUE:3
KEYWORD:;
SEQUENCE:i  ++ 
		COMPOSITE:i  ++ 
				VARIABLE:i 
						VARIABLE:i
						IGNORED:
				KEYWORD:++
				EXPRESSION:
						IGNORED:
KEYWORD:)


[FOR, ASSIGNMENT, LINE_OF_CODE] -------> for ( var j  = 0 ; j  < 3 ; j  ++  )
KEYWORD:for
KEYWORD:(
COMPOSITE:var j  = 0
		VARIABLE:var j 
				KEYWORD:var
				NAME:j 
						NAME:j
						IGNORED:
		KEYWORD:=
		EXPRESSION:0
				VALUE:0
KEYWORD:;
VALUE:j 
		VALUE:j
		IGNORED:
KEYWORD:<
EXPRESSION:3
		VALUE:3
KEYWORD:;
SEQUENCE:j  ++ 
		COMPOSITE:j  ++ 
				VARIABLE:j 
						VARIABLE:j
						IGNORED:
				KEYWORD:++
				EXPRESSION:
						IGNORED:
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> normalMatrix [ i +3*j  ]  = mvMatrix [ i +4*j  ]
NAME:normalMatrix [ i +3*j  ]
		NAME:normalMatrix
		COMPOSITE:[ i +3*j  ]
				KEYWORD:[
				EXPRESSION:i +3*j 
						NAME:i 
								NAME:i
								IGNORED:
						OPERATOR:+
						VALUE:3
						OPERATOR:*
						NAME:j 
								NAME:j
								IGNORED:
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:mvMatrix [ i +4*j  ]
		VARIABLE:mvMatrix [ i +4*j  ]
				NAME:mvMatrix
				COMPOSITE:[ i +4*j  ]
						KEYWORD:[
						EXPRESSION:i +4*j 
								VARIABLE:i 
										NAME:i
										IGNORED:
								OPERATOR:+
								VALUE:4
								OPERATOR:*
								VARIABLE:j 
										NAME:j
										IGNORED:
						KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, pyramidVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, pyramidVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, pyramidVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:pyramidVertexPositionBuffer [ 0 ]
						VARIABLE:pyramidVertexPositionBuffer [ 0 ]
								NAME:pyramidVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( vertexPositionAttribute , pyramidVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( vertexPositionAttribute , pyramidVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:vertexPositionAttribute , pyramidVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:vertexPositionAttribute 
						VARIABLE:vertexPositionAttribute 
								NAME:vertexPositionAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:pyramidVertexPositionBuffer [ 1 ]
						VARIABLE:pyramidVertexPositionBuffer [ 1 ]
								NAME:pyramidVertexPositionBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, pyramidVertexNormalBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, pyramidVertexNormalBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, pyramidVertexNormalBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:pyramidVertexNormalBuffer [ 0 ]
						VARIABLE:pyramidVertexNormalBuffer [ 0 ]
								NAME:pyramidVertexNormalBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( vertexNormalAttribute , pyramidVertexNormalBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( vertexNormalAttribute , pyramidVertexNormalBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:vertexNormalAttribute , pyramidVertexNormalBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:vertexNormalAttribute 
						VARIABLE:vertexNormalAttribute 
								NAME:vertexNormalAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:pyramidVertexNormalBuffer [ 1 ]
						VARIABLE:pyramidVertexNormalBuffer [ 1 ]
								NAME:pyramidVertexNormalBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, pyramidVertexTextureCoordBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, pyramidVertexTextureCoordBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, pyramidVertexTextureCoordBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:pyramidVertexTextureCoordBuffer [ 0 ]
						VARIABLE:pyramidVertexTextureCoordBuffer [ 0 ]
								NAME:pyramidVertexTextureCoordBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( textureCoordAttribute , pyramidVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( textureCoordAttribute , pyramidVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:textureCoordAttribute , pyramidVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:textureCoordAttribute 
						VARIABLE:textureCoordAttribute 
								NAME:textureCoordAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:pyramidVertexTextureCoordBuffer [ 1 ]
						VARIABLE:pyramidVertexTextureCoordBuffer [ 1 ]
								NAME:pyramidVertexTextureCoordBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. activeTexture ( gl. TEXTURE0 )
OPENGL_CALL:gl. activeTexture ( gl. TEXTURE0 )
		KEYWORD:gl.
		NAME:activeTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE0
				EXPRESSION:gl. TEXTURE0
						OPENGL_CONSTANT:gl. TEXTURE0
								KEYWORD:gl.
								NAME:TEXTURE0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindTexture ( gl. TEXTURE_2D, textures [ 1 ] )
OPENGL_CALL:gl. bindTexture ( gl. TEXTURE_2D, textures [ 1 ] )
		KEYWORD:gl.
		NAME:bindTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, textures [ 1 ]
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:textures [ 1 ]
						VARIABLE:textures [ 1 ]
								NAME:textures
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniform1i ( samplerUniform , 0 )
OPENGL_CALL:gl. uniform1i ( samplerUniform , 0 )
		KEYWORD:gl.
		NAME:uniform1i
		KEYWORD:(
		SEQUENCE:samplerUniform , 0
				EXPRESSION:samplerUniform 
						VARIABLE:samplerUniform 
								NAME:samplerUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, pyramidVertexIndexBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, pyramidVertexIndexBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ELEMENT_ARRAY_BUFFER, pyramidVertexIndexBuffer [ 0 ]
				EXPRESSION:gl. ELEMENT_ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ELEMENT_ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ELEMENT_ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:pyramidVertexIndexBuffer [ 0 ]
						VARIABLE:pyramidVertexIndexBuffer [ 0 ]
								NAME:pyramidVertexIndexBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.setMatrixUniforms  ( gl  )
CALL: this.setMatrixUniforms  ( gl  )
		IGNORED:
		SEQUENCE:this.setMatrixUniforms  ( gl  )
				COMPOSITE:this.setMatrixUniforms  ( gl  )
						COMPOSITE:this.setMatrixUniforms 
								NAME:this.setMatrixUniforms
								IGNORED:
						KEYWORD:(
						SEQUENCE:gl 
								EXPRESSION:gl 
										VARIABLE:gl 
												NAME:gl
												IGNORED:
						KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. drawElements ( gl. TRIANGLES, pyramidVertexIndexBuffer [ 2 ], gl. UNSIGNED_SHORT, 0 )
OPENGL_CALL:gl. drawElements ( gl. TRIANGLES, pyramidVertexIndexBuffer [ 2 ], gl. UNSIGNED_SHORT, 0 )
		KEYWORD:gl.
		NAME:drawElements
		KEYWORD:(
		SEQUENCE:gl. TRIANGLES, pyramidVertexIndexBuffer [ 2 ], gl. UNSIGNED_SHORT, 0
				EXPRESSION:gl. TRIANGLES
						OPENGL_CONSTANT:gl. TRIANGLES
								KEYWORD:gl.
								NAME:TRIANGLES
				KEYWORD:, 
				EXPRESSION:pyramidVertexIndexBuffer [ 2 ]
						VARIABLE:pyramidVertexIndexBuffer [ 2 ]
								NAME:pyramidVertexIndexBuffer
								COMPOSITE:[ 2 ]
										KEYWORD:[
										EXPRESSION:2
												VALUE:2
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. UNSIGNED_SHORT
						OPENGL_CONSTANT:gl. UNSIGNED_SHORT
								KEYWORD:gl.
								NAME:UNSIGNED_SHORT
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix   = new  Float32Array  ( mvMatrix2  )
NAME:mvMatrix 
		NAME:mvMatrix
		IGNORED:
IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Float32Array  ( mvMatrix2  )
		KEYWORD:new 
		TYPE:Float32Array 
				TYPE:Float32Array
				IGNORED:
		COMPOSITE:( mvMatrix2  )
				KEYWORD:(
				SEQUENCE:mvMatrix2 
						EXPRESSION:mvMatrix2 
								VARIABLE:mvMatrix2 
										NAME:mvMatrix2
										IGNORED:
				KEYWORD:)


[FOR, ASSIGNMENT, LINE_OF_CODE] -------> for ( var i  = 0 ; i  < 12 ; i  ++  )
KEYWORD:for
KEYWORD:(
COMPOSITE:var i  = 0
		VARIABLE:var i 
				KEYWORD:var
				NAME:i 
						NAME:i
						IGNORED:
		KEYWORD:=
		EXPRESSION:0
				VALUE:0
KEYWORD:;
VALUE:i 
		VALUE:i
		IGNORED:
KEYWORD:<
EXPRESSION:12
		VALUE:12
KEYWORD:;
SEQUENCE:i  ++ 
		COMPOSITE:i  ++ 
				VARIABLE:i 
						VARIABLE:i
						IGNORED:
				KEYWORD:++
				EXPRESSION:
						IGNORED:
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix [ i  ] * = 0.01
NAME:mvMatrix [ i  ]
		NAME:mvMatrix
		COMPOSITE:[ i  ]
				KEYWORD:[
				EXPRESSION:i 
						NAME:i 
								NAME:i
								IGNORED:
				KEYWORD:]
KEYWORD:*
KEYWORD:=
EXPRESSION:0.01
		VALUE:0.01


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var xt  = -11+tractorx 
VARIABLE:var xt 
		KEYWORD:var
		NAME:xt 
				NAME:xt
				IGNORED:
KEYWORD:=
EXPRESSION:-11+tractorx 
		VALUE:-11
		OPERATOR:+
		VARIABLE:tractorx 
				NAME:tractorx
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var yt  = -1
VARIABLE:var yt 
		KEYWORD:var
		NAME:yt 
				NAME:yt
				IGNORED:
KEYWORD:=
EXPRESSION:-1
		VALUE:-1


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var zt  = 4
VARIABLE:var zt 
		KEYWORD:var
		NAME:zt 
				NAME:zt
				IGNORED:
KEYWORD:=
EXPRESSION:4
		VALUE:4


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix [ 12 ] + = cy *xt +sy *zt 
NAME:mvMatrix [ 12 ]
		NAME:mvMatrix
		COMPOSITE:[ 12 ]
				KEYWORD:[
				EXPRESSION:12
						VALUE:12
				KEYWORD:]
KEYWORD:+
KEYWORD:=
EXPRESSION:cy *xt +sy *zt 
		VARIABLE:cy 
				NAME:cy
				IGNORED:
		OPERATOR:*
		VARIABLE:xt 
				NAME:xt
				IGNORED:
		OPERATOR:+
		VARIABLE:sy 
				NAME:sy
				IGNORED:
		OPERATOR:*
		VARIABLE:zt 
				NAME:zt
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix [ 13 ] + = sx *sy *xt +cx *yt -cy *sx *zt 
NAME:mvMatrix [ 13 ]
		NAME:mvMatrix
		COMPOSITE:[ 13 ]
				KEYWORD:[
				EXPRESSION:13
						VALUE:13
				KEYWORD:]
KEYWORD:+
KEYWORD:=
EXPRESSION:sx *sy *xt +cx *yt -cy *sx *zt 
		VARIABLE:sx 
				NAME:sx
				IGNORED:
		OPERATOR:*
		VARIABLE:sy 
				NAME:sy
				IGNORED:
		OPERATOR:*
		VARIABLE:xt 
				NAME:xt
				IGNORED:
		OPERATOR:+
		VARIABLE:cx 
				NAME:cx
				IGNORED:
		OPERATOR:*
		VARIABLE:yt 
				NAME:yt
				IGNORED:
		OPERATOR:-
		VARIABLE:cy 
				NAME:cy
				IGNORED:
		OPERATOR:*
		VARIABLE:sx 
				NAME:sx
				IGNORED:
		OPERATOR:*
		VARIABLE:zt 
				NAME:zt
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix [ 14 ] + = -cx*sy *xt +sx *yt +cx *cy *zt 
NAME:mvMatrix [ 14 ]
		NAME:mvMatrix
		COMPOSITE:[ 14 ]
				KEYWORD:[
				EXPRESSION:14
						VALUE:14
				KEYWORD:]
KEYWORD:+
KEYWORD:=
EXPRESSION:-cx*sy *xt +sx *yt +cx *cy *zt 
		VALUE:-cx
		OPERATOR:*
		VARIABLE:sy 
				NAME:sy
				IGNORED:
		OPERATOR:*
		VARIABLE:xt 
				NAME:xt
				IGNORED:
		OPERATOR:+
		VARIABLE:sx 
				NAME:sx
				IGNORED:
		OPERATOR:*
		VARIABLE:yt 
				NAME:yt
				IGNORED:
		OPERATOR:+
		VARIABLE:cx 
				NAME:cx
				IGNORED:
		OPERATOR:*
		VARIABLE:cy 
				NAME:cy
				IGNORED:
		OPERATOR:*
		VARIABLE:zt 
				NAME:zt
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> normalMatrix   = new  Float32Array  ( 9 )
NAME:normalMatrix 
		NAME:normalMatrix
		IGNORED:
IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Float32Array  ( 9 )
		KEYWORD:new 
		TYPE:Float32Array 
				TYPE:Float32Array
				IGNORED:
		COMPOSITE:( 9 )
				KEYWORD:(
				SEQUENCE:9
						EXPRESSION:9
								VALUE:9
				KEYWORD:)


[FOR, ASSIGNMENT, LINE_OF_CODE] -------> for ( var i  = 0 ; i  < 3 ; i  ++  )
KEYWORD:for
KEYWORD:(
COMPOSITE:var i  = 0
		VARIABLE:var i 
				KEYWORD:var
				NAME:i 
						NAME:i
						IGNORED:
		KEYWORD:=
		EXPRESSION:0
				VALUE:0
KEYWORD:;
VALUE:i 
		VALUE:i
		IGNORED:
KEYWORD:<
EXPRESSION:3
		VALUE:3
KEYWORD:;
SEQUENCE:i  ++ 
		COMPOSITE:i  ++ 
				VARIABLE:i 
						VARIABLE:i
						IGNORED:
				KEYWORD:++
				EXPRESSION:
						IGNORED:
KEYWORD:)


[FOR, ASSIGNMENT, LINE_OF_CODE] -------> for ( var j  = 0 ; j  < 3 ; j  ++  )
KEYWORD:for
KEYWORD:(
COMPOSITE:var j  = 0
		VARIABLE:var j 
				KEYWORD:var
				NAME:j 
						NAME:j
						IGNORED:
		KEYWORD:=
		EXPRESSION:0
				VALUE:0
KEYWORD:;
VALUE:j 
		VALUE:j
		IGNORED:
KEYWORD:<
EXPRESSION:3
		VALUE:3
KEYWORD:;
SEQUENCE:j  ++ 
		COMPOSITE:j  ++ 
				VARIABLE:j 
						VARIABLE:j
						IGNORED:
				KEYWORD:++
				EXPRESSION:
						IGNORED:
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> normalMatrix [ i +3*j  ]  = mvMatrix [ i +4*j  ]
NAME:normalMatrix [ i +3*j  ]
		NAME:normalMatrix
		COMPOSITE:[ i +3*j  ]
				KEYWORD:[
				EXPRESSION:i +3*j 
						NAME:i 
								NAME:i
								IGNORED:
						OPERATOR:+
						VALUE:3
						OPERATOR:*
						NAME:j 
								NAME:j
								IGNORED:
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:mvMatrix [ i +4*j  ]
		VARIABLE:mvMatrix [ i +4*j  ]
				NAME:mvMatrix
				COMPOSITE:[ i +4*j  ]
						KEYWORD:[
						EXPRESSION:i +4*j 
								VARIABLE:i 
										NAME:i
										IGNORED:
								OPERATOR:+
								VALUE:4
								OPERATOR:*
								VARIABLE:j 
										NAME:j
										IGNORED:
						KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, tractorVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, tractorVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, tractorVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:tractorVertexPositionBuffer [ 0 ]
						VARIABLE:tractorVertexPositionBuffer [ 0 ]
								NAME:tractorVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( vertexPositionAttribute , tractorVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( vertexPositionAttribute , tractorVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:vertexPositionAttribute , tractorVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:vertexPositionAttribute 
						VARIABLE:vertexPositionAttribute 
								NAME:vertexPositionAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:tractorVertexPositionBuffer [ 1 ]
						VARIABLE:tractorVertexPositionBuffer [ 1 ]
								NAME:tractorVertexPositionBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, tractorVertexNormalBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, tractorVertexNormalBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, tractorVertexNormalBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:tractorVertexNormalBuffer [ 0 ]
						VARIABLE:tractorVertexNormalBuffer [ 0 ]
								NAME:tractorVertexNormalBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( vertexNormalAttribute , tractorVertexNormalBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( vertexNormalAttribute , tractorVertexNormalBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:vertexNormalAttribute , tractorVertexNormalBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:vertexNormalAttribute 
						VARIABLE:vertexNormalAttribute 
								NAME:vertexNormalAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:tractorVertexNormalBuffer [ 1 ]
						VARIABLE:tractorVertexNormalBuffer [ 1 ]
								NAME:tractorVertexNormalBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, tractorVertexTextureCoordBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, tractorVertexTextureCoordBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, tractorVertexTextureCoordBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:tractorVertexTextureCoordBuffer [ 0 ]
						VARIABLE:tractorVertexTextureCoordBuffer [ 0 ]
								NAME:tractorVertexTextureCoordBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( textureCoordAttribute , tractorVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( textureCoordAttribute , tractorVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:textureCoordAttribute , tractorVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:textureCoordAttribute 
						VARIABLE:textureCoordAttribute 
								NAME:textureCoordAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:tractorVertexTextureCoordBuffer [ 1 ]
						VARIABLE:tractorVertexTextureCoordBuffer [ 1 ]
								NAME:tractorVertexTextureCoordBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindTexture ( gl. TEXTURE_2D, textures [ 4 ] )
OPENGL_CALL:gl. bindTexture ( gl. TEXTURE_2D, textures [ 4 ] )
		KEYWORD:gl.
		NAME:bindTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, textures [ 4 ]
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:textures [ 4 ]
						VARIABLE:textures [ 4 ]
								NAME:textures
								COMPOSITE:[ 4 ]
										KEYWORD:[
										EXPRESSION:4
												VALUE:4
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniform1i ( samplerUniform , 0 )
OPENGL_CALL:gl. uniform1i ( samplerUniform , 0 )
		KEYWORD:gl.
		NAME:uniform1i
		KEYWORD:(
		SEQUENCE:samplerUniform , 0
				EXPRESSION:samplerUniform 
						VARIABLE:samplerUniform 
								NAME:samplerUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, tractorVertexIndexBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, tractorVertexIndexBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ELEMENT_ARRAY_BUFFER, tractorVertexIndexBuffer [ 0 ]
				EXPRESSION:gl. ELEMENT_ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ELEMENT_ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ELEMENT_ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:tractorVertexIndexBuffer [ 0 ]
						VARIABLE:tractorVertexIndexBuffer [ 0 ]
								NAME:tractorVertexIndexBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.setMatrixUniforms  ( gl  )
CALL: this.setMatrixUniforms  ( gl  )
		IGNORED:
		SEQUENCE:this.setMatrixUniforms  ( gl  )
				COMPOSITE:this.setMatrixUniforms  ( gl  )
						COMPOSITE:this.setMatrixUniforms 
								NAME:this.setMatrixUniforms
								IGNORED:
						KEYWORD:(
						SEQUENCE:gl 
								EXPRESSION:gl 
										VARIABLE:gl 
												NAME:gl
												IGNORED:
						KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. drawElements ( gl. TRIANGLES, tractorVertexIndexBuffer [ 2 ], gl. UNSIGNED_SHORT, 0 )
OPENGL_CALL:gl. drawElements ( gl. TRIANGLES, tractorVertexIndexBuffer [ 2 ], gl. UNSIGNED_SHORT, 0 )
		KEYWORD:gl.
		NAME:drawElements
		KEYWORD:(
		SEQUENCE:gl. TRIANGLES, tractorVertexIndexBuffer [ 2 ], gl. UNSIGNED_SHORT, 0
				EXPRESSION:gl. TRIANGLES
						OPENGL_CONSTANT:gl. TRIANGLES
								KEYWORD:gl.
								NAME:TRIANGLES
				KEYWORD:, 
				EXPRESSION:tractorVertexIndexBuffer [ 2 ]
						VARIABLE:tractorVertexIndexBuffer [ 2 ]
								NAME:tractorVertexIndexBuffer
								COMPOSITE:[ 2 ]
										KEYWORD:[
										EXPRESSION:2
												VALUE:2
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. UNSIGNED_SHORT
						OPENGL_CONSTANT:gl. UNSIGNED_SHORT
								KEYWORD:gl.
								NAME:UNSIGNED_SHORT
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix   = mvMatrix2 
NAME:mvMatrix 
		NAME:mvMatrix
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:mvMatrix2 
		VARIABLE:mvMatrix2 
				NAME:mvMatrix2
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var cs  =  Math.cos  ( seagulAngle  )
VARIABLE:var cs 
		KEYWORD:var
		NAME:cs 
				NAME:cs
				IGNORED:
KEYWORD:=
CALL: Math.cos  ( seagulAngle  )
		IGNORED:
		SEQUENCE:Math.cos  ( seagulAngle  )
				COMPOSITE:Math.cos  ( seagulAngle  )
						COMPOSITE:Math.cos 
								NAME:Math.cos
								IGNORED:
						KEYWORD:(
						SEQUENCE:seagulAngle 
								EXPRESSION:seagulAngle 
										VARIABLE:seagulAngle 
												NAME:seagulAngle
												IGNORED:
						KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var ss  =  Math.sin  ( seagulAngle  )
VARIABLE:var ss 
		KEYWORD:var
		NAME:ss 
				NAME:ss
				IGNORED:
KEYWORD:=
CALL: Math.sin  ( seagulAngle  )
		IGNORED:
		SEQUENCE:Math.sin  ( seagulAngle  )
				COMPOSITE:Math.sin  ( seagulAngle  )
						COMPOSITE:Math.sin 
								NAME:Math.sin
								IGNORED:
						KEYWORD:(
						SEQUENCE:seagulAngle 
								EXPRESSION:seagulAngle 
										VARIABLE:seagulAngle 
												NAME:seagulAngle
												IGNORED:
						KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> xt   = -3*cs -xPos 
NAME:xt 
		NAME:xt
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:-3*cs -xPos 
		VALUE:-3
		OPERATOR:*
		VARIABLE:cs 
				NAME:cs
				IGNORED:
		OPERATOR:-
		VARIABLE:xPos 
				NAME:xPos
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> yt   = 2-yPos 
NAME:yt 
		NAME:yt
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:2-yPos 
		VALUE:2
		OPERATOR:-
		VARIABLE:yPos 
				NAME:yPos
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> zt   = 4*ss -zPos 
NAME:zt 
		NAME:zt
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:4*ss -zPos 
		VALUE:4
		OPERATOR:*
		VARIABLE:ss 
				NAME:ss
				IGNORED:
		OPERATOR:-
		VARIABLE:zPos 
				NAME:zPos
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var s  = 0.3
VARIABLE:var s 
		KEYWORD:var
		NAME:s 
				NAME:s
				IGNORED:
KEYWORD:=
EXPRESSION:0.3
		VALUE:0.3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix [ 0 ]  = cs *cy *s -s *ss *sy 
NAME:mvMatrix [ 0 ]
		NAME:mvMatrix
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:cs *cy *s -s *ss *sy 
		VARIABLE:cs 
				NAME:cs
				IGNORED:
		OPERATOR:*
		VARIABLE:cy 
				NAME:cy
				IGNORED:
		OPERATOR:*
		VARIABLE:s 
				NAME:s
				IGNORED:
		OPERATOR:-
		VARIABLE:s 
				NAME:s
				IGNORED:
		OPERATOR:*
		VARIABLE:ss 
				NAME:ss
				IGNORED:
		OPERATOR:*
		VARIABLE:sy 
				NAME:sy
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix [ 1 ]  = cy *s *ss *sx +cs *s *sx *sy 
NAME:mvMatrix [ 1 ]
		NAME:mvMatrix
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:cy *s *ss *sx +cs *s *sx *sy 
		VARIABLE:cy 
				NAME:cy
				IGNORED:
		OPERATOR:*
		VARIABLE:s 
				NAME:s
				IGNORED:
		OPERATOR:*
		VARIABLE:ss 
				NAME:ss
				IGNORED:
		OPERATOR:*
		VARIABLE:sx 
				NAME:sx
				IGNORED:
		OPERATOR:+
		VARIABLE:cs 
				NAME:cs
				IGNORED:
		OPERATOR:*
		VARIABLE:s 
				NAME:s
				IGNORED:
		OPERATOR:*
		VARIABLE:sx 
				NAME:sx
				IGNORED:
		OPERATOR:*
		VARIABLE:sy 
				NAME:sy
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix [ 2 ]  = -cx*cy *s *ss -cs *cx *s *sy 
NAME:mvMatrix [ 2 ]
		NAME:mvMatrix
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:-cx*cy *s *ss -cs *cx *s *sy 
		VALUE:-cx
		OPERATOR:*
		VARIABLE:cy 
				NAME:cy
				IGNORED:
		OPERATOR:*
		VARIABLE:s 
				NAME:s
				IGNORED:
		OPERATOR:*
		VARIABLE:ss 
				NAME:ss
				IGNORED:
		OPERATOR:-
		VARIABLE:cs 
				NAME:cs
				IGNORED:
		OPERATOR:*
		VARIABLE:cx 
				NAME:cx
				IGNORED:
		OPERATOR:*
		VARIABLE:s 
				NAME:s
				IGNORED:
		OPERATOR:*
		VARIABLE:sy 
				NAME:sy
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix [ 3 ]  = 0
NAME:mvMatrix [ 3 ]
		NAME:mvMatrix
		COMPOSITE:[ 3 ]
				KEYWORD:[
				EXPRESSION:3
						VALUE:3
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix [ 4 ]  = 0
NAME:mvMatrix [ 4 ]
		NAME:mvMatrix
		COMPOSITE:[ 4 ]
				KEYWORD:[
				EXPRESSION:4
						VALUE:4
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix [ 5 ]  = cx *s 
NAME:mvMatrix [ 5 ]
		NAME:mvMatrix
		COMPOSITE:[ 5 ]
				KEYWORD:[
				EXPRESSION:5
						VALUE:5
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:cx *s 
		VARIABLE:cx 
				NAME:cx
				IGNORED:
		OPERATOR:*
		VARIABLE:s 
				NAME:s
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix [ 6 ]  = s *sx 
NAME:mvMatrix [ 6 ]
		NAME:mvMatrix
		COMPOSITE:[ 6 ]
				KEYWORD:[
				EXPRESSION:6
						VALUE:6
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:s *sx 
		VARIABLE:s 
				NAME:s
				IGNORED:
		OPERATOR:*
		VARIABLE:sx 
				NAME:sx
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix [ 7 ]  = 0
NAME:mvMatrix [ 7 ]
		NAME:mvMatrix
		COMPOSITE:[ 7 ]
				KEYWORD:[
				EXPRESSION:7
						VALUE:7
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix [ 8 ]  = cy *s *ss +cs *s *sy 
NAME:mvMatrix [ 8 ]
		NAME:mvMatrix
		COMPOSITE:[ 8 ]
				KEYWORD:[
				EXPRESSION:8
						VALUE:8
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:cy *s *ss +cs *s *sy 
		VARIABLE:cy 
				NAME:cy
				IGNORED:
		OPERATOR:*
		VARIABLE:s 
				NAME:s
				IGNORED:
		OPERATOR:*
		VARIABLE:ss 
				NAME:ss
				IGNORED:
		OPERATOR:+
		VARIABLE:cs 
				NAME:cs
				IGNORED:
		OPERATOR:*
		VARIABLE:s 
				NAME:s
				IGNORED:
		OPERATOR:*
		VARIABLE:sy 
				NAME:sy
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix [ 9 ]  = -cs*cy *s *sx +s *ss *sx *sy 
NAME:mvMatrix [ 9 ]
		NAME:mvMatrix
		COMPOSITE:[ 9 ]
				KEYWORD:[
				EXPRESSION:9
						VALUE:9
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:-cs*cy *s *sx +s *ss *sx *sy 
		VALUE:-cs
		OPERATOR:*
		VARIABLE:cy 
				NAME:cy
				IGNORED:
		OPERATOR:*
		VARIABLE:s 
				NAME:s
				IGNORED:
		OPERATOR:*
		VARIABLE:sx 
				NAME:sx
				IGNORED:
		OPERATOR:+
		VARIABLE:s 
				NAME:s
				IGNORED:
		OPERATOR:*
		VARIABLE:ss 
				NAME:ss
				IGNORED:
		OPERATOR:*
		VARIABLE:sx 
				NAME:sx
				IGNORED:
		OPERATOR:*
		VARIABLE:sy 
				NAME:sy
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix [ 10 ]  = cs *cx *cy *s -cx *s *ss *sy 
NAME:mvMatrix [ 10 ]
		NAME:mvMatrix
		COMPOSITE:[ 10 ]
				KEYWORD:[
				EXPRESSION:10
						VALUE:10
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:cs *cx *cy *s -cx *s *ss *sy 
		VARIABLE:cs 
				NAME:cs
				IGNORED:
		OPERATOR:*
		VARIABLE:cx 
				NAME:cx
				IGNORED:
		OPERATOR:*
		VARIABLE:cy 
				NAME:cy
				IGNORED:
		OPERATOR:*
		VARIABLE:s 
				NAME:s
				IGNORED:
		OPERATOR:-
		VARIABLE:cx 
				NAME:cx
				IGNORED:
		OPERATOR:*
		VARIABLE:s 
				NAME:s
				IGNORED:
		OPERATOR:*
		VARIABLE:ss 
				NAME:ss
				IGNORED:
		OPERATOR:*
		VARIABLE:sy 
				NAME:sy
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix [ 11 ]  = 0
NAME:mvMatrix [ 11 ]
		NAME:mvMatrix
		COMPOSITE:[ 11 ]
				KEYWORD:[
				EXPRESSION:11
						VALUE:11
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix [ 12 ]  = cy *xt +sy *zt 
NAME:mvMatrix [ 12 ]
		NAME:mvMatrix
		COMPOSITE:[ 12 ]
				KEYWORD:[
				EXPRESSION:12
						VALUE:12
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:cy *xt +sy *zt 
		VARIABLE:cy 
				NAME:cy
				IGNORED:
		OPERATOR:*
		VARIABLE:xt 
				NAME:xt
				IGNORED:
		OPERATOR:+
		VARIABLE:sy 
				NAME:sy
				IGNORED:
		OPERATOR:*
		VARIABLE:zt 
				NAME:zt
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix [ 13 ]  = -cx+sx *sy *xt +cx *yt -cy *sx *zt 
NAME:mvMatrix [ 13 ]
		NAME:mvMatrix
		COMPOSITE:[ 13 ]
				KEYWORD:[
				EXPRESSION:13
						VALUE:13
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:-cx+sx *sy *xt +cx *yt -cy *sx *zt 
		VALUE:-cx
		OPERATOR:+
		VARIABLE:sx 
				NAME:sx
				IGNORED:
		OPERATOR:*
		VARIABLE:sy 
				NAME:sy
				IGNORED:
		OPERATOR:*
		VARIABLE:xt 
				NAME:xt
				IGNORED:
		OPERATOR:+
		VARIABLE:cx 
				NAME:cx
				IGNORED:
		OPERATOR:*
		VARIABLE:yt 
				NAME:yt
				IGNORED:
		OPERATOR:-
		VARIABLE:cy 
				NAME:cy
				IGNORED:
		OPERATOR:*
		VARIABLE:sx 
				NAME:sx
				IGNORED:
		OPERATOR:*
		VARIABLE:zt 
				NAME:zt
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix [ 14 ]  = -sx-cx *sy *xt +sx *yt +cx *cy *zt 
NAME:mvMatrix [ 14 ]
		NAME:mvMatrix
		COMPOSITE:[ 14 ]
				KEYWORD:[
				EXPRESSION:14
						VALUE:14
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:-sx-cx *sy *xt +sx *yt +cx *cy *zt 
		VALUE:-sx
		OPERATOR:-
		VARIABLE:cx 
				NAME:cx
				IGNORED:
		OPERATOR:*
		VARIABLE:sy 
				NAME:sy
				IGNORED:
		OPERATOR:*
		VARIABLE:xt 
				NAME:xt
				IGNORED:
		OPERATOR:+
		VARIABLE:sx 
				NAME:sx
				IGNORED:
		OPERATOR:*
		VARIABLE:yt 
				NAME:yt
				IGNORED:
		OPERATOR:+
		VARIABLE:cx 
				NAME:cx
				IGNORED:
		OPERATOR:*
		VARIABLE:cy 
				NAME:cy
				IGNORED:
		OPERATOR:*
		VARIABLE:zt 
				NAME:zt
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix [ 15 ]  = 1
NAME:mvMatrix [ 15 ]
		NAME:mvMatrix
		COMPOSITE:[ 15 ]
				KEYWORD:[
				EXPRESSION:15
						VALUE:15
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:1
		VALUE:1


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> normalMatrix   = new  Float32Array  ( 9 )
NAME:normalMatrix 
		NAME:normalMatrix
		IGNORED:
IGNORED:
KEYWORD:=
NEW_STATEMENT:new  Float32Array  ( 9 )
		KEYWORD:new 
		TYPE:Float32Array 
				TYPE:Float32Array
				IGNORED:
		COMPOSITE:( 9 )
				KEYWORD:(
				SEQUENCE:9
						EXPRESSION:9
								VALUE:9
				KEYWORD:)


[FOR, ASSIGNMENT, LINE_OF_CODE] -------> for ( var i  = 0 ; i  < 3 ; i  ++  )
KEYWORD:for
KEYWORD:(
COMPOSITE:var i  = 0
		VARIABLE:var i 
				KEYWORD:var
				NAME:i 
						NAME:i
						IGNORED:
		KEYWORD:=
		EXPRESSION:0
				VALUE:0
KEYWORD:;
VALUE:i 
		VALUE:i
		IGNORED:
KEYWORD:<
EXPRESSION:3
		VALUE:3
KEYWORD:;
SEQUENCE:i  ++ 
		COMPOSITE:i  ++ 
				VARIABLE:i 
						VARIABLE:i
						IGNORED:
				KEYWORD:++
				EXPRESSION:
						IGNORED:
KEYWORD:)


[FOR, ASSIGNMENT, LINE_OF_CODE] -------> for ( var j  = 0 ; j  < 3 ; j  ++  )
KEYWORD:for
KEYWORD:(
COMPOSITE:var j  = 0
		VARIABLE:var j 
				KEYWORD:var
				NAME:j 
						NAME:j
						IGNORED:
		KEYWORD:=
		EXPRESSION:0
				VALUE:0
KEYWORD:;
VALUE:j 
		VALUE:j
		IGNORED:
KEYWORD:<
EXPRESSION:3
		VALUE:3
KEYWORD:;
SEQUENCE:j  ++ 
		COMPOSITE:j  ++ 
				VARIABLE:j 
						VARIABLE:j
						IGNORED:
				KEYWORD:++
				EXPRESSION:
						IGNORED:
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> normalMatrix [ i +3*j  ]  = mvMatrix [ i +4*j  ]
NAME:normalMatrix [ i +3*j  ]
		NAME:normalMatrix
		COMPOSITE:[ i +3*j  ]
				KEYWORD:[
				EXPRESSION:i +3*j 
						NAME:i 
								NAME:i
								IGNORED:
						OPERATOR:+
						VALUE:3
						OPERATOR:*
						NAME:j 
								NAME:j
								IGNORED:
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:mvMatrix [ i +4*j  ]
		VARIABLE:mvMatrix [ i +4*j  ]
				NAME:mvMatrix
				COMPOSITE:[ i +4*j  ]
						KEYWORD:[
						EXPRESSION:i +4*j 
								VARIABLE:i 
										NAME:i
										IGNORED:
								OPERATOR:+
								VALUE:4
								OPERATOR:*
								VARIABLE:j 
										NAME:j
										IGNORED:
						KEYWORD:]


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, seagulVertexPositionBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, seagulVertexPositionBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, seagulVertexPositionBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:seagulVertexPositionBuffer [ 0 ]
						VARIABLE:seagulVertexPositionBuffer [ 0 ]
								NAME:seagulVertexPositionBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( vertexPositionAttribute , seagulVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( vertexPositionAttribute , seagulVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:vertexPositionAttribute , seagulVertexPositionBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:vertexPositionAttribute 
						VARIABLE:vertexPositionAttribute 
								NAME:vertexPositionAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:seagulVertexPositionBuffer [ 1 ]
						VARIABLE:seagulVertexPositionBuffer [ 1 ]
								NAME:seagulVertexPositionBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, seagulVertexNormalBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, seagulVertexNormalBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, seagulVertexNormalBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:seagulVertexNormalBuffer [ 0 ]
						VARIABLE:seagulVertexNormalBuffer [ 0 ]
								NAME:seagulVertexNormalBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( vertexNormalAttribute , seagulVertexNormalBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( vertexNormalAttribute , seagulVertexNormalBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:vertexNormalAttribute , seagulVertexNormalBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:vertexNormalAttribute 
						VARIABLE:vertexNormalAttribute 
								NAME:vertexNormalAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:seagulVertexNormalBuffer [ 1 ]
						VARIABLE:seagulVertexNormalBuffer [ 1 ]
								NAME:seagulVertexNormalBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ARRAY_BUFFER, seagulVertexTextureCoordBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ARRAY_BUFFER, seagulVertexTextureCoordBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ARRAY_BUFFER, seagulVertexTextureCoordBuffer [ 0 ]
				EXPRESSION:gl. ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:seagulVertexTextureCoordBuffer [ 0 ]
						VARIABLE:seagulVertexTextureCoordBuffer [ 0 ]
								NAME:seagulVertexTextureCoordBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. vertexAttribPointer ( textureCoordAttribute , seagulVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
OPENGL_CALL:gl. vertexAttribPointer ( textureCoordAttribute , seagulVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0 )
		KEYWORD:gl.
		NAME:vertexAttribPointer
		KEYWORD:(
		SEQUENCE:textureCoordAttribute , seagulVertexTextureCoordBuffer [ 1 ], gl. FLOAT, false , 0, 0
				EXPRESSION:textureCoordAttribute 
						VARIABLE:textureCoordAttribute 
								NAME:textureCoordAttribute
								IGNORED:
				KEYWORD:, 
				EXPRESSION:seagulVertexTextureCoordBuffer [ 1 ]
						VARIABLE:seagulVertexTextureCoordBuffer [ 1 ]
								NAME:seagulVertexTextureCoordBuffer
								COMPOSITE:[ 1 ]
										KEYWORD:[
										EXPRESSION:1
												VALUE:1
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. FLOAT
						OPENGL_CONSTANT:gl. FLOAT
								KEYWORD:gl.
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION:false 
						VARIABLE:false 
								NAME:false
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindTexture ( gl. TEXTURE_2D, textures [ 5 ] )
OPENGL_CALL:gl. bindTexture ( gl. TEXTURE_2D, textures [ 5 ] )
		KEYWORD:gl.
		NAME:bindTexture
		KEYWORD:(
		SEQUENCE:gl. TEXTURE_2D, textures [ 5 ]
				EXPRESSION:gl. TEXTURE_2D
						OPENGL_CONSTANT:gl. TEXTURE_2D
								KEYWORD:gl.
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:textures [ 5 ]
						VARIABLE:textures [ 5 ]
								NAME:textures
								COMPOSITE:[ 5 ]
										KEYWORD:[
										EXPRESSION:5
												VALUE:5
										KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. uniform1i ( samplerUniform , 0 )
OPENGL_CALL:gl. uniform1i ( samplerUniform , 0 )
		KEYWORD:gl.
		NAME:uniform1i
		KEYWORD:(
		SEQUENCE:samplerUniform , 0
				EXPRESSION:samplerUniform 
						VARIABLE:samplerUniform 
								NAME:samplerUniform
								IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, seagulVertexIndexBuffer [ 0 ] )
OPENGL_CALL:gl. bindBuffer ( gl. ELEMENT_ARRAY_BUFFER, seagulVertexIndexBuffer [ 0 ] )
		KEYWORD:gl.
		NAME:bindBuffer
		KEYWORD:(
		SEQUENCE:gl. ELEMENT_ARRAY_BUFFER, seagulVertexIndexBuffer [ 0 ]
				EXPRESSION:gl. ELEMENT_ARRAY_BUFFER
						OPENGL_CONSTANT:gl. ELEMENT_ARRAY_BUFFER
								KEYWORD:gl.
								NAME:ELEMENT_ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION:seagulVertexIndexBuffer [ 0 ]
						VARIABLE:seagulVertexIndexBuffer [ 0 ]
								NAME:seagulVertexIndexBuffer
								COMPOSITE:[ 0 ]
										KEYWORD:[
										EXPRESSION:0
												VALUE:0
										KEYWORD:]
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.setMatrixUniforms  ( gl  )
CALL: this.setMatrixUniforms  ( gl  )
		IGNORED:
		SEQUENCE:this.setMatrixUniforms  ( gl  )
				COMPOSITE:this.setMatrixUniforms  ( gl  )
						COMPOSITE:this.setMatrixUniforms 
								NAME:this.setMatrixUniforms
								IGNORED:
						KEYWORD:(
						SEQUENCE:gl 
								EXPRESSION:gl 
										VARIABLE:gl 
												NAME:gl
												IGNORED:
						KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] -------> gl. drawElements ( gl. TRIANGLES, seagulVertexIndexBuffer [ 2 ], gl. UNSIGNED_SHORT, 0 )
OPENGL_CALL:gl. drawElements ( gl. TRIANGLES, seagulVertexIndexBuffer [ 2 ], gl. UNSIGNED_SHORT, 0 )
		KEYWORD:gl.
		NAME:drawElements
		KEYWORD:(
		SEQUENCE:gl. TRIANGLES, seagulVertexIndexBuffer [ 2 ], gl. UNSIGNED_SHORT, 0
				EXPRESSION:gl. TRIANGLES
						OPENGL_CONSTANT:gl. TRIANGLES
								KEYWORD:gl.
								NAME:TRIANGLES
				KEYWORD:, 
				EXPRESSION:seagulVertexIndexBuffer [ 2 ]
						VARIABLE:seagulVertexIndexBuffer [ 2 ]
								NAME:seagulVertexIndexBuffer
								COMPOSITE:[ 2 ]
										KEYWORD:[
										EXPRESSION:2
												VALUE:2
										KEYWORD:]
				KEYWORD:, 
				EXPRESSION:gl. UNSIGNED_SHORT
						OPENGL_CONSTANT:gl. UNSIGNED_SHORT
								KEYWORD:gl.
								NAME:UNSIGNED_SHORT
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.animate  (  )
CALL: this.animate  (  )
		IGNORED:
		SEQUENCE:this.animate  (  )
				COMPOSITE:this.animate  (  )
						COMPOSITE:this.animate 
								NAME:this.animate
								IGNORED:
						KEYWORD:(
						SEQUENCE:
						KEYWORD:)


[METHOD_DECLARATION] -------> , animate : function (  )
KEYWORD:,
NAME:animate
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var timeNow  = new  Date  (  ) . getTime  (  )
VARIABLE:var timeNow 
		KEYWORD:var
		NAME:timeNow 
				NAME:timeNow
				IGNORED:
KEYWORD:=
CALL:new  Date  (  ) . getTime  (  )
		COMPOSITE:new  Date  (  ) .
				NEW_STATEMENT:new  Date  (  )
						KEYWORD:new 
						TYPE:Date 
								TYPE:Date
								IGNORED:
						COMPOSITE:(  )
								KEYWORD:(
								SEQUENCE:
								KEYWORD:)
				KEYWORD:.
		SEQUENCE:getTime  (  )
				COMPOSITE:getTime  (  )
						COMPOSITE:getTime 
								NAME:getTime
								IGNORED:
						KEYWORD:(
						SEQUENCE:
						KEYWORD:)


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( lastTime !=0 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:lastTime !=0
		VARIABLE:lastTime 
				NAME:lastTime
				IGNORED:
		OPERATOR:!=
		VALUE:0
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var elapsed  = timeNow -lastTime 
VARIABLE:var elapsed 
		KEYWORD:var
		NAME:elapsed 
				NAME:elapsed
				IGNORED:
KEYWORD:=
EXPRESSION:timeNow -lastTime 
		VARIABLE:timeNow 
				NAME:timeNow
				IGNORED:
		OPERATOR:-
		VARIABLE:lastTime 
				NAME:lastTime
				IGNORED:


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> var move  = false 
VARIABLE:var move 
		KEYWORD:var
		NAME:move 
				NAME:move
				IGNORED:
KEYWORD:=
EXPRESSION:false 
		VARIABLE:false 
				NAME:false
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( speed !=0 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:speed !=0
		VARIABLE:speed 
				NAME:speed
				IGNORED:
		OPERATOR:!=
		VALUE:0
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> xPos  - =  Math.sin  ( yaw  )*speed *elapsed 
NAME:xPos 
		NAME:xPos
		IGNORED:
KEYWORD:-
KEYWORD:=
EXPRESSION: Math.sin  ( yaw  )*speed *elapsed 
		CALL: Math.sin  ( yaw  )
				IGNORED:
				SEQUENCE:Math.sin  ( yaw  )
						COMPOSITE:Math.sin  ( yaw  )
								COMPOSITE:Math.sin 
										NAME:Math.sin
										IGNORED:
								KEYWORD:(
								SEQUENCE:yaw 
										EXPRESSION:yaw 
												VARIABLE:yaw 
														NAME:yaw
														IGNORED:
								KEYWORD:)
		OPERATOR:*
		VARIABLE:speed 
				NAME:speed
				IGNORED:
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> zPos  - =  Math.cos  ( yaw  )*speed *elapsed 
NAME:zPos 
		NAME:zPos
		IGNORED:
KEYWORD:-
KEYWORD:=
EXPRESSION: Math.cos  ( yaw  )*speed *elapsed 
		CALL: Math.cos  ( yaw  )
				IGNORED:
				SEQUENCE:Math.cos  ( yaw  )
						COMPOSITE:Math.cos  ( yaw  )
								COMPOSITE:Math.cos 
										NAME:Math.cos
										IGNORED:
								KEYWORD:(
								SEQUENCE:yaw 
										EXPRESSION:yaw 
												VARIABLE:yaw 
														NAME:yaw
														IGNORED:
								KEYWORD:)
		OPERATOR:*
		VARIABLE:speed 
				NAME:speed
				IGNORED:
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> move   = true 
NAME:move 
		NAME:move
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:true 
		VARIABLE:true 
				NAME:true
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( lspeed !=0 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:lspeed !=0
		VARIABLE:lspeed 
				NAME:lspeed
				IGNORED:
		OPERATOR:!=
		VALUE:0
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> xPos  + =  Math.cos  ( yaw  )*lspeed *elapsed 
NAME:xPos 
		NAME:xPos
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION: Math.cos  ( yaw  )*lspeed *elapsed 
		CALL: Math.cos  ( yaw  )
				IGNORED:
				SEQUENCE:Math.cos  ( yaw  )
						COMPOSITE:Math.cos  ( yaw  )
								COMPOSITE:Math.cos 
										NAME:Math.cos
										IGNORED:
								KEYWORD:(
								SEQUENCE:yaw 
										EXPRESSION:yaw 
												VARIABLE:yaw 
														NAME:yaw
														IGNORED:
								KEYWORD:)
		OPERATOR:*
		VARIABLE:lspeed 
				NAME:lspeed
				IGNORED:
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> zPos  - =  Math.sin  ( yaw  )*lspeed *elapsed 
NAME:zPos 
		NAME:zPos
		IGNORED:
KEYWORD:-
KEYWORD:=
EXPRESSION: Math.sin  ( yaw  )*lspeed *elapsed 
		CALL: Math.sin  ( yaw  )
				IGNORED:
				SEQUENCE:Math.sin  ( yaw  )
						COMPOSITE:Math.sin  ( yaw  )
								COMPOSITE:Math.sin 
										NAME:Math.sin
										IGNORED:
								KEYWORD:(
								SEQUENCE:yaw 
										EXPRESSION:yaw 
												VARIABLE:yaw 
														NAME:yaw
														IGNORED:
								KEYWORD:)
		OPERATOR:*
		VARIABLE:lspeed 
				NAME:lspeed
				IGNORED:
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> move   = true 
NAME:move 
		NAME:move
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:true 
		VARIABLE:true 
				NAME:true
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( move  )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:move 
		VARIABLE:move 
				NAME:move
				IGNORED:
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> joggingAngle  + = elapsed *0.0104
NAME:joggingAngle 
		NAME:joggingAngle
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION:elapsed *0.0104
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:
		OPERATOR:*
		VALUE:0.0104


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> yPos   =  Math.sin  ( joggingAngle  )/20+yStart 
NAME:yPos 
		NAME:yPos
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION: Math.sin  ( joggingAngle  )/20+yStart 
		CALL: Math.sin  ( joggingAngle  )
				IGNORED:
				SEQUENCE:Math.sin  ( joggingAngle  )
						COMPOSITE:Math.sin  ( joggingAngle  )
								COMPOSITE:Math.sin 
										NAME:Math.sin
										IGNORED:
								KEYWORD:(
								SEQUENCE:joggingAngle 
										EXPRESSION:joggingAngle 
												VARIABLE:joggingAngle 
														NAME:joggingAngle
														IGNORED:
								KEYWORD:)
		OPERATOR:/
		VALUE:20
		OPERATOR:+
		VARIABLE:yStart 
				NAME:yStart
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> yaw  + = yawRate *elapsed 
NAME:yaw 
		NAME:yaw
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION:yawRate *elapsed 
		VARIABLE:yawRate 
				NAME:yawRate
				IGNORED:
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pitch  + = pitchRate *elapsed 
NAME:pitch 
		NAME:pitch
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION:pitchRate *elapsed 
		VARIABLE:pitchRate 
				NAME:pitchRate
				IGNORED:
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> seagulAngle  + = 0.0008*elapsed 
NAME:seagulAngle 
		NAME:seagulAngle
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION:0.0008*elapsed 
		VALUE:0.0008
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tractorx  + = 0.0008*elapsed 
NAME:tractorx 
		NAME:tractorx
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION:0.0008*elapsed 
		VALUE:0.0008
		OPERATOR:*
		VARIABLE:elapsed 
				NAME:elapsed
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( tractorx >22 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:tractorx >22
		VARIABLE:tractorx 
				NAME:tractorx
				IGNORED:
		OPERATOR:>
		VALUE:22
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> tractorx   = 0
NAME:tractorx 
		NAME:tractorx
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> lastTime   = timeNow 
NAME:lastTime 
		NAME:lastTime
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:timeNow 
		VARIABLE:timeNow 
				NAME:timeNow
				IGNORED:


[METHOD_DECLARATION] -------> , handleKeys : function (  )
KEYWORD:,
NAME:handleKeys
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:
KEYWORD:)


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands [ 0 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands [ 0 ]
		VARIABLE:commands [ 0 ]
				NAME:commands
				COMPOSITE:[ 0 ]
						KEYWORD:[
						EXPRESSION:0
								VALUE:0
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> speed   = 0.003
NAME:speed 
		NAME:speed
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:0.003
		VALUE:0.003


[ELSE, ELSE_IF, ASSIGNMENT, LINE_OF_CODE] ------->  else if ( commands [ 1 ] )
IGNORED:
KEYWORD:else
COMPOSITE:if ( commands [ 1 ] )
		KEYWORD:if
		KEYWORD:(
		EXPRESSION:commands [ 1 ]
				VARIABLE:commands [ 1 ]
						NAME:commands
						COMPOSITE:[ 1 ]
								KEYWORD:[
								EXPRESSION:1
										VALUE:1
								KEYWORD:]
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> speed   = -0.003
NAME:speed 
		NAME:speed
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:-0.003
		VALUE:-0.003


[ELSE, ELSE_IF, ASSIGNMENT, LINE_OF_CODE] ------->  else
IGNORED:
KEYWORD:else


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> speed   = 0
NAME:speed 
		NAME:speed
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands [ 2 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands [ 2 ]
		VARIABLE:commands [ 2 ]
				NAME:commands
				COMPOSITE:[ 2 ]
						KEYWORD:[
						EXPRESSION:2
								VALUE:2
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pitchRate   = 0.00174
NAME:pitchRate 
		NAME:pitchRate
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:0.00174
		VALUE:0.00174


[ELSE, ELSE_IF, ASSIGNMENT, LINE_OF_CODE] ------->  else if ( commands [ 3 ] )
IGNORED:
KEYWORD:else
COMPOSITE:if ( commands [ 3 ] )
		KEYWORD:if
		KEYWORD:(
		EXPRESSION:commands [ 3 ]
				VARIABLE:commands [ 3 ]
						NAME:commands
						COMPOSITE:[ 3 ]
								KEYWORD:[
								EXPRESSION:3
										VALUE:3
								KEYWORD:]
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pitchRate   = -0.00174
NAME:pitchRate 
		NAME:pitchRate
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:-0.00174
		VALUE:-0.00174


[ELSE, ELSE_IF, ASSIGNMENT, LINE_OF_CODE] ------->  else
IGNORED:
KEYWORD:else


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pitchRate   = 0
NAME:pitchRate 
		NAME:pitchRate
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands [ 4 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands [ 4 ]
		VARIABLE:commands [ 4 ]
				NAME:commands
				COMPOSITE:[ 4 ]
						KEYWORD:[
						EXPRESSION:4
								VALUE:4
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> yawRate   = 0.00174
NAME:yawRate 
		NAME:yawRate
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:0.00174
		VALUE:0.00174


[ELSE, ELSE_IF, ASSIGNMENT, LINE_OF_CODE] ------->  else if ( commands [ 5 ] )
IGNORED:
KEYWORD:else
COMPOSITE:if ( commands [ 5 ] )
		KEYWORD:if
		KEYWORD:(
		EXPRESSION:commands [ 5 ]
				VARIABLE:commands [ 5 ]
						NAME:commands
						COMPOSITE:[ 5 ]
								KEYWORD:[
								EXPRESSION:5
										VALUE:5
								KEYWORD:]
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> yawRate   = -0.00174
NAME:yawRate 
		NAME:yawRate
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:-0.00174
		VALUE:-0.00174


[ELSE, ELSE_IF, ASSIGNMENT, LINE_OF_CODE] ------->  else
IGNORED:
KEYWORD:else


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> yawRate   = 0
NAME:yawRate 
		NAME:yawRate
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands [ 6 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands [ 6 ]
		VARIABLE:commands [ 6 ]
				NAME:commands
				COMPOSITE:[ 6 ]
						KEYWORD:[
						EXPRESSION:6
								VALUE:6
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> lspeed   = 0.003
NAME:lspeed 
		NAME:lspeed
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:0.003
		VALUE:0.003


[ELSE, ELSE_IF, ASSIGNMENT, LINE_OF_CODE] ------->  else if ( commands [ 7 ] )
IGNORED:
KEYWORD:else
COMPOSITE:if ( commands [ 7 ] )
		KEYWORD:if
		KEYWORD:(
		EXPRESSION:commands [ 7 ]
				VARIABLE:commands [ 7 ]
						NAME:commands
						COMPOSITE:[ 7 ]
								KEYWORD:[
								EXPRESSION:7
										VALUE:7
								KEYWORD:]
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> lspeed   = -0.003
NAME:lspeed 
		NAME:lspeed
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:-0.003
		VALUE:-0.003


[ELSE, ELSE_IF, ASSIGNMENT, LINE_OF_CODE] ------->  else
IGNORED:
KEYWORD:else


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> lspeed   = 0
NAME:lspeed 
		NAME:lspeed
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[METHOD_DECLARATION] -------> , setCommands : function ( e , value  )
KEYWORD:,
NAME:setCommands
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:e , value 
		VARIABLE:e 
				NAME:e
				IGNORED:
		KEYWORD:, 
		VARIABLE:value 
				NAME:value
				IGNORED:
KEYWORD:)


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==87 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==87
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:87
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 0 ]  = value 
NAME:commands [ 0 ]
		NAME:commands
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==83 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==83
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:83
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 1 ]  = value 
NAME:commands [ 1 ]
		NAME:commands
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==38 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==38
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:38
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 2 ]  = value 
NAME:commands [ 2 ]
		NAME:commands
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==40 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==40
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:40
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 3 ]  = value 
NAME:commands [ 3 ]
		NAME:commands
		COMPOSITE:[ 3 ]
				KEYWORD:[
				EXPRESSION:3
						VALUE:3
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==37 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==37
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:37
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 4 ]  = value 
NAME:commands [ 4 ]
		NAME:commands
		COMPOSITE:[ 4 ]
				KEYWORD:[
				EXPRESSION:4
						VALUE:4
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==39 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==39
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:39
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 5 ]  = value 
NAME:commands [ 5 ]
		NAME:commands
		COMPOSITE:[ 5 ]
				KEYWORD:[
				EXPRESSION:5
						VALUE:5
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==68 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==68
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:68
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 6 ]  = value 
NAME:commands [ 6 ]
		NAME:commands
		COMPOSITE:[ 6 ]
				KEYWORD:[
				EXPRESSION:6
						VALUE:6
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( e.keyCode ==65 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:e.keyCode ==65
		VARIABLE:e.keyCode 
				NAME:e.keyCode
				IGNORED:
		OPERATOR:==
		VALUE:65
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands [ 7 ]  = value 
NAME:commands [ 7 ]
		NAME:commands
		COMPOSITE:[ 7 ]
				KEYWORD:[
				EXPRESSION:7
						VALUE:7
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:value 
		VARIABLE:value 
				NAME:value
				IGNORED:


[METHOD_DECLARATION] -------> , keyPressed : function ( e  )
KEYWORD:,
NAME:keyPressed
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:e 
		VARIABLE:e 
				NAME:e
				IGNORED:
KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.setCommands  ( e , true  )
CALL: this.setCommands  ( e , true  )
		IGNORED:
		SEQUENCE:this.setCommands  ( e , true  )
				COMPOSITE:this.setCommands  ( e , true  )
						COMPOSITE:this.setCommands 
								NAME:this.setCommands
								IGNORED:
						KEYWORD:(
						SEQUENCE:e , true 
								EXPRESSION:e 
										VARIABLE:e 
												NAME:e
												IGNORED:
								KEYWORD:, 
								EXPRESSION:true 
										VARIABLE:true 
												NAME:true
												IGNORED:
						KEYWORD:)


[METHOD_DECLARATION] -------> , keyReleased : function ( e  )
KEYWORD:,
NAME:keyReleased
KEYWORD::
KEYWORD:function
KEYWORD:(
METHOD_VARIABLES:e 
		VARIABLE:e 
				NAME:e
				IGNORED:
KEYWORD:)


[CALL, LINE_OF_CODE] ------->  this.setCommands  ( e , false  )
CALL: this.setCommands  ( e , false  )
		IGNORED:
		SEQUENCE:this.setCommands  ( e , false  )
				COMPOSITE:this.setCommands  ( e , false  )
						COMPOSITE:this.setCommands 
								NAME:this.setCommands
								IGNORED:
						KEYWORD:(
						SEQUENCE:e , false 
								EXPRESSION:e 
										VARIABLE:e 
												NAME:e
												IGNORED:
								KEYWORD:, 
								EXPRESSION:false 
										VARIABLE:false 
												NAME:false
												IGNORED:
						KEYWORD:)


