
Test_sv1Drawer.java
[LIBRARY_DECLARATION] -------> package  test.jogl  
KEYWORD:package 
SEQUENCE:test.jogl  
		NAME:test.jogl  
				NAME:test.jogl
				IGNORED:
				IGNORED:


[LIBRARY_DECLARATION] -------> import java.nio.FloatBuffer  
KEYWORD:import
VARIABLE:java.nio.FloatBuffer  
		NAME:java.nio.FloatBuffer
		IGNORED:
		IGNORED:


[LIBRARY_DECLARATION] -------> import javax.media.opengl.GL2  
KEYWORD:import
VARIABLE:javax.media.opengl.GL2  
		NAME:javax.media.opengl.GL2
		IGNORED:
		IGNORED:


[LIBRARY_DECLARATION] -------> import test.jogl.util.Util  
KEYWORD:import
VARIABLE:test.jogl.util.Util  
		NAME:test.jogl.util.Util
		IGNORED:
		IGNORED:


[LIBRARY_DECLARATION] -------> import com.sun.opengl.util.BufferUtil  
KEYWORD:import
VARIABLE:com.sun.opengl.util.BufferUtil  
		NAME:com.sun.opengl.util.BufferUtil
		IGNORED:
		IGNORED:


[CLASS_DECLARATION] -------> public class Test_sv1Drawer
SEQUENCE:public
		KEYWORD:public
KEYWORD:class
NAME:Test_sv1Drawer


[ATTRIBUTE_DECLARATION] -------> private int vertexPositionAttribute   
SEQUENCE:private
		KEYWORD:private
TYPE:int
SEQUENCE:vertexPositionAttribute   
		COMPOSITE:vertexPositionAttribute   
				VARIABLE:vertexPositionAttribute  
						NAME:vertexPositionAttribute
						IGNORED:
						IGNORED:
				IGNORED:


[ATTRIBUTE_DECLARATION] -------> private int vertexColorAttribute   
SEQUENCE:private
		KEYWORD:private
TYPE:int
SEQUENCE:vertexColorAttribute   
		COMPOSITE:vertexColorAttribute   
				VARIABLE:vertexColorAttribute  
						NAME:vertexColorAttribute
						IGNORED:
						IGNORED:
				IGNORED:


[ATTRIBUTE_DECLARATION] -------> private int pMatrixUniform   
SEQUENCE:private
		KEYWORD:private
TYPE:int
SEQUENCE:pMatrixUniform   
		COMPOSITE:pMatrixUniform   
				VARIABLE:pMatrixUniform  
						NAME:pMatrixUniform
						IGNORED:
						IGNORED:
				IGNORED:


[ATTRIBUTE_DECLARATION] -------> private int mvMatrixUniform   
SEQUENCE:private
		KEYWORD:private
TYPE:int
SEQUENCE:mvMatrixUniform   
		COMPOSITE:mvMatrixUniform   
				VARIABLE:mvMatrixUniform  
						NAME:mvMatrixUniform
						IGNORED:
						IGNORED:
				IGNORED:


[ATTRIBUTE_DECLARATION, ATTRIBUTE_ASSIGNMENT, ASSIGNMENT] -------> private int[] triangleVertexPositionBuffer   = new  int  [ 3 ] 
SEQUENCE:private
		KEYWORD:private
VARIABLE:int[] triangleVertexPositionBuffer  
		TYPE:int[]
		NAME:triangleVertexPositionBuffer  
				NAME:triangleVertexPositionBuffer
				IGNORED:
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  int  [ 3 ] 
		KEYWORD:new 
		TYPE:int  [ 3 ]
				TYPE:int
				IGNORED:
				COMPOSITE:[ 3 ]
						KEYWORD:[
						EXPRESSION:3
								VALUE:3
						KEYWORD:]
		IGNORED:


[ATTRIBUTE_DECLARATION, ATTRIBUTE_ASSIGNMENT, ASSIGNMENT] -------> private int[] triangleVertexColorBuffer   = new  int  [ 3 ] 
SEQUENCE:private
		KEYWORD:private
VARIABLE:int[] triangleVertexColorBuffer  
		TYPE:int[]
		NAME:triangleVertexColorBuffer  
				NAME:triangleVertexColorBuffer
				IGNORED:
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  int  [ 3 ] 
		KEYWORD:new 
		TYPE:int  [ 3 ]
				TYPE:int
				IGNORED:
				COMPOSITE:[ 3 ]
						KEYWORD:[
						EXPRESSION:3
								VALUE:3
						KEYWORD:]
		IGNORED:


[ATTRIBUTE_DECLARATION, ATTRIBUTE_ASSIGNMENT, ASSIGNMENT] -------> private int[] squareVertexPositionBuffer   = new  int  [ 3 ] 
SEQUENCE:private
		KEYWORD:private
VARIABLE:int[] squareVertexPositionBuffer  
		TYPE:int[]
		NAME:squareVertexPositionBuffer  
				NAME:squareVertexPositionBuffer
				IGNORED:
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  int  [ 3 ] 
		KEYWORD:new 
		TYPE:int  [ 3 ]
				TYPE:int
				IGNORED:
				COMPOSITE:[ 3 ]
						KEYWORD:[
						EXPRESSION:3
								VALUE:3
						KEYWORD:]
		IGNORED:


[ATTRIBUTE_DECLARATION, ATTRIBUTE_ASSIGNMENT, ASSIGNMENT] -------> private int[] squareVertexColorBuffer   = new  int  [ 3 ] 
SEQUENCE:private
		KEYWORD:private
VARIABLE:int[] squareVertexColorBuffer  
		TYPE:int[]
		NAME:squareVertexColorBuffer  
				NAME:squareVertexColorBuffer
				IGNORED:
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  int  [ 3 ] 
		KEYWORD:new 
		TYPE:int  [ 3 ]
				TYPE:int
				IGNORED:
				COMPOSITE:[ 3 ]
						KEYWORD:[
						EXPRESSION:3
								VALUE:3
						KEYWORD:]
		IGNORED:


[ATTRIBUTE_DECLARATION] -------> private FloatBuffer pMatrix   
SEQUENCE:private
		KEYWORD:private
TYPE:FloatBuffer
SEQUENCE:pMatrix   
		COMPOSITE:pMatrix   
				VARIABLE:pMatrix  
						NAME:pMatrix
						IGNORED:
						IGNORED:
				IGNORED:


[ATTRIBUTE_DECLARATION] -------> private FloatBuffer mvMatrix   
SEQUENCE:private
		KEYWORD:private
TYPE:FloatBuffer
SEQUENCE:mvMatrix   
		COMPOSITE:mvMatrix   
				VARIABLE:mvMatrix  
						NAME:mvMatrix
						IGNORED:
						IGNORED:
				IGNORED:


[METHOD_DECLARATION] ------->  public void initShaders   ( GL2 gl   )
IGNORED:
SEQUENCE:public
		KEYWORD:public
VARIABLE:void initShaders  
		TYPE:void
		NAME:initShaders  
				NAME:initShaders
				IGNORED:
				IGNORED:
KEYWORD:(
METHOD_VARIABLES:GL2 gl  
		VARIABLE:GL2 gl  
				TYPE:GL2
				NAME:gl  
						NAME:gl
						IGNORED:
						IGNORED:
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> int shaderProgram   =   Util.getShaderProgram   (  gl  ,  "shaders  / shader1.fs"  ,  "shaders  / shader1.vs"   )
VARIABLE:int shaderProgram  
		TYPE:int
		NAME:shaderProgram  
				NAME:shaderProgram
				IGNORED:
				IGNORED:
KEYWORD:=
CALL:  Util.getShaderProgram   (  gl  ,  "shaders  / shader1.fs"  ,  "shaders  / shader1.vs"   )
		IGNORED:
		IGNORED:
		SEQUENCE:Util.getShaderProgram   (  gl  ,  "shaders  / shader1.fs"  ,  "shaders  / shader1.vs"   )
				COMPOSITE:Util.getShaderProgram   (  gl  ,  "shaders  / shader1.fs"  ,  "shaders  / shader1.vs"   )
						COMPOSITE:Util.getShaderProgram  
								NAME:Util.getShaderProgram
								IGNORED:
								IGNORED:
						KEYWORD:(
						SEQUENCE: gl  ,  "shaders  / shader1.fs"  ,  "shaders  / shader1.vs"  
								EXPRESSION: gl  
										COMPOSITE: gl  
												IGNORED:
												VARIABLE:gl  
														NAME:gl
														IGNORED:
														IGNORED:
								KEYWORD:, 
								EXPRESSION: "shaders  / shader1.fs"  
										COMPOSITE: "shaders  
												IGNORED:
												VARIABLE:"shaders  
														NAME:"shaders
														IGNORED:
														IGNORED:
										OPERATOR:/
										COMPOSITE: shader1.fs"  
												IGNORED:
												VARIABLE:shader1.fs"  
														NAME:shader1.fs"
														IGNORED:
														IGNORED:
								KEYWORD:, 
								EXPRESSION: "shaders  / shader1.vs"  
										COMPOSITE: "shaders  
												IGNORED:
												VARIABLE:"shaders  
														NAME:"shaders
														IGNORED:
														IGNORED:
										OPERATOR:/
										COMPOSITE: shader1.vs"  
												IGNORED:
												VARIABLE:shader1.vs"  
														NAME:shader1.vs"
														IGNORED:
														IGNORED:
						KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> vertexPositionAttribute    =  gl . gl GetAttribLocation (  shaderProgram  ,  "aVertexPosition"   )
NAME:vertexPositionAttribute  
		NAME:vertexPositionAttribute
		IGNORED:
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION: gl . gl GetAttribLocation (  shaderProgram  ,  "aVertexPosition"   )
		OPENGL_CALL: gl . gl GetAttribLocation (  shaderProgram  ,  "aVertexPosition"   )
				IGNORED:
				COMPOSITE:gl .
						VALUE:gl
						KEYWORD:.
				KEYWORD:gl
				NAME:GetAttribLocation
				KEYWORD:(
				SEQUENCE: shaderProgram  ,  "aVertexPosition"  
						EXPRESSION: shaderProgram  
								COMPOSITE: shaderProgram  
										IGNORED:
										VARIABLE:shaderProgram  
												NAME:shaderProgram
												IGNORED:
												IGNORED:
						KEYWORD:, 
						EXPRESSION: "aVertexPosition"  
								COMPOSITE: "aVertexPosition"  
										IGNORED:
										VARIABLE:"aVertexPosition"  
												NAME:"aVertexPosition"
												IGNORED:
												IGNORED:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl EnableVertexAttribArray (  vertexPositionAttribute   )
OPENGL_CALL: gl . gl EnableVertexAttribArray (  vertexPositionAttribute   )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:EnableVertexAttribArray
		KEYWORD:(
		SEQUENCE: vertexPositionAttribute  
				EXPRESSION: vertexPositionAttribute  
						COMPOSITE: vertexPositionAttribute  
								IGNORED:
								VARIABLE:vertexPositionAttribute  
										NAME:vertexPositionAttribute
										IGNORED:
										IGNORED:
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> vertexColorAttribute    =  gl . gl GetAttribLocation (  shaderProgram  ,  "aVertexColor"   )
NAME:vertexColorAttribute  
		NAME:vertexColorAttribute
		IGNORED:
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION: gl . gl GetAttribLocation (  shaderProgram  ,  "aVertexColor"   )
		OPENGL_CALL: gl . gl GetAttribLocation (  shaderProgram  ,  "aVertexColor"   )
				IGNORED:
				COMPOSITE:gl .
						VALUE:gl
						KEYWORD:.
				KEYWORD:gl
				NAME:GetAttribLocation
				KEYWORD:(
				SEQUENCE: shaderProgram  ,  "aVertexColor"  
						EXPRESSION: shaderProgram  
								COMPOSITE: shaderProgram  
										IGNORED:
										VARIABLE:shaderProgram  
												NAME:shaderProgram
												IGNORED:
												IGNORED:
						KEYWORD:, 
						EXPRESSION: "aVertexColor"  
								COMPOSITE: "aVertexColor"  
										IGNORED:
										VARIABLE:"aVertexColor"  
												NAME:"aVertexColor"
												IGNORED:
												IGNORED:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl EnableVertexAttribArray (  vertexColorAttribute   )
OPENGL_CALL: gl . gl EnableVertexAttribArray (  vertexColorAttribute   )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:EnableVertexAttribArray
		KEYWORD:(
		SEQUENCE: vertexColorAttribute  
				EXPRESSION: vertexColorAttribute  
						COMPOSITE: vertexColorAttribute  
								IGNORED:
								VARIABLE:vertexColorAttribute  
										NAME:vertexColorAttribute
										IGNORED:
										IGNORED:
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pMatrixUniform    =  gl . gl GetUniformLocation (  shaderProgram  ,  "uPMatrix"   )
NAME:pMatrixUniform  
		NAME:pMatrixUniform
		IGNORED:
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION: gl . gl GetUniformLocation (  shaderProgram  ,  "uPMatrix"   )
		OPENGL_CALL: gl . gl GetUniformLocation (  shaderProgram  ,  "uPMatrix"   )
				IGNORED:
				COMPOSITE:gl .
						VALUE:gl
						KEYWORD:.
				KEYWORD:gl
				NAME:GetUniformLocation
				KEYWORD:(
				SEQUENCE: shaderProgram  ,  "uPMatrix"  
						EXPRESSION: shaderProgram  
								COMPOSITE: shaderProgram  
										IGNORED:
										VARIABLE:shaderProgram  
												NAME:shaderProgram
												IGNORED:
												IGNORED:
						KEYWORD:, 
						EXPRESSION: "uPMatrix"  
								COMPOSITE: "uPMatrix"  
										IGNORED:
										VARIABLE:"uPMatrix"  
												NAME:"uPMatrix"
												IGNORED:
												IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrixUniform    =  gl . gl GetUniformLocation (  shaderProgram  ,  "uMVMatrix"   )
NAME:mvMatrixUniform  
		NAME:mvMatrixUniform
		IGNORED:
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION: gl . gl GetUniformLocation (  shaderProgram  ,  "uMVMatrix"   )
		OPENGL_CALL: gl . gl GetUniformLocation (  shaderProgram  ,  "uMVMatrix"   )
				IGNORED:
				COMPOSITE:gl .
						VALUE:gl
						KEYWORD:.
				KEYWORD:gl
				NAME:GetUniformLocation
				KEYWORD:(
				SEQUENCE: shaderProgram  ,  "uMVMatrix"  
						EXPRESSION: shaderProgram  
								COMPOSITE: shaderProgram  
										IGNORED:
										VARIABLE:shaderProgram  
												NAME:shaderProgram
												IGNORED:
												IGNORED:
						KEYWORD:, 
						EXPRESSION: "uMVMatrix"  
								COMPOSITE: "uMVMatrix"  
										IGNORED:
										VARIABLE:"uMVMatrix"  
												NAME:"uMVMatrix"
												IGNORED:
												IGNORED:
				KEYWORD:)


[METHOD_DECLARATION] ------->  public void setMatrixUniforms   ( GL2 gl   )
IGNORED:
SEQUENCE:public
		KEYWORD:public
VARIABLE:void setMatrixUniforms  
		TYPE:void
		NAME:setMatrixUniforms  
				NAME:setMatrixUniforms
				IGNORED:
				IGNORED:
KEYWORD:(
METHOD_VARIABLES:GL2 gl  
		VARIABLE:GL2 gl  
				TYPE:GL2
				NAME:gl  
						NAME:gl
						IGNORED:
						IGNORED:
KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl UniformMatrix4fv (  pMatrixUniform  , 16,  false  ,  pMatrix   )
OPENGL_CALL: gl . gl UniformMatrix4fv (  pMatrixUniform  , 16,  false  ,  pMatrix   )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:UniformMatrix4fv
		KEYWORD:(
		SEQUENCE: pMatrixUniform  , 16,  false  ,  pMatrix  
				EXPRESSION: pMatrixUniform  
						COMPOSITE: pMatrixUniform  
								IGNORED:
								VARIABLE:pMatrixUniform  
										NAME:pMatrixUniform
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:16
						VALUE:16
				KEYWORD:, 
				EXPRESSION: false  
						COMPOSITE: false  
								IGNORED:
								VARIABLE:false  
										NAME:false
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION: pMatrix  
						COMPOSITE: pMatrix  
								IGNORED:
								VARIABLE:pMatrix  
										NAME:pMatrix
										IGNORED:
										IGNORED:
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl UniformMatrix4fv (  mvMatrixUniform  , 16,  false  ,  mvMatrix   )
OPENGL_CALL: gl . gl UniformMatrix4fv (  mvMatrixUniform  , 16,  false  ,  mvMatrix   )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:UniformMatrix4fv
		KEYWORD:(
		SEQUENCE: mvMatrixUniform  , 16,  false  ,  mvMatrix  
				EXPRESSION: mvMatrixUniform  
						COMPOSITE: mvMatrixUniform  
								IGNORED:
								VARIABLE:mvMatrixUniform  
										NAME:mvMatrixUniform
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:16
						VALUE:16
				KEYWORD:, 
				EXPRESSION: false  
						COMPOSITE: false  
								IGNORED:
								VARIABLE:false  
										NAME:false
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION: mvMatrix  
						COMPOSITE: mvMatrix  
								IGNORED:
								VARIABLE:mvMatrix  
										NAME:mvMatrix
										IGNORED:
										IGNORED:
		KEYWORD:)


[METHOD_DECLARATION] ------->  public void initBuffers   ( GL2 gl   )
IGNORED:
SEQUENCE:public
		KEYWORD:public
VARIABLE:void initBuffers  
		TYPE:void
		NAME:initBuffers  
				NAME:initBuffers
				IGNORED:
				IGNORED:
KEYWORD:(
METHOD_VARIABLES:GL2 gl  
		VARIABLE:GL2 gl  
				TYPE:GL2
				NAME:gl  
						NAME:gl
						IGNORED:
						IGNORED:
KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl GenBuffers ( 1,  triangleVertexPositionBuffer  , 0 )
OPENGL_CALL: gl . gl GenBuffers ( 1,  triangleVertexPositionBuffer  , 0 )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:GenBuffers
		KEYWORD:(
		SEQUENCE:1,  triangleVertexPositionBuffer  , 0
				EXPRESSION:1
						VALUE:1
				KEYWORD:, 
				EXPRESSION: triangleVertexPositionBuffer  
						COMPOSITE: triangleVertexPositionBuffer  
								IGNORED:
								VARIABLE:triangleVertexPositionBuffer  
										NAME:triangleVertexPositionBuffer
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  triangleVertexPositionBuffer  [ 0 ] )
OPENGL_CALL: gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  triangleVertexPositionBuffer  [ 0 ] )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BindBuffer
		KEYWORD:(
		SEQUENCE:GL2 .GL_ ARRAY_BUFFER,  triangleVertexPositionBuffer  [ 0 ]
				EXPRESSION:GL2 .GL_ ARRAY_BUFFER
						OPENGL_CONSTANT:GL2 .GL_ ARRAY_BUFFER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION: triangleVertexPositionBuffer  [ 0 ]
						COMPOSITE: triangleVertexPositionBuffer  [ 0 ]
								IGNORED:
								VARIABLE:triangleVertexPositionBuffer  [ 0 ]
										NAME:triangleVertexPositionBuffer
										IGNORED:
										COMPOSITE:[ 0 ]
												KEYWORD:[
												EXPRESSION:0
														VALUE:0
												KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> float[] vertices   = { 0.0f,1.0f,0.0f,-1.0f,-1.0f,0.0f,1.0f,-1.0f,0.0f }
VARIABLE:float[] vertices  
		TYPE:float[]
		NAME:vertices  
				NAME:vertices
				IGNORED:
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:{ 0.0f,1.0f,0.0f,-1.0f,-1.0f,0.0f,1.0f,-1.0f,0.0f }
		KEYWORD:{
		SEQUENCE:0.0f,1.0f,0.0f,-1.0f,-1.0f,0.0f,1.0f,-1.0f,0.0f
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:0.0f
						VALUE:0.0f
		KEYWORD:}


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BufferData ( GL2 .GL_ ARRAY_BUFFER,  vertices.length  * BufferUtil.SIZEOF_FLOAT  ,   BufferUtil.newFloatBuffer   (  vertices   ), GL2 .GL_ STATIC_DRAW )
OPENGL_CALL: gl . gl BufferData ( GL2 .GL_ ARRAY_BUFFER,  vertices.length  * BufferUtil.SIZEOF_FLOAT  ,   BufferUtil.newFloatBuffer   (  vertices   ), GL2 .GL_ STATIC_DRAW )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BufferData
		KEYWORD:(
		SEQUENCE:GL2 .GL_ ARRAY_BUFFER,  vertices.length  * BufferUtil.SIZEOF_FLOAT  ,   BufferUtil.newFloatBuffer   (  vertices   ), GL2 .GL_ STATIC_DRAW
				EXPRESSION:GL2 .GL_ ARRAY_BUFFER
						OPENGL_CONSTANT:GL2 .GL_ ARRAY_BUFFER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION: vertices.length  * BufferUtil.SIZEOF_FLOAT  
						COMPOSITE: vertices.length  
								IGNORED:
								VARIABLE:vertices.length  
										NAME:vertices.length
										IGNORED:
										IGNORED:
						OPERATOR:*
						COMPOSITE: BufferUtil.SIZEOF_FLOAT  
								IGNORED:
								VARIABLE:BufferUtil.SIZEOF_FLOAT  
										NAME:BufferUtil.SIZEOF_FLOAT
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:  BufferUtil.newFloatBuffer   (  vertices   )
						CALL:  BufferUtil.newFloatBuffer   (  vertices   )
								IGNORED:
								IGNORED:
								SEQUENCE:BufferUtil.newFloatBuffer   (  vertices   )
										COMPOSITE:BufferUtil.newFloatBuffer   (  vertices   )
												COMPOSITE:BufferUtil.newFloatBuffer  
														NAME:BufferUtil.newFloatBuffer
														IGNORED:
														IGNORED:
												KEYWORD:(
												SEQUENCE: vertices  
														EXPRESSION: vertices  
																COMPOSITE: vertices  
																		IGNORED:
																		VARIABLE:vertices  
																				NAME:vertices
																				IGNORED:
																				IGNORED:
												KEYWORD:)
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ STATIC_DRAW
						OPENGL_CONSTANT:GL2 .GL_ STATIC_DRAW
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> triangleVertexPositionBuffer  [ 1 ]  = 3
NAME:triangleVertexPositionBuffer  [ 1 ]
		NAME:triangleVertexPositionBuffer
		IGNORED:
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:3
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> triangleVertexPositionBuffer  [ 2 ]  = 3
NAME:triangleVertexPositionBuffer  [ 2 ]
		NAME:triangleVertexPositionBuffer
		IGNORED:
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:3
		VALUE:3


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl GenBuffers ( 1,  triangleVertexColorBuffer  , 0 )
OPENGL_CALL: gl . gl GenBuffers ( 1,  triangleVertexColorBuffer  , 0 )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:GenBuffers
		KEYWORD:(
		SEQUENCE:1,  triangleVertexColorBuffer  , 0
				EXPRESSION:1
						VALUE:1
				KEYWORD:, 
				EXPRESSION: triangleVertexColorBuffer  
						COMPOSITE: triangleVertexColorBuffer  
								IGNORED:
								VARIABLE:triangleVertexColorBuffer  
										NAME:triangleVertexColorBuffer
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  triangleVertexColorBuffer  [ 0 ] )
OPENGL_CALL: gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  triangleVertexColorBuffer  [ 0 ] )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BindBuffer
		KEYWORD:(
		SEQUENCE:GL2 .GL_ ARRAY_BUFFER,  triangleVertexColorBuffer  [ 0 ]
				EXPRESSION:GL2 .GL_ ARRAY_BUFFER
						OPENGL_CONSTANT:GL2 .GL_ ARRAY_BUFFER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION: triangleVertexColorBuffer  [ 0 ]
						COMPOSITE: triangleVertexColorBuffer  [ 0 ]
								IGNORED:
								VARIABLE:triangleVertexColorBuffer  [ 0 ]
										NAME:triangleVertexColorBuffer
										IGNORED:
										COMPOSITE:[ 0 ]
												KEYWORD:[
												EXPRESSION:0
														VALUE:0
												KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> float[] colors   = { 1.0f,0.0f,0.0f,1.0f,0.0f,1.0f,0.0f,1.0f,0.0f,0.0f,1.0f,1.0f }
VARIABLE:float[] colors  
		TYPE:float[]
		NAME:colors  
				NAME:colors
				IGNORED:
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:{ 1.0f,0.0f,0.0f,1.0f,0.0f,1.0f,0.0f,1.0f,0.0f,0.0f,1.0f,1.0f }
		KEYWORD:{
		SEQUENCE:1.0f,0.0f,0.0f,1.0f,0.0f,1.0f,0.0f,1.0f,0.0f,0.0f,1.0f,1.0f
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:,
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:,
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
		KEYWORD:}


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BufferData ( GL2 .GL_ ARRAY_BUFFER,  colors.length  * BufferUtil.SIZEOF_FLOAT  ,   BufferUtil.newFloatBuffer   (  colors   ), GL2 .GL_ STATIC_DRAW )
OPENGL_CALL: gl . gl BufferData ( GL2 .GL_ ARRAY_BUFFER,  colors.length  * BufferUtil.SIZEOF_FLOAT  ,   BufferUtil.newFloatBuffer   (  colors   ), GL2 .GL_ STATIC_DRAW )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BufferData
		KEYWORD:(
		SEQUENCE:GL2 .GL_ ARRAY_BUFFER,  colors.length  * BufferUtil.SIZEOF_FLOAT  ,   BufferUtil.newFloatBuffer   (  colors   ), GL2 .GL_ STATIC_DRAW
				EXPRESSION:GL2 .GL_ ARRAY_BUFFER
						OPENGL_CONSTANT:GL2 .GL_ ARRAY_BUFFER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION: colors.length  * BufferUtil.SIZEOF_FLOAT  
						COMPOSITE: colors.length  
								IGNORED:
								VARIABLE:colors.length  
										NAME:colors.length
										IGNORED:
										IGNORED:
						OPERATOR:*
						COMPOSITE: BufferUtil.SIZEOF_FLOAT  
								IGNORED:
								VARIABLE:BufferUtil.SIZEOF_FLOAT  
										NAME:BufferUtil.SIZEOF_FLOAT
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:  BufferUtil.newFloatBuffer   (  colors   )
						CALL:  BufferUtil.newFloatBuffer   (  colors   )
								IGNORED:
								IGNORED:
								SEQUENCE:BufferUtil.newFloatBuffer   (  colors   )
										COMPOSITE:BufferUtil.newFloatBuffer   (  colors   )
												COMPOSITE:BufferUtil.newFloatBuffer  
														NAME:BufferUtil.newFloatBuffer
														IGNORED:
														IGNORED:
												KEYWORD:(
												SEQUENCE: colors  
														EXPRESSION: colors  
																COMPOSITE: colors  
																		IGNORED:
																		VARIABLE:colors  
																				NAME:colors
																				IGNORED:
																				IGNORED:
												KEYWORD:)
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ STATIC_DRAW
						OPENGL_CONSTANT:GL2 .GL_ STATIC_DRAW
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> triangleVertexColorBuffer  [ 1 ]  = 4
NAME:triangleVertexColorBuffer  [ 1 ]
		NAME:triangleVertexColorBuffer
		IGNORED:
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:4
		VALUE:4


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> triangleVertexColorBuffer  [ 2 ]  = 3
NAME:triangleVertexColorBuffer  [ 2 ]
		NAME:triangleVertexColorBuffer
		IGNORED:
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:3
		VALUE:3


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl GenBuffers ( 1,  squareVertexPositionBuffer  , 0 )
OPENGL_CALL: gl . gl GenBuffers ( 1,  squareVertexPositionBuffer  , 0 )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:GenBuffers
		KEYWORD:(
		SEQUENCE:1,  squareVertexPositionBuffer  , 0
				EXPRESSION:1
						VALUE:1
				KEYWORD:, 
				EXPRESSION: squareVertexPositionBuffer  
						COMPOSITE: squareVertexPositionBuffer  
								IGNORED:
								VARIABLE:squareVertexPositionBuffer  
										NAME:squareVertexPositionBuffer
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  squareVertexPositionBuffer  [ 0 ] )
OPENGL_CALL: gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  squareVertexPositionBuffer  [ 0 ] )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BindBuffer
		KEYWORD:(
		SEQUENCE:GL2 .GL_ ARRAY_BUFFER,  squareVertexPositionBuffer  [ 0 ]
				EXPRESSION:GL2 .GL_ ARRAY_BUFFER
						OPENGL_CONSTANT:GL2 .GL_ ARRAY_BUFFER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION: squareVertexPositionBuffer  [ 0 ]
						COMPOSITE: squareVertexPositionBuffer  [ 0 ]
								IGNORED:
								VARIABLE:squareVertexPositionBuffer  [ 0 ]
										NAME:squareVertexPositionBuffer
										IGNORED:
										COMPOSITE:[ 0 ]
												KEYWORD:[
												EXPRESSION:0
														VALUE:0
												KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> float[] vertices2   = { 1.0f,1.0f,0.0f,-1.0f,1.0f,0.0f,1.0f,-1.0f,0.0f,-1.0f,-1.0f,0.0f }
VARIABLE:float[] vertices2  
		TYPE:float[]
		NAME:vertices2  
				NAME:vertices2
				IGNORED:
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:{ 1.0f,1.0f,0.0f,-1.0f,1.0f,0.0f,1.0f,-1.0f,0.0f,-1.0f,-1.0f,0.0f }
		KEYWORD:{
		SEQUENCE:1.0f,1.0f,0.0f,-1.0f,1.0f,0.0f,1.0f,-1.0f,0.0f,-1.0f,-1.0f,0.0f
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:0.0f
						VALUE:0.0f
		KEYWORD:}


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BufferData ( GL2 .GL_ ARRAY_BUFFER,  vertices2.length  * BufferUtil.SIZEOF_FLOAT  ,   BufferUtil.newFloatBuffer   (  vertices2   ), GL2 .GL_ STATIC_DRAW )
OPENGL_CALL: gl . gl BufferData ( GL2 .GL_ ARRAY_BUFFER,  vertices2.length  * BufferUtil.SIZEOF_FLOAT  ,   BufferUtil.newFloatBuffer   (  vertices2   ), GL2 .GL_ STATIC_DRAW )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BufferData
		KEYWORD:(
		SEQUENCE:GL2 .GL_ ARRAY_BUFFER,  vertices2.length  * BufferUtil.SIZEOF_FLOAT  ,   BufferUtil.newFloatBuffer   (  vertices2   ), GL2 .GL_ STATIC_DRAW
				EXPRESSION:GL2 .GL_ ARRAY_BUFFER
						OPENGL_CONSTANT:GL2 .GL_ ARRAY_BUFFER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION: vertices2.length  * BufferUtil.SIZEOF_FLOAT  
						COMPOSITE: vertices2.length  
								IGNORED:
								VARIABLE:vertices2.length  
										NAME:vertices2.length
										IGNORED:
										IGNORED:
						OPERATOR:*
						COMPOSITE: BufferUtil.SIZEOF_FLOAT  
								IGNORED:
								VARIABLE:BufferUtil.SIZEOF_FLOAT  
										NAME:BufferUtil.SIZEOF_FLOAT
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:  BufferUtil.newFloatBuffer   (  vertices2   )
						CALL:  BufferUtil.newFloatBuffer   (  vertices2   )
								IGNORED:
								IGNORED:
								SEQUENCE:BufferUtil.newFloatBuffer   (  vertices2   )
										COMPOSITE:BufferUtil.newFloatBuffer   (  vertices2   )
												COMPOSITE:BufferUtil.newFloatBuffer  
														NAME:BufferUtil.newFloatBuffer
														IGNORED:
														IGNORED:
												KEYWORD:(
												SEQUENCE: vertices2  
														EXPRESSION: vertices2  
																COMPOSITE: vertices2  
																		IGNORED:
																		VARIABLE:vertices2  
																				NAME:vertices2
																				IGNORED:
																				IGNORED:
												KEYWORD:)
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ STATIC_DRAW
						OPENGL_CONSTANT:GL2 .GL_ STATIC_DRAW
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> squareVertexPositionBuffer  [ 1 ]  = 3
NAME:squareVertexPositionBuffer  [ 1 ]
		NAME:squareVertexPositionBuffer
		IGNORED:
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:3
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> squareVertexPositionBuffer  [ 2 ]  = 4
NAME:squareVertexPositionBuffer  [ 2 ]
		NAME:squareVertexPositionBuffer
		IGNORED:
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:4
		VALUE:4


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl GenBuffers ( 1,  squareVertexColorBuffer  , 0 )
OPENGL_CALL: gl . gl GenBuffers ( 1,  squareVertexColorBuffer  , 0 )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:GenBuffers
		KEYWORD:(
		SEQUENCE:1,  squareVertexColorBuffer  , 0
				EXPRESSION:1
						VALUE:1
				KEYWORD:, 
				EXPRESSION: squareVertexColorBuffer  
						COMPOSITE: squareVertexColorBuffer  
								IGNORED:
								VARIABLE:squareVertexColorBuffer  
										NAME:squareVertexColorBuffer
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  squareVertexColorBuffer  [ 0 ] )
OPENGL_CALL: gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  squareVertexColorBuffer  [ 0 ] )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BindBuffer
		KEYWORD:(
		SEQUENCE:GL2 .GL_ ARRAY_BUFFER,  squareVertexColorBuffer  [ 0 ]
				EXPRESSION:GL2 .GL_ ARRAY_BUFFER
						OPENGL_CONSTANT:GL2 .GL_ ARRAY_BUFFER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION: squareVertexColorBuffer  [ 0 ]
						COMPOSITE: squareVertexColorBuffer  [ 0 ]
								IGNORED:
								VARIABLE:squareVertexColorBuffer  [ 0 ]
										NAME:squareVertexColorBuffer
										IGNORED:
										COMPOSITE:[ 0 ]
												KEYWORD:[
												EXPRESSION:0
														VALUE:0
												KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> float[] colors2   = new  float  [ 16 ] 
VARIABLE:float[] colors2  
		TYPE:float[]
		NAME:colors2  
				NAME:colors2
				IGNORED:
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  float  [ 16 ] 
		KEYWORD:new 
		TYPE:float  [ 16 ]
				TYPE:float
				IGNORED:
				COMPOSITE:[ 16 ]
						KEYWORD:[
						EXPRESSION:16
								VALUE:16
						KEYWORD:]
		IGNORED:


[FOR, ASSIGNMENT, LINE_OF_CODE] -------> for ( int i   = 0 ; i   < 4 ; i   ++  )
KEYWORD:for
KEYWORD:(
COMPOSITE:int i   = 0
		VARIABLE:int i  
				TYPE:int
				NAME:i  
						NAME:i
						IGNORED:
						IGNORED:
		KEYWORD:=
		EXPRESSION:0
				VALUE:0
KEYWORD:;
VALUE:i  
		VALUE:i
		IGNORED:
		IGNORED:
KEYWORD:<
EXPRESSION:4
		VALUE:4
KEYWORD:;
SEQUENCE:i   ++ 
		COMPOSITE:i   ++ 
				VARIABLE:i  
						VARIABLE:i
						IGNORED:
						IGNORED:
				KEYWORD:++
				EXPRESSION:
						IGNORED:
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> colors2  [  c   ]  = 1
NAME:colors2  [  c   ]
		NAME:colors2
		IGNORED:
		COMPOSITE:[  c   ]
				KEYWORD:[
				EXPRESSION: c  
						COMPOSITE: c  
								IGNORED:
								NAME:c  
										NAME:c
										IGNORED:
										IGNORED:
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:1
		VALUE:1


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> colors2  [  c  +1 ]  = 0.75f
NAME:colors2  [  c  +1 ]
		NAME:colors2
		IGNORED:
		COMPOSITE:[  c  +1 ]
				KEYWORD:[
				EXPRESSION: c  +1
						COMPOSITE: c  
								IGNORED:
								NAME:c  
										NAME:c
										IGNORED:
										IGNORED:
						OPERATOR:+
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:0.75f
		VALUE:0.75f


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> colors2  [  c  +2 ]  = 0.8f
NAME:colors2  [  c  +2 ]
		NAME:colors2
		IGNORED:
		COMPOSITE:[  c  +2 ]
				KEYWORD:[
				EXPRESSION: c  +2
						COMPOSITE: c  
								IGNORED:
								NAME:c  
										NAME:c
										IGNORED:
										IGNORED:
						OPERATOR:+
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:0.8f
		VALUE:0.8f


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> colors2  [  c  +3 ]  = 1
NAME:colors2  [  c  +3 ]
		NAME:colors2
		IGNORED:
		COMPOSITE:[  c  +3 ]
				KEYWORD:[
				EXPRESSION: c  +3
						COMPOSITE: c  
								IGNORED:
								NAME:c  
										NAME:c
										IGNORED:
										IGNORED:
						OPERATOR:+
						VALUE:3
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:1
		VALUE:1


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BufferData ( GL2 .GL_ ARRAY_BUFFER,  colors2.length  * BufferUtil.SIZEOF_FLOAT  ,   BufferUtil.newFloatBuffer   (  colors2   ), GL2 .GL_ STATIC_DRAW )
OPENGL_CALL: gl . gl BufferData ( GL2 .GL_ ARRAY_BUFFER,  colors2.length  * BufferUtil.SIZEOF_FLOAT  ,   BufferUtil.newFloatBuffer   (  colors2   ), GL2 .GL_ STATIC_DRAW )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BufferData
		KEYWORD:(
		SEQUENCE:GL2 .GL_ ARRAY_BUFFER,  colors2.length  * BufferUtil.SIZEOF_FLOAT  ,   BufferUtil.newFloatBuffer   (  colors2   ), GL2 .GL_ STATIC_DRAW
				EXPRESSION:GL2 .GL_ ARRAY_BUFFER
						OPENGL_CONSTANT:GL2 .GL_ ARRAY_BUFFER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION: colors2.length  * BufferUtil.SIZEOF_FLOAT  
						COMPOSITE: colors2.length  
								IGNORED:
								VARIABLE:colors2.length  
										NAME:colors2.length
										IGNORED:
										IGNORED:
						OPERATOR:*
						COMPOSITE: BufferUtil.SIZEOF_FLOAT  
								IGNORED:
								VARIABLE:BufferUtil.SIZEOF_FLOAT  
										NAME:BufferUtil.SIZEOF_FLOAT
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:  BufferUtil.newFloatBuffer   (  colors2   )
						CALL:  BufferUtil.newFloatBuffer   (  colors2   )
								IGNORED:
								IGNORED:
								SEQUENCE:BufferUtil.newFloatBuffer   (  colors2   )
										COMPOSITE:BufferUtil.newFloatBuffer   (  colors2   )
												COMPOSITE:BufferUtil.newFloatBuffer  
														NAME:BufferUtil.newFloatBuffer
														IGNORED:
														IGNORED:
												KEYWORD:(
												SEQUENCE: colors2  
														EXPRESSION: colors2  
																COMPOSITE: colors2  
																		IGNORED:
																		VARIABLE:colors2  
																				NAME:colors2
																				IGNORED:
																				IGNORED:
												KEYWORD:)
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ STATIC_DRAW
						OPENGL_CONSTANT:GL2 .GL_ STATIC_DRAW
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> squareVertexColorBuffer  [ 1 ]  = 4
NAME:squareVertexColorBuffer  [ 1 ]
		NAME:squareVertexColorBuffer
		IGNORED:
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:4
		VALUE:4


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> squareVertexColorBuffer  [ 2 ]  = 4
NAME:squareVertexColorBuffer  [ 2 ]
		NAME:squareVertexColorBuffer
		IGNORED:
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:4
		VALUE:4


[METHOD_DECLARATION] ------->  public void drawScene   ( GL2 gl   )
IGNORED:
SEQUENCE:public
		KEYWORD:public
VARIABLE:void drawScene  
		TYPE:void
		NAME:drawScene  
				NAME:drawScene
				IGNORED:
				IGNORED:
KEYWORD:(
METHOD_VARIABLES:GL2 gl  
		VARIABLE:GL2 gl  
				TYPE:GL2
				NAME:gl  
						NAME:gl
						IGNORED:
						IGNORED:
KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl ClearColor ( 0.0f, 0.0f, 0.0f, 1.0f )
OPENGL_CALL: gl . gl ClearColor ( 0.0f, 0.0f, 0.0f, 1.0f )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:ClearColor
		KEYWORD:(
		SEQUENCE:0.0f, 0.0f, 0.0f, 1.0f
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:, 
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:, 
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:, 
				EXPRESSION:1.0f
						VALUE:1.0f
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl Enable ( GL2 .GL_ DEPTH_TEST )
OPENGL_CALL: gl . gl Enable ( GL2 .GL_ DEPTH_TEST )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:Enable
		KEYWORD:(
		SEQUENCE:GL2 .GL_ DEPTH_TEST
				EXPRESSION:GL2 .GL_ DEPTH_TEST
						OPENGL_CONSTANT:GL2 .GL_ DEPTH_TEST
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:DEPTH_TEST
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl Viewport ( 0, 0, 500, 500 )
OPENGL_CALL: gl . gl Viewport ( 0, 0, 500, 500 )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:Viewport
		KEYWORD:(
		SEQUENCE:0, 0, 500, 500
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:500
						VALUE:500
				KEYWORD:, 
				EXPRESSION:500
						VALUE:500
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl Clear ( GL2 .GL_ COLOR_BUFFER_BIT|GL2 .GL_ DEPTH_BUFFER_BIT )
OPENGL_CALL: gl . gl Clear ( GL2 .GL_ COLOR_BUFFER_BIT|GL2 .GL_ DEPTH_BUFFER_BIT )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:Clear
		KEYWORD:(
		SEQUENCE:GL2 .GL_ COLOR_BUFFER_BIT|GL2 .GL_ DEPTH_BUFFER_BIT
				EXPRESSION:GL2 .GL_ COLOR_BUFFER_BIT|GL2 .GL_ DEPTH_BUFFER_BIT
						OPENGL_CONSTANT:GL2 .GL_ COLOR_BUFFER_BIT
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:COLOR_BUFFER_BIT
						OPERATOR:|
						OPENGL_CONSTANT:GL2 .GL_ DEPTH_BUFFER_BIT
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:DEPTH_BUFFER_BIT
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> float[] pMatrixv   = new  float  [  ]  { 1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4 }
VARIABLE:float[] pMatrixv  
		TYPE:float[]
		NAME:pMatrixv  
				NAME:pMatrixv
				IGNORED:
				IGNORED:
KEYWORD:=
ARRAY_DECLARATION:new  float  [  ]  { 1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4 }
		NEW_STATEMENT:new  float  [  ] 
				KEYWORD:new 
				TYPE:float  [  ]
						TYPE:float
						IGNORED:
						COMPOSITE:[  ]
								KEYWORD:[
								EXPRESSION:
										IGNORED:
								KEYWORD:]
				IGNORED:
		ARRAY_CONTENT:{ 1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4 }
				KEYWORD:{
				SEQUENCE:1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,4
						EXPRESSION:1
								VALUE:1
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:1
								VALUE:1
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:1
								VALUE:1
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:4
								VALUE:4
				KEYWORD:}


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pMatrix    =   BufferUtil.newFloatBuffer   (  pMatrixv   )
NAME:pMatrix  
		NAME:pMatrix
		IGNORED:
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:  BufferUtil.newFloatBuffer   (  pMatrixv   )
		CALL:  BufferUtil.newFloatBuffer   (  pMatrixv   )
				IGNORED:
				IGNORED:
				SEQUENCE:BufferUtil.newFloatBuffer   (  pMatrixv   )
						COMPOSITE:BufferUtil.newFloatBuffer   (  pMatrixv   )
								COMPOSITE:BufferUtil.newFloatBuffer  
										NAME:BufferUtil.newFloatBuffer
										IGNORED:
										IGNORED:
								KEYWORD:(
								SEQUENCE: pMatrixv  
										EXPRESSION: pMatrixv  
												COMPOSITE: pMatrixv  
														IGNORED:
														VARIABLE:pMatrixv  
																NAME:pMatrixv
																IGNORED:
																IGNORED:
								KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> float[] mvMatrixv   = new  float  [  ]  { 1,0,0,0,0,1,0,0,0,0,1,0,-1.5f,0,0,1 }
VARIABLE:float[] mvMatrixv  
		TYPE:float[]
		NAME:mvMatrixv  
				NAME:mvMatrixv
				IGNORED:
				IGNORED:
KEYWORD:=
ARRAY_DECLARATION:new  float  [  ]  { 1,0,0,0,0,1,0,0,0,0,1,0,-1.5f,0,0,1 }
		NEW_STATEMENT:new  float  [  ] 
				KEYWORD:new 
				TYPE:float  [  ]
						TYPE:float
						IGNORED:
						COMPOSITE:[  ]
								KEYWORD:[
								EXPRESSION:
										IGNORED:
								KEYWORD:]
				IGNORED:
		ARRAY_CONTENT:{ 1,0,0,0,0,1,0,0,0,0,1,0,-1.5f,0,0,1 }
				KEYWORD:{
				SEQUENCE:1,0,0,0,0,1,0,0,0,0,1,0,-1.5f,0,0,1
						EXPRESSION:1
								VALUE:1
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:1
								VALUE:1
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:1
								VALUE:1
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:-1.5f
								VALUE:-1.5f
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:1
								VALUE:1
				KEYWORD:}


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix    =   BufferUtil.newFloatBuffer   (  mvMatrixv   )
NAME:mvMatrix  
		NAME:mvMatrix
		IGNORED:
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:  BufferUtil.newFloatBuffer   (  mvMatrixv   )
		CALL:  BufferUtil.newFloatBuffer   (  mvMatrixv   )
				IGNORED:
				IGNORED:
				SEQUENCE:BufferUtil.newFloatBuffer   (  mvMatrixv   )
						COMPOSITE:BufferUtil.newFloatBuffer   (  mvMatrixv   )
								COMPOSITE:BufferUtil.newFloatBuffer  
										NAME:BufferUtil.newFloatBuffer
										IGNORED:
										IGNORED:
								KEYWORD:(
								SEQUENCE: mvMatrixv  
										EXPRESSION: mvMatrixv  
												COMPOSITE: mvMatrixv  
														IGNORED:
														VARIABLE:mvMatrixv  
																NAME:mvMatrixv
																IGNORED:
																IGNORED:
								KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  triangleVertexPositionBuffer  [ 0 ] )
OPENGL_CALL: gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  triangleVertexPositionBuffer  [ 0 ] )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BindBuffer
		KEYWORD:(
		SEQUENCE:GL2 .GL_ ARRAY_BUFFER,  triangleVertexPositionBuffer  [ 0 ]
				EXPRESSION:GL2 .GL_ ARRAY_BUFFER
						OPENGL_CONSTANT:GL2 .GL_ ARRAY_BUFFER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION: triangleVertexPositionBuffer  [ 0 ]
						COMPOSITE: triangleVertexPositionBuffer  [ 0 ]
								IGNORED:
								VARIABLE:triangleVertexPositionBuffer  [ 0 ]
										NAME:triangleVertexPositionBuffer
										IGNORED:
										COMPOSITE:[ 0 ]
												KEYWORD:[
												EXPRESSION:0
														VALUE:0
												KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl VertexAttribPointer (  vertexPositionAttribute  ,  triangleVertexPositionBuffer  [ 1 ], GL2 .GL_ FLOAT,  false  , 0, 0 )
OPENGL_CALL: gl . gl VertexAttribPointer (  vertexPositionAttribute  ,  triangleVertexPositionBuffer  [ 1 ], GL2 .GL_ FLOAT,  false  , 0, 0 )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:VertexAttribPointer
		KEYWORD:(
		SEQUENCE: vertexPositionAttribute  ,  triangleVertexPositionBuffer  [ 1 ], GL2 .GL_ FLOAT,  false  , 0, 0
				EXPRESSION: vertexPositionAttribute  
						COMPOSITE: vertexPositionAttribute  
								IGNORED:
								VARIABLE:vertexPositionAttribute  
										NAME:vertexPositionAttribute
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION: triangleVertexPositionBuffer  [ 1 ]
						COMPOSITE: triangleVertexPositionBuffer  [ 1 ]
								IGNORED:
								VARIABLE:triangleVertexPositionBuffer  [ 1 ]
										NAME:triangleVertexPositionBuffer
										IGNORED:
										COMPOSITE:[ 1 ]
												KEYWORD:[
												EXPRESSION:1
														VALUE:1
												KEYWORD:]
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ FLOAT
						OPENGL_CONSTANT:GL2 .GL_ FLOAT
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION: false  
						COMPOSITE: false  
								IGNORED:
								VARIABLE:false  
										NAME:false
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  triangleVertexColorBuffer  [ 0 ] )
OPENGL_CALL: gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  triangleVertexColorBuffer  [ 0 ] )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BindBuffer
		KEYWORD:(
		SEQUENCE:GL2 .GL_ ARRAY_BUFFER,  triangleVertexColorBuffer  [ 0 ]
				EXPRESSION:GL2 .GL_ ARRAY_BUFFER
						OPENGL_CONSTANT:GL2 .GL_ ARRAY_BUFFER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION: triangleVertexColorBuffer  [ 0 ]
						COMPOSITE: triangleVertexColorBuffer  [ 0 ]
								IGNORED:
								VARIABLE:triangleVertexColorBuffer  [ 0 ]
										NAME:triangleVertexColorBuffer
										IGNORED:
										COMPOSITE:[ 0 ]
												KEYWORD:[
												EXPRESSION:0
														VALUE:0
												KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl VertexAttribPointer (  vertexColorAttribute  ,  triangleVertexColorBuffer  [ 1 ], GL2 .GL_ FLOAT,  false  , 0, 0 )
OPENGL_CALL: gl . gl VertexAttribPointer (  vertexColorAttribute  ,  triangleVertexColorBuffer  [ 1 ], GL2 .GL_ FLOAT,  false  , 0, 0 )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:VertexAttribPointer
		KEYWORD:(
		SEQUENCE: vertexColorAttribute  ,  triangleVertexColorBuffer  [ 1 ], GL2 .GL_ FLOAT,  false  , 0, 0
				EXPRESSION: vertexColorAttribute  
						COMPOSITE: vertexColorAttribute  
								IGNORED:
								VARIABLE:vertexColorAttribute  
										NAME:vertexColorAttribute
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION: triangleVertexColorBuffer  [ 1 ]
						COMPOSITE: triangleVertexColorBuffer  [ 1 ]
								IGNORED:
								VARIABLE:triangleVertexColorBuffer  [ 1 ]
										NAME:triangleVertexColorBuffer
										IGNORED:
										COMPOSITE:[ 1 ]
												KEYWORD:[
												EXPRESSION:1
														VALUE:1
												KEYWORD:]
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ FLOAT
						OPENGL_CONSTANT:GL2 .GL_ FLOAT
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION: false  
						COMPOSITE: false  
								IGNORED:
								VARIABLE:false  
										NAME:false
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->   setMatrixUniforms   (  gl   )
CALL:  setMatrixUniforms   (  gl   )
		IGNORED:
		IGNORED:
		SEQUENCE:setMatrixUniforms   (  gl   )
				COMPOSITE:setMatrixUniforms   (  gl   )
						COMPOSITE:setMatrixUniforms  
								NAME:setMatrixUniforms
								IGNORED:
								IGNORED:
						KEYWORD:(
						SEQUENCE: gl  
								EXPRESSION: gl  
										COMPOSITE: gl  
												IGNORED:
												VARIABLE:gl  
														NAME:gl
														IGNORED:
														IGNORED:
						KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl DrawArrays ( GL2 .GL_ TRIANGLES, 0,  triangleVertexPositionBuffer  [ 2 ] )
OPENGL_CALL: gl . gl DrawArrays ( GL2 .GL_ TRIANGLES, 0,  triangleVertexPositionBuffer  [ 2 ] )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:DrawArrays
		KEYWORD:(
		SEQUENCE:GL2 .GL_ TRIANGLES, 0,  triangleVertexPositionBuffer  [ 2 ]
				EXPRESSION:GL2 .GL_ TRIANGLES
						OPENGL_CONSTANT:GL2 .GL_ TRIANGLES
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TRIANGLES
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION: triangleVertexPositionBuffer  [ 2 ]
						COMPOSITE: triangleVertexPositionBuffer  [ 2 ]
								IGNORED:
								VARIABLE:triangleVertexPositionBuffer  [ 2 ]
										NAME:triangleVertexPositionBuffer
										IGNORED:
										COMPOSITE:[ 2 ]
												KEYWORD:[
												EXPRESSION:2
														VALUE:2
												KEYWORD:]
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrixv    = new  float  [  ]  { 1,0,0,0,0,1,0,0,0,0,1,0,1.5f,0,0,1 }
NAME:mvMatrixv  
		NAME:mvMatrixv
		IGNORED:
		IGNORED:
IGNORED:
KEYWORD:=
ARRAY_DECLARATION:new  float  [  ]  { 1,0,0,0,0,1,0,0,0,0,1,0,1.5f,0,0,1 }
		NEW_STATEMENT:new  float  [  ] 
				KEYWORD:new 
				TYPE:float  [  ]
						TYPE:float
						IGNORED:
						COMPOSITE:[  ]
								KEYWORD:[
								EXPRESSION:
										IGNORED:
								KEYWORD:]
				IGNORED:
		ARRAY_CONTENT:{ 1,0,0,0,0,1,0,0,0,0,1,0,1.5f,0,0,1 }
				KEYWORD:{
				SEQUENCE:1,0,0,0,0,1,0,0,0,0,1,0,1.5f,0,0,1
						EXPRESSION:1
								VALUE:1
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:1
								VALUE:1
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:1
								VALUE:1
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:1.5f
								VALUE:1.5f
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:1
								VALUE:1
				KEYWORD:}


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix    =   BufferUtil.newFloatBuffer   (  mvMatrixv   )
NAME:mvMatrix  
		NAME:mvMatrix
		IGNORED:
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:  BufferUtil.newFloatBuffer   (  mvMatrixv   )
		CALL:  BufferUtil.newFloatBuffer   (  mvMatrixv   )
				IGNORED:
				IGNORED:
				SEQUENCE:BufferUtil.newFloatBuffer   (  mvMatrixv   )
						COMPOSITE:BufferUtil.newFloatBuffer   (  mvMatrixv   )
								COMPOSITE:BufferUtil.newFloatBuffer  
										NAME:BufferUtil.newFloatBuffer
										IGNORED:
										IGNORED:
								KEYWORD:(
								SEQUENCE: mvMatrixv  
										EXPRESSION: mvMatrixv  
												COMPOSITE: mvMatrixv  
														IGNORED:
														VARIABLE:mvMatrixv  
																NAME:mvMatrixv
																IGNORED:
																IGNORED:
								KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  squareVertexPositionBuffer  [ 0 ] )
OPENGL_CALL: gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  squareVertexPositionBuffer  [ 0 ] )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BindBuffer
		KEYWORD:(
		SEQUENCE:GL2 .GL_ ARRAY_BUFFER,  squareVertexPositionBuffer  [ 0 ]
				EXPRESSION:GL2 .GL_ ARRAY_BUFFER
						OPENGL_CONSTANT:GL2 .GL_ ARRAY_BUFFER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION: squareVertexPositionBuffer  [ 0 ]
						COMPOSITE: squareVertexPositionBuffer  [ 0 ]
								IGNORED:
								VARIABLE:squareVertexPositionBuffer  [ 0 ]
										NAME:squareVertexPositionBuffer
										IGNORED:
										COMPOSITE:[ 0 ]
												KEYWORD:[
												EXPRESSION:0
														VALUE:0
												KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl VertexAttribPointer (  vertexPositionAttribute  ,  squareVertexPositionBuffer  [ 1 ], GL2 .GL_ FLOAT,  false  , 0, 0 )
OPENGL_CALL: gl . gl VertexAttribPointer (  vertexPositionAttribute  ,  squareVertexPositionBuffer  [ 1 ], GL2 .GL_ FLOAT,  false  , 0, 0 )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:VertexAttribPointer
		KEYWORD:(
		SEQUENCE: vertexPositionAttribute  ,  squareVertexPositionBuffer  [ 1 ], GL2 .GL_ FLOAT,  false  , 0, 0
				EXPRESSION: vertexPositionAttribute  
						COMPOSITE: vertexPositionAttribute  
								IGNORED:
								VARIABLE:vertexPositionAttribute  
										NAME:vertexPositionAttribute
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION: squareVertexPositionBuffer  [ 1 ]
						COMPOSITE: squareVertexPositionBuffer  [ 1 ]
								IGNORED:
								VARIABLE:squareVertexPositionBuffer  [ 1 ]
										NAME:squareVertexPositionBuffer
										IGNORED:
										COMPOSITE:[ 1 ]
												KEYWORD:[
												EXPRESSION:1
														VALUE:1
												KEYWORD:]
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ FLOAT
						OPENGL_CONSTANT:GL2 .GL_ FLOAT
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION: false  
						COMPOSITE: false  
								IGNORED:
								VARIABLE:false  
										NAME:false
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  squareVertexColorBuffer  [ 0 ] )
OPENGL_CALL: gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  squareVertexColorBuffer  [ 0 ] )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BindBuffer
		KEYWORD:(
		SEQUENCE:GL2 .GL_ ARRAY_BUFFER,  squareVertexColorBuffer  [ 0 ]
				EXPRESSION:GL2 .GL_ ARRAY_BUFFER
						OPENGL_CONSTANT:GL2 .GL_ ARRAY_BUFFER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION: squareVertexColorBuffer  [ 0 ]
						COMPOSITE: squareVertexColorBuffer  [ 0 ]
								IGNORED:
								VARIABLE:squareVertexColorBuffer  [ 0 ]
										NAME:squareVertexColorBuffer
										IGNORED:
										COMPOSITE:[ 0 ]
												KEYWORD:[
												EXPRESSION:0
														VALUE:0
												KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl VertexAttribPointer (  vertexColorAttribute  ,  squareVertexColorBuffer  [ 1 ], GL2 .GL_ FLOAT,  false  , 0, 0 )
OPENGL_CALL: gl . gl VertexAttribPointer (  vertexColorAttribute  ,  squareVertexColorBuffer  [ 1 ], GL2 .GL_ FLOAT,  false  , 0, 0 )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:VertexAttribPointer
		KEYWORD:(
		SEQUENCE: vertexColorAttribute  ,  squareVertexColorBuffer  [ 1 ], GL2 .GL_ FLOAT,  false  , 0, 0
				EXPRESSION: vertexColorAttribute  
						COMPOSITE: vertexColorAttribute  
								IGNORED:
								VARIABLE:vertexColorAttribute  
										NAME:vertexColorAttribute
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION: squareVertexColorBuffer  [ 1 ]
						COMPOSITE: squareVertexColorBuffer  [ 1 ]
								IGNORED:
								VARIABLE:squareVertexColorBuffer  [ 1 ]
										NAME:squareVertexColorBuffer
										IGNORED:
										COMPOSITE:[ 1 ]
												KEYWORD:[
												EXPRESSION:1
														VALUE:1
												KEYWORD:]
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ FLOAT
						OPENGL_CONSTANT:GL2 .GL_ FLOAT
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION: false  
						COMPOSITE: false  
								IGNORED:
								VARIABLE:false  
										NAME:false
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->   setMatrixUniforms   (  gl   )
CALL:  setMatrixUniforms   (  gl   )
		IGNORED:
		IGNORED:
		SEQUENCE:setMatrixUniforms   (  gl   )
				COMPOSITE:setMatrixUniforms   (  gl   )
						COMPOSITE:setMatrixUniforms  
								NAME:setMatrixUniforms
								IGNORED:
								IGNORED:
						KEYWORD:(
						SEQUENCE: gl  
								EXPRESSION: gl  
										COMPOSITE: gl  
												IGNORED:
												VARIABLE:gl  
														NAME:gl
														IGNORED:
														IGNORED:
						KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl DrawArrays ( GL2 .GL_ TRIANGLE_STRIP, 0,  squareVertexPositionBuffer  [ 2 ] )
OPENGL_CALL: gl . gl DrawArrays ( GL2 .GL_ TRIANGLE_STRIP, 0,  squareVertexPositionBuffer  [ 2 ] )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:DrawArrays
		KEYWORD:(
		SEQUENCE:GL2 .GL_ TRIANGLE_STRIP, 0,  squareVertexPositionBuffer  [ 2 ]
				EXPRESSION:GL2 .GL_ TRIANGLE_STRIP
						OPENGL_CONSTANT:GL2 .GL_ TRIANGLE_STRIP
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TRIANGLE_STRIP
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION: squareVertexPositionBuffer  [ 2 ]
						COMPOSITE: squareVertexPositionBuffer  [ 2 ]
								IGNORED:
								VARIABLE:squareVertexPositionBuffer  [ 2 ]
										NAME:squareVertexPositionBuffer
										IGNORED:
										COMPOSITE:[ 2 ]
												KEYWORD:[
												EXPRESSION:2
														VALUE:2
												KEYWORD:]
		KEYWORD:)



Test_va1Drawer.java
[LIBRARY_DECLARATION] -------> package  test.jogl  
KEYWORD:package 
SEQUENCE:test.jogl  
		NAME:test.jogl  
				NAME:test.jogl
				IGNORED:
				IGNORED:


[LIBRARY_DECLARATION] -------> import java.awt.event.KeyEvent  
KEYWORD:import
VARIABLE:java.awt.event.KeyEvent  
		NAME:java.awt.event.KeyEvent
		IGNORED:
		IGNORED:


[LIBRARY_DECLARATION] -------> import java.io.File  
KEYWORD:import
VARIABLE:java.io.File  
		NAME:java.io.File
		IGNORED:
		IGNORED:


[LIBRARY_DECLARATION] -------> import java.io.IOException  
KEYWORD:import
VARIABLE:java.io.IOException  
		NAME:java.io.IOException
		IGNORED:
		IGNORED:


[LIBRARY_DECLARATION] -------> import java.nio.FloatBuffer  
KEYWORD:import
VARIABLE:java.nio.FloatBuffer  
		NAME:java.nio.FloatBuffer
		IGNORED:
		IGNORED:


[LIBRARY_DECLARATION] -------> import java.util.Arrays  
KEYWORD:import
VARIABLE:java.util.Arrays  
		NAME:java.util.Arrays
		IGNORED:
		IGNORED:


[LIBRARY_DECLARATION] -------> import javax.media.opengl.GL2  
KEYWORD:import
VARIABLE:javax.media.opengl.GL2  
		NAME:javax.media.opengl.GL2
		IGNORED:
		IGNORED:


[LIBRARY_DECLARATION] -------> import test.jogl.util.Util  
KEYWORD:import
VARIABLE:test.jogl.util.Util  
		NAME:test.jogl.util.Util
		IGNORED:
		IGNORED:


[LIBRARY_DECLARATION] -------> import com.sun.opengl.util.BufferUtil  
KEYWORD:import
VARIABLE:com.sun.opengl.util.BufferUtil  
		NAME:com.sun.opengl.util.BufferUtil
		IGNORED:
		IGNORED:


[LIBRARY_DECLARATION] -------> import com.sun.opengl.util.texture.TextureData  
KEYWORD:import
VARIABLE:com.sun.opengl.util.texture.TextureData  
		NAME:com.sun.opengl.util.texture.TextureData
		IGNORED:
		IGNORED:


[LIBRARY_DECLARATION] -------> import com.sun.opengl.util.texture.TextureIO  
KEYWORD:import
VARIABLE:com.sun.opengl.util.texture.TextureIO  
		NAME:com.sun.opengl.util.texture.TextureIO
		IGNORED:
		IGNORED:


[CLASS_DECLARATION] -------> public class Test_va1Drawer
SEQUENCE:public
		KEYWORD:public
KEYWORD:class
NAME:Test_va1Drawer


[ATTRIBUTE_DECLARATION] -------> private int vertexPositionAttribute   
SEQUENCE:private
		KEYWORD:private
TYPE:int
SEQUENCE:vertexPositionAttribute   
		COMPOSITE:vertexPositionAttribute   
				VARIABLE:vertexPositionAttribute  
						NAME:vertexPositionAttribute
						IGNORED:
						IGNORED:
				IGNORED:


[ATTRIBUTE_DECLARATION] -------> private int textureCoordAttribute   
SEQUENCE:private
		KEYWORD:private
TYPE:int
SEQUENCE:textureCoordAttribute   
		COMPOSITE:textureCoordAttribute   
				VARIABLE:textureCoordAttribute  
						NAME:textureCoordAttribute
						IGNORED:
						IGNORED:
				IGNORED:


[ATTRIBUTE_DECLARATION] -------> private int pMatrixUniform   
SEQUENCE:private
		KEYWORD:private
TYPE:int
SEQUENCE:pMatrixUniform   
		COMPOSITE:pMatrixUniform   
				VARIABLE:pMatrixUniform  
						NAME:pMatrixUniform
						IGNORED:
						IGNORED:
				IGNORED:


[ATTRIBUTE_DECLARATION] -------> private int mvMatrixUniform   
SEQUENCE:private
		KEYWORD:private
TYPE:int
SEQUENCE:mvMatrixUniform   
		COMPOSITE:mvMatrixUniform   
				VARIABLE:mvMatrixUniform  
						NAME:mvMatrixUniform
						IGNORED:
						IGNORED:
				IGNORED:


[ATTRIBUTE_DECLARATION] -------> private int samplerUniform   
SEQUENCE:private
		KEYWORD:private
TYPE:int
SEQUENCE:samplerUniform   
		COMPOSITE:samplerUniform   
				VARIABLE:samplerUniform  
						NAME:samplerUniform
						IGNORED:
						IGNORED:
				IGNORED:


[ATTRIBUTE_DECLARATION, ATTRIBUTE_ASSIGNMENT, ASSIGNMENT] -------> private int[] doorVertexPositionBuffer   = new  int  [ 3 ] 
SEQUENCE:private
		KEYWORD:private
VARIABLE:int[] doorVertexPositionBuffer  
		TYPE:int[]
		NAME:doorVertexPositionBuffer  
				NAME:doorVertexPositionBuffer
				IGNORED:
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  int  [ 3 ] 
		KEYWORD:new 
		TYPE:int  [ 3 ]
				TYPE:int
				IGNORED:
				COMPOSITE:[ 3 ]
						KEYWORD:[
						EXPRESSION:3
								VALUE:3
						KEYWORD:]
		IGNORED:


[ATTRIBUTE_DECLARATION, ATTRIBUTE_ASSIGNMENT, ASSIGNMENT] -------> private int[] doorVertexTextureCoordBuffer   = new  int  [ 3 ] 
SEQUENCE:private
		KEYWORD:private
VARIABLE:int[] doorVertexTextureCoordBuffer  
		TYPE:int[]
		NAME:doorVertexTextureCoordBuffer  
				NAME:doorVertexTextureCoordBuffer
				IGNORED:
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  int  [ 3 ] 
		KEYWORD:new 
		TYPE:int  [ 3 ]
				TYPE:int
				IGNORED:
				COMPOSITE:[ 3 ]
						KEYWORD:[
						EXPRESSION:3
								VALUE:3
						KEYWORD:]
		IGNORED:


[ATTRIBUTE_DECLARATION, ATTRIBUTE_ASSIGNMENT, ASSIGNMENT] -------> private int[] greenVertexPositionBuffer   = new  int  [ 3 ] 
SEQUENCE:private
		KEYWORD:private
VARIABLE:int[] greenVertexPositionBuffer  
		TYPE:int[]
		NAME:greenVertexPositionBuffer  
				NAME:greenVertexPositionBuffer
				IGNORED:
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  int  [ 3 ] 
		KEYWORD:new 
		TYPE:int  [ 3 ]
				TYPE:int
				IGNORED:
				COMPOSITE:[ 3 ]
						KEYWORD:[
						EXPRESSION:3
								VALUE:3
						KEYWORD:]
		IGNORED:


[ATTRIBUTE_DECLARATION, ATTRIBUTE_ASSIGNMENT, ASSIGNMENT] -------> private int[] greenVertexTextureCoordBuffer   = new  int  [ 3 ] 
SEQUENCE:private
		KEYWORD:private
VARIABLE:int[] greenVertexTextureCoordBuffer  
		TYPE:int[]
		NAME:greenVertexTextureCoordBuffer  
				NAME:greenVertexTextureCoordBuffer
				IGNORED:
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  int  [ 3 ] 
		KEYWORD:new 
		TYPE:int  [ 3 ]
				TYPE:int
				IGNORED:
				COMPOSITE:[ 3 ]
						KEYWORD:[
						EXPRESSION:3
								VALUE:3
						KEYWORD:]
		IGNORED:


[ATTRIBUTE_DECLARATION, ATTRIBUTE_ASSIGNMENT, ASSIGNMENT] -------> private int[] pyramidVertexPositionBuffer   = new  int  [ 3 ] 
SEQUENCE:private
		KEYWORD:private
VARIABLE:int[] pyramidVertexPositionBuffer  
		TYPE:int[]
		NAME:pyramidVertexPositionBuffer  
				NAME:pyramidVertexPositionBuffer
				IGNORED:
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  int  [ 3 ] 
		KEYWORD:new 
		TYPE:int  [ 3 ]
				TYPE:int
				IGNORED:
				COMPOSITE:[ 3 ]
						KEYWORD:[
						EXPRESSION:3
								VALUE:3
						KEYWORD:]
		IGNORED:


[ATTRIBUTE_DECLARATION, ATTRIBUTE_ASSIGNMENT, ASSIGNMENT] -------> private int[] pyramidVertexTextureCoordBuffer   = new  int  [ 3 ] 
SEQUENCE:private
		KEYWORD:private
VARIABLE:int[] pyramidVertexTextureCoordBuffer  
		TYPE:int[]
		NAME:pyramidVertexTextureCoordBuffer  
				NAME:pyramidVertexTextureCoordBuffer
				IGNORED:
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  int  [ 3 ] 
		KEYWORD:new 
		TYPE:int  [ 3 ]
				TYPE:int
				IGNORED:
				COMPOSITE:[ 3 ]
						KEYWORD:[
						EXPRESSION:3
								VALUE:3
						KEYWORD:]
		IGNORED:


[ATTRIBUTE_DECLARATION, ATTRIBUTE_ASSIGNMENT, ASSIGNMENT] -------> private int[] cubeVertexPositionBuffer   = new  int  [ 3 ] 
SEQUENCE:private
		KEYWORD:private
VARIABLE:int[] cubeVertexPositionBuffer  
		TYPE:int[]
		NAME:cubeVertexPositionBuffer  
				NAME:cubeVertexPositionBuffer
				IGNORED:
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  int  [ 3 ] 
		KEYWORD:new 
		TYPE:int  [ 3 ]
				TYPE:int
				IGNORED:
				COMPOSITE:[ 3 ]
						KEYWORD:[
						EXPRESSION:3
								VALUE:3
						KEYWORD:]
		IGNORED:


[ATTRIBUTE_DECLARATION, ATTRIBUTE_ASSIGNMENT, ASSIGNMENT] -------> private int[] cubeVertexIndexBuffer   = new  int  [ 3 ] 
SEQUENCE:private
		KEYWORD:private
VARIABLE:int[] cubeVertexIndexBuffer  
		TYPE:int[]
		NAME:cubeVertexIndexBuffer  
				NAME:cubeVertexIndexBuffer
				IGNORED:
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  int  [ 3 ] 
		KEYWORD:new 
		TYPE:int  [ 3 ]
				TYPE:int
				IGNORED:
				COMPOSITE:[ 3 ]
						KEYWORD:[
						EXPRESSION:3
								VALUE:3
						KEYWORD:]
		IGNORED:


[ATTRIBUTE_DECLARATION, ATTRIBUTE_ASSIGNMENT, ASSIGNMENT] -------> private int[] cubeVertexTextureCoordBuffer   = new  int  [ 3 ] 
SEQUENCE:private
		KEYWORD:private
VARIABLE:int[] cubeVertexTextureCoordBuffer  
		TYPE:int[]
		NAME:cubeVertexTextureCoordBuffer  
				NAME:cubeVertexTextureCoordBuffer
				IGNORED:
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  int  [ 3 ] 
		KEYWORD:new 
		TYPE:int  [ 3 ]
				TYPE:int
				IGNORED:
				COMPOSITE:[ 3 ]
						KEYWORD:[
						EXPRESSION:3
								VALUE:3
						KEYWORD:]
		IGNORED:


[ATTRIBUTE_DECLARATION, ATTRIBUTE_ASSIGNMENT, ASSIGNMENT] -------> private int[] textures   = new  int  [ 4 ] 
SEQUENCE:private
		KEYWORD:private
VARIABLE:int[] textures  
		TYPE:int[]
		NAME:textures  
				NAME:textures
				IGNORED:
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  int  [ 4 ] 
		KEYWORD:new 
		TYPE:int  [ 4 ]
				TYPE:int
				IGNORED:
				COMPOSITE:[ 4 ]
						KEYWORD:[
						EXPRESSION:4
								VALUE:4
						KEYWORD:]
		IGNORED:


[ATTRIBUTE_DECLARATION] -------> private FloatBuffer pMatrix   
SEQUENCE:private
		KEYWORD:private
TYPE:FloatBuffer
SEQUENCE:pMatrix   
		COMPOSITE:pMatrix   
				VARIABLE:pMatrix  
						NAME:pMatrix
						IGNORED:
						IGNORED:
				IGNORED:


[ATTRIBUTE_DECLARATION] -------> private FloatBuffer mvMatrix   
SEQUENCE:private
		KEYWORD:private
TYPE:FloatBuffer
SEQUENCE:mvMatrix   
		COMPOSITE:mvMatrix   
				VARIABLE:mvMatrix  
						NAME:mvMatrix
						IGNORED:
						IGNORED:
				IGNORED:


[ATTRIBUTE_DECLARATION, ATTRIBUTE_ASSIGNMENT, ASSIGNMENT] -------> private double rAnglex   = 0
SEQUENCE:private
		KEYWORD:private
VARIABLE:double rAnglex  
		TYPE:double
		NAME:rAnglex  
				NAME:rAnglex
				IGNORED:
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[ATTRIBUTE_DECLARATION, ATTRIBUTE_ASSIGNMENT, ASSIGNMENT] -------> private float speedx   = 0
SEQUENCE:private
		KEYWORD:private
VARIABLE:float speedx  
		TYPE:float
		NAME:speedx  
				NAME:speedx
				IGNORED:
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[ATTRIBUTE_DECLARATION, ATTRIBUTE_ASSIGNMENT, ASSIGNMENT] -------> private double rAngley   = 0
SEQUENCE:private
		KEYWORD:private
VARIABLE:double rAngley  
		TYPE:double
		NAME:rAngley  
				NAME:rAngley
				IGNORED:
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[ATTRIBUTE_DECLARATION, ATTRIBUTE_ASSIGNMENT, ASSIGNMENT] -------> private float speedy   = 0
SEQUENCE:private
		KEYWORD:private
VARIABLE:float speedy  
		TYPE:float
		NAME:speedy  
				NAME:speedy
				IGNORED:
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[ATTRIBUTE_DECLARATION, ATTRIBUTE_ASSIGNMENT, ASSIGNMENT] -------> private float zoom   = -8
SEQUENCE:private
		KEYWORD:private
VARIABLE:float zoom  
		TYPE:float
		NAME:zoom  
				NAME:zoom
				IGNORED:
				IGNORED:
KEYWORD:=
EXPRESSION:-8
		VALUE:-8


[ATTRIBUTE_DECLARATION, ATTRIBUTE_ASSIGNMENT, ASSIGNMENT] -------> private long lastTime   = 0
SEQUENCE:private
		KEYWORD:private
VARIABLE:long lastTime  
		TYPE:long
		NAME:lastTime  
				NAME:lastTime
				IGNORED:
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[ATTRIBUTE_DECLARATION, ATTRIBUTE_ASSIGNMENT, ASSIGNMENT] -------> private long lastTime2   = 0
SEQUENCE:private
		KEYWORD:private
VARIABLE:long lastTime2  
		TYPE:long
		NAME:lastTime2  
				NAME:lastTime2
				IGNORED:
				IGNORED:
KEYWORD:=
EXPRESSION:0
		VALUE:0


[ATTRIBUTE_DECLARATION, ATTRIBUTE_ASSIGNMENT, ASSIGNMENT] -------> private boolean[] commands   = new  boolean  [ 6 ] 
SEQUENCE:private
		KEYWORD:private
VARIABLE:boolean[] commands  
		TYPE:boolean[]
		NAME:commands  
				NAME:commands
				IGNORED:
				IGNORED:
KEYWORD:=
NEW_STATEMENT:new  boolean  [ 6 ] 
		KEYWORD:new 
		TYPE:boolean  [ 6 ]
				TYPE:boolean
				IGNORED:
				COMPOSITE:[ 6 ]
						KEYWORD:[
						EXPRESSION:6
								VALUE:6
						KEYWORD:]
		IGNORED:


[METHOD_DECLARATION] ------->  public void initShaders   ( GL2 gl   )
IGNORED:
SEQUENCE:public
		KEYWORD:public
VARIABLE:void initShaders  
		TYPE:void
		NAME:initShaders  
				NAME:initShaders
				IGNORED:
				IGNORED:
KEYWORD:(
METHOD_VARIABLES:GL2 gl  
		VARIABLE:GL2 gl  
				TYPE:GL2
				NAME:gl  
						NAME:gl
						IGNORED:
						IGNORED:
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> int shaderProgram   =   Util.getShaderProgram   (  gl  ,  "shaders  / shader2.fs"  ,  "shaders  / shader2.vs"   )
VARIABLE:int shaderProgram  
		TYPE:int
		NAME:shaderProgram  
				NAME:shaderProgram
				IGNORED:
				IGNORED:
KEYWORD:=
CALL:  Util.getShaderProgram   (  gl  ,  "shaders  / shader2.fs"  ,  "shaders  / shader2.vs"   )
		IGNORED:
		IGNORED:
		SEQUENCE:Util.getShaderProgram   (  gl  ,  "shaders  / shader2.fs"  ,  "shaders  / shader2.vs"   )
				COMPOSITE:Util.getShaderProgram   (  gl  ,  "shaders  / shader2.fs"  ,  "shaders  / shader2.vs"   )
						COMPOSITE:Util.getShaderProgram  
								NAME:Util.getShaderProgram
								IGNORED:
								IGNORED:
						KEYWORD:(
						SEQUENCE: gl  ,  "shaders  / shader2.fs"  ,  "shaders  / shader2.vs"  
								EXPRESSION: gl  
										COMPOSITE: gl  
												IGNORED:
												VARIABLE:gl  
														NAME:gl
														IGNORED:
														IGNORED:
								KEYWORD:, 
								EXPRESSION: "shaders  / shader2.fs"  
										COMPOSITE: "shaders  
												IGNORED:
												VARIABLE:"shaders  
														NAME:"shaders
														IGNORED:
														IGNORED:
										OPERATOR:/
										COMPOSITE: shader2.fs"  
												IGNORED:
												VARIABLE:shader2.fs"  
														NAME:shader2.fs"
														IGNORED:
														IGNORED:
								KEYWORD:, 
								EXPRESSION: "shaders  / shader2.vs"  
										COMPOSITE: "shaders  
												IGNORED:
												VARIABLE:"shaders  
														NAME:"shaders
														IGNORED:
														IGNORED:
										OPERATOR:/
										COMPOSITE: shader2.vs"  
												IGNORED:
												VARIABLE:shader2.vs"  
														NAME:shader2.vs"
														IGNORED:
														IGNORED:
						KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> vertexPositionAttribute    =  gl . gl GetAttribLocation (  shaderProgram  ,  "aVertexPosition"   )
NAME:vertexPositionAttribute  
		NAME:vertexPositionAttribute
		IGNORED:
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION: gl . gl GetAttribLocation (  shaderProgram  ,  "aVertexPosition"   )
		OPENGL_CALL: gl . gl GetAttribLocation (  shaderProgram  ,  "aVertexPosition"   )
				IGNORED:
				COMPOSITE:gl .
						VALUE:gl
						KEYWORD:.
				KEYWORD:gl
				NAME:GetAttribLocation
				KEYWORD:(
				SEQUENCE: shaderProgram  ,  "aVertexPosition"  
						EXPRESSION: shaderProgram  
								COMPOSITE: shaderProgram  
										IGNORED:
										VARIABLE:shaderProgram  
												NAME:shaderProgram
												IGNORED:
												IGNORED:
						KEYWORD:, 
						EXPRESSION: "aVertexPosition"  
								COMPOSITE: "aVertexPosition"  
										IGNORED:
										VARIABLE:"aVertexPosition"  
												NAME:"aVertexPosition"
												IGNORED:
												IGNORED:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl EnableVertexAttribArray (  vertexPositionAttribute   )
OPENGL_CALL: gl . gl EnableVertexAttribArray (  vertexPositionAttribute   )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:EnableVertexAttribArray
		KEYWORD:(
		SEQUENCE: vertexPositionAttribute  
				EXPRESSION: vertexPositionAttribute  
						COMPOSITE: vertexPositionAttribute  
								IGNORED:
								VARIABLE:vertexPositionAttribute  
										NAME:vertexPositionAttribute
										IGNORED:
										IGNORED:
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> textureCoordAttribute    =  gl . gl GetAttribLocation (  shaderProgram  ,  "aTextureCoord"   )
NAME:textureCoordAttribute  
		NAME:textureCoordAttribute
		IGNORED:
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION: gl . gl GetAttribLocation (  shaderProgram  ,  "aTextureCoord"   )
		OPENGL_CALL: gl . gl GetAttribLocation (  shaderProgram  ,  "aTextureCoord"   )
				IGNORED:
				COMPOSITE:gl .
						VALUE:gl
						KEYWORD:.
				KEYWORD:gl
				NAME:GetAttribLocation
				KEYWORD:(
				SEQUENCE: shaderProgram  ,  "aTextureCoord"  
						EXPRESSION: shaderProgram  
								COMPOSITE: shaderProgram  
										IGNORED:
										VARIABLE:shaderProgram  
												NAME:shaderProgram
												IGNORED:
												IGNORED:
						KEYWORD:, 
						EXPRESSION: "aTextureCoord"  
								COMPOSITE: "aTextureCoord"  
										IGNORED:
										VARIABLE:"aTextureCoord"  
												NAME:"aTextureCoord"
												IGNORED:
												IGNORED:
				KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl EnableVertexAttribArray (  textureCoordAttribute   )
OPENGL_CALL: gl . gl EnableVertexAttribArray (  textureCoordAttribute   )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:EnableVertexAttribArray
		KEYWORD:(
		SEQUENCE: textureCoordAttribute  
				EXPRESSION: textureCoordAttribute  
						COMPOSITE: textureCoordAttribute  
								IGNORED:
								VARIABLE:textureCoordAttribute  
										NAME:textureCoordAttribute
										IGNORED:
										IGNORED:
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pMatrixUniform    =  gl . gl GetUniformLocation (  shaderProgram  ,  "uPMatrix"   )
NAME:pMatrixUniform  
		NAME:pMatrixUniform
		IGNORED:
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION: gl . gl GetUniformLocation (  shaderProgram  ,  "uPMatrix"   )
		OPENGL_CALL: gl . gl GetUniformLocation (  shaderProgram  ,  "uPMatrix"   )
				IGNORED:
				COMPOSITE:gl .
						VALUE:gl
						KEYWORD:.
				KEYWORD:gl
				NAME:GetUniformLocation
				KEYWORD:(
				SEQUENCE: shaderProgram  ,  "uPMatrix"  
						EXPRESSION: shaderProgram  
								COMPOSITE: shaderProgram  
										IGNORED:
										VARIABLE:shaderProgram  
												NAME:shaderProgram
												IGNORED:
												IGNORED:
						KEYWORD:, 
						EXPRESSION: "uPMatrix"  
								COMPOSITE: "uPMatrix"  
										IGNORED:
										VARIABLE:"uPMatrix"  
												NAME:"uPMatrix"
												IGNORED:
												IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrixUniform    =  gl . gl GetUniformLocation (  shaderProgram  ,  "uMVMatrix"   )
NAME:mvMatrixUniform  
		NAME:mvMatrixUniform
		IGNORED:
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION: gl . gl GetUniformLocation (  shaderProgram  ,  "uMVMatrix"   )
		OPENGL_CALL: gl . gl GetUniformLocation (  shaderProgram  ,  "uMVMatrix"   )
				IGNORED:
				COMPOSITE:gl .
						VALUE:gl
						KEYWORD:.
				KEYWORD:gl
				NAME:GetUniformLocation
				KEYWORD:(
				SEQUENCE: shaderProgram  ,  "uMVMatrix"  
						EXPRESSION: shaderProgram  
								COMPOSITE: shaderProgram  
										IGNORED:
										VARIABLE:shaderProgram  
												NAME:shaderProgram
												IGNORED:
												IGNORED:
						KEYWORD:, 
						EXPRESSION: "uMVMatrix"  
								COMPOSITE: "uMVMatrix"  
										IGNORED:
										VARIABLE:"uMVMatrix"  
												NAME:"uMVMatrix"
												IGNORED:
												IGNORED:
				KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> samplerUniform    =  gl . gl GetUniformLocation (  shaderProgram  ,  "uSampler"   )
NAME:samplerUniform  
		NAME:samplerUniform
		IGNORED:
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION: gl . gl GetUniformLocation (  shaderProgram  ,  "uSampler"   )
		OPENGL_CALL: gl . gl GetUniformLocation (  shaderProgram  ,  "uSampler"   )
				IGNORED:
				COMPOSITE:gl .
						VALUE:gl
						KEYWORD:.
				KEYWORD:gl
				NAME:GetUniformLocation
				KEYWORD:(
				SEQUENCE: shaderProgram  ,  "uSampler"  
						EXPRESSION: shaderProgram  
								COMPOSITE: shaderProgram  
										IGNORED:
										VARIABLE:shaderProgram  
												NAME:shaderProgram
												IGNORED:
												IGNORED:
						KEYWORD:, 
						EXPRESSION: "uSampler"  
								COMPOSITE: "uSampler"  
										IGNORED:
										VARIABLE:"uSampler"  
												NAME:"uSampler"
												IGNORED:
												IGNORED:
				KEYWORD:)


[METHOD_DECLARATION] ------->  private void setMatrixUniforms   ( GL2 gl   )
IGNORED:
SEQUENCE:private
		KEYWORD:private
VARIABLE:void setMatrixUniforms  
		TYPE:void
		NAME:setMatrixUniforms  
				NAME:setMatrixUniforms
				IGNORED:
				IGNORED:
KEYWORD:(
METHOD_VARIABLES:GL2 gl  
		VARIABLE:GL2 gl  
				TYPE:GL2
				NAME:gl  
						NAME:gl
						IGNORED:
						IGNORED:
KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl UniformMatrix4fv (  pMatrixUniform  , 16,  false  ,  pMatrix   )
OPENGL_CALL: gl . gl UniformMatrix4fv (  pMatrixUniform  , 16,  false  ,  pMatrix   )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:UniformMatrix4fv
		KEYWORD:(
		SEQUENCE: pMatrixUniform  , 16,  false  ,  pMatrix  
				EXPRESSION: pMatrixUniform  
						COMPOSITE: pMatrixUniform  
								IGNORED:
								VARIABLE:pMatrixUniform  
										NAME:pMatrixUniform
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:16
						VALUE:16
				KEYWORD:, 
				EXPRESSION: false  
						COMPOSITE: false  
								IGNORED:
								VARIABLE:false  
										NAME:false
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION: pMatrix  
						COMPOSITE: pMatrix  
								IGNORED:
								VARIABLE:pMatrix  
										NAME:pMatrix
										IGNORED:
										IGNORED:
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl UniformMatrix4fv (  mvMatrixUniform  , 16,  false  ,  mvMatrix   )
OPENGL_CALL: gl . gl UniformMatrix4fv (  mvMatrixUniform  , 16,  false  ,  mvMatrix   )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:UniformMatrix4fv
		KEYWORD:(
		SEQUENCE: mvMatrixUniform  , 16,  false  ,  mvMatrix  
				EXPRESSION: mvMatrixUniform  
						COMPOSITE: mvMatrixUniform  
								IGNORED:
								VARIABLE:mvMatrixUniform  
										NAME:mvMatrixUniform
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:16
						VALUE:16
				KEYWORD:, 
				EXPRESSION: false  
						COMPOSITE: false  
								IGNORED:
								VARIABLE:false  
										NAME:false
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION: mvMatrix  
						COMPOSITE: mvMatrix  
								IGNORED:
								VARIABLE:mvMatrix  
										NAME:mvMatrix
										IGNORED:
										IGNORED:
		KEYWORD:)


[METHOD_DECLARATION] ------->  public void initBuffers   ( GL2 gl   )
IGNORED:
SEQUENCE:public
		KEYWORD:public
VARIABLE:void initBuffers  
		TYPE:void
		NAME:initBuffers  
				NAME:initBuffers
				IGNORED:
				IGNORED:
KEYWORD:(
METHOD_VARIABLES:GL2 gl  
		VARIABLE:GL2 gl  
				TYPE:GL2
				NAME:gl  
						NAME:gl
						IGNORED:
						IGNORED:
KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl GenBuffers ( 1,  pyramidVertexPositionBuffer  , 0 )
OPENGL_CALL: gl . gl GenBuffers ( 1,  pyramidVertexPositionBuffer  , 0 )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:GenBuffers
		KEYWORD:(
		SEQUENCE:1,  pyramidVertexPositionBuffer  , 0
				EXPRESSION:1
						VALUE:1
				KEYWORD:, 
				EXPRESSION: pyramidVertexPositionBuffer  
						COMPOSITE: pyramidVertexPositionBuffer  
								IGNORED:
								VARIABLE:pyramidVertexPositionBuffer  
										NAME:pyramidVertexPositionBuffer
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  pyramidVertexPositionBuffer  [ 0 ] )
OPENGL_CALL: gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  pyramidVertexPositionBuffer  [ 0 ] )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BindBuffer
		KEYWORD:(
		SEQUENCE:GL2 .GL_ ARRAY_BUFFER,  pyramidVertexPositionBuffer  [ 0 ]
				EXPRESSION:GL2 .GL_ ARRAY_BUFFER
						OPENGL_CONSTANT:GL2 .GL_ ARRAY_BUFFER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION: pyramidVertexPositionBuffer  [ 0 ]
						COMPOSITE: pyramidVertexPositionBuffer  [ 0 ]
								IGNORED:
								VARIABLE:pyramidVertexPositionBuffer  [ 0 ]
										NAME:pyramidVertexPositionBuffer
										IGNORED:
										COMPOSITE:[ 0 ]
												KEYWORD:[
												EXPRESSION:0
														VALUE:0
												KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> float[] vertices1   = { 0.0f,1.0f,0.0f,-1.0f,-1.0f,-1.0f,-1.0f,-1.0f,1.0f,1.0f,-1.0f,1.0f,1.0f,-1.0f,-1.0f,-1.0f,-1.0f,-1.0f }
VARIABLE:float[] vertices1  
		TYPE:float[]
		NAME:vertices1  
				NAME:vertices1
				IGNORED:
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:{ 0.0f,1.0f,0.0f,-1.0f,-1.0f,-1.0f,-1.0f,-1.0f,1.0f,1.0f,-1.0f,1.0f,1.0f,-1.0f,-1.0f,-1.0f,-1.0f,-1.0f }
		KEYWORD:{
		SEQUENCE:0.0f,1.0f,0.0f,-1.0f,-1.0f,-1.0f,-1.0f,-1.0f,1.0f,1.0f,-1.0f,1.0f,1.0f,-1.0f,-1.0f,-1.0f,-1.0f,-1.0f
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
		KEYWORD:}


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BufferData ( GL2 .GL_ ARRAY_BUFFER,  vertices1.length  * BufferUtil.SIZEOF_FLOAT  ,   BufferUtil.newFloatBuffer   (  vertices1   ), GL2 .GL_ STATIC_DRAW )
OPENGL_CALL: gl . gl BufferData ( GL2 .GL_ ARRAY_BUFFER,  vertices1.length  * BufferUtil.SIZEOF_FLOAT  ,   BufferUtil.newFloatBuffer   (  vertices1   ), GL2 .GL_ STATIC_DRAW )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BufferData
		KEYWORD:(
		SEQUENCE:GL2 .GL_ ARRAY_BUFFER,  vertices1.length  * BufferUtil.SIZEOF_FLOAT  ,   BufferUtil.newFloatBuffer   (  vertices1   ), GL2 .GL_ STATIC_DRAW
				EXPRESSION:GL2 .GL_ ARRAY_BUFFER
						OPENGL_CONSTANT:GL2 .GL_ ARRAY_BUFFER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION: vertices1.length  * BufferUtil.SIZEOF_FLOAT  
						COMPOSITE: vertices1.length  
								IGNORED:
								VARIABLE:vertices1.length  
										NAME:vertices1.length
										IGNORED:
										IGNORED:
						OPERATOR:*
						COMPOSITE: BufferUtil.SIZEOF_FLOAT  
								IGNORED:
								VARIABLE:BufferUtil.SIZEOF_FLOAT  
										NAME:BufferUtil.SIZEOF_FLOAT
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:  BufferUtil.newFloatBuffer   (  vertices1   )
						CALL:  BufferUtil.newFloatBuffer   (  vertices1   )
								IGNORED:
								IGNORED:
								SEQUENCE:BufferUtil.newFloatBuffer   (  vertices1   )
										COMPOSITE:BufferUtil.newFloatBuffer   (  vertices1   )
												COMPOSITE:BufferUtil.newFloatBuffer  
														NAME:BufferUtil.newFloatBuffer
														IGNORED:
														IGNORED:
												KEYWORD:(
												SEQUENCE: vertices1  
														EXPRESSION: vertices1  
																COMPOSITE: vertices1  
																		IGNORED:
																		VARIABLE:vertices1  
																				NAME:vertices1
																				IGNORED:
																				IGNORED:
												KEYWORD:)
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ STATIC_DRAW
						OPENGL_CONSTANT:GL2 .GL_ STATIC_DRAW
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pyramidVertexPositionBuffer  [ 1 ]  = 3
NAME:pyramidVertexPositionBuffer  [ 1 ]
		NAME:pyramidVertexPositionBuffer
		IGNORED:
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:3
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pyramidVertexPositionBuffer  [ 2 ]  = 6
NAME:pyramidVertexPositionBuffer  [ 2 ]
		NAME:pyramidVertexPositionBuffer
		IGNORED:
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:6
		VALUE:6


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl GenBuffers ( 1,  pyramidVertexTextureCoordBuffer  , 0 )
OPENGL_CALL: gl . gl GenBuffers ( 1,  pyramidVertexTextureCoordBuffer  , 0 )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:GenBuffers
		KEYWORD:(
		SEQUENCE:1,  pyramidVertexTextureCoordBuffer  , 0
				EXPRESSION:1
						VALUE:1
				KEYWORD:, 
				EXPRESSION: pyramidVertexTextureCoordBuffer  
						COMPOSITE: pyramidVertexTextureCoordBuffer  
								IGNORED:
								VARIABLE:pyramidVertexTextureCoordBuffer  
										NAME:pyramidVertexTextureCoordBuffer
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  pyramidVertexTextureCoordBuffer  [ 0 ] )
OPENGL_CALL: gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  pyramidVertexTextureCoordBuffer  [ 0 ] )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BindBuffer
		KEYWORD:(
		SEQUENCE:GL2 .GL_ ARRAY_BUFFER,  pyramidVertexTextureCoordBuffer  [ 0 ]
				EXPRESSION:GL2 .GL_ ARRAY_BUFFER
						OPENGL_CONSTANT:GL2 .GL_ ARRAY_BUFFER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION: pyramidVertexTextureCoordBuffer  [ 0 ]
						COMPOSITE: pyramidVertexTextureCoordBuffer  [ 0 ]
								IGNORED:
								VARIABLE:pyramidVertexTextureCoordBuffer  [ 0 ]
										NAME:pyramidVertexTextureCoordBuffer
										IGNORED:
										COMPOSITE:[ 0 ]
												KEYWORD:[
												EXPRESSION:0
														VALUE:0
												KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> float[] textureCoords1   = { 3.0f,0.0f,0.0f,6.0f,6.0f,6.0f,0.0f,6.0f,6.0f,6.0f,0.0f,6.0f }
VARIABLE:float[] textureCoords1  
		TYPE:float[]
		NAME:textureCoords1  
				NAME:textureCoords1
				IGNORED:
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:{ 3.0f,0.0f,0.0f,6.0f,6.0f,6.0f,0.0f,6.0f,6.0f,6.0f,0.0f,6.0f }
		KEYWORD:{
		SEQUENCE:3.0f,0.0f,0.0f,6.0f,6.0f,6.0f,0.0f,6.0f,6.0f,6.0f,0.0f,6.0f
				EXPRESSION:3.0f
						VALUE:3.0f
				KEYWORD:,
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:,
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:,
				EXPRESSION:6.0f
						VALUE:6.0f
				KEYWORD:,
				EXPRESSION:6.0f
						VALUE:6.0f
				KEYWORD:,
				EXPRESSION:6.0f
						VALUE:6.0f
				KEYWORD:,
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:,
				EXPRESSION:6.0f
						VALUE:6.0f
				KEYWORD:,
				EXPRESSION:6.0f
						VALUE:6.0f
				KEYWORD:,
				EXPRESSION:6.0f
						VALUE:6.0f
				KEYWORD:,
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:,
				EXPRESSION:6.0f
						VALUE:6.0f
		KEYWORD:}


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BufferData ( GL2 .GL_ ARRAY_BUFFER,  textureCoords1.length  * BufferUtil.SIZEOF_FLOAT  ,   BufferUtil.newFloatBuffer   (  textureCoords1   ), GL2 .GL_ STATIC_DRAW )
OPENGL_CALL: gl . gl BufferData ( GL2 .GL_ ARRAY_BUFFER,  textureCoords1.length  * BufferUtil.SIZEOF_FLOAT  ,   BufferUtil.newFloatBuffer   (  textureCoords1   ), GL2 .GL_ STATIC_DRAW )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BufferData
		KEYWORD:(
		SEQUENCE:GL2 .GL_ ARRAY_BUFFER,  textureCoords1.length  * BufferUtil.SIZEOF_FLOAT  ,   BufferUtil.newFloatBuffer   (  textureCoords1   ), GL2 .GL_ STATIC_DRAW
				EXPRESSION:GL2 .GL_ ARRAY_BUFFER
						OPENGL_CONSTANT:GL2 .GL_ ARRAY_BUFFER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION: textureCoords1.length  * BufferUtil.SIZEOF_FLOAT  
						COMPOSITE: textureCoords1.length  
								IGNORED:
								VARIABLE:textureCoords1.length  
										NAME:textureCoords1.length
										IGNORED:
										IGNORED:
						OPERATOR:*
						COMPOSITE: BufferUtil.SIZEOF_FLOAT  
								IGNORED:
								VARIABLE:BufferUtil.SIZEOF_FLOAT  
										NAME:BufferUtil.SIZEOF_FLOAT
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:  BufferUtil.newFloatBuffer   (  textureCoords1   )
						CALL:  BufferUtil.newFloatBuffer   (  textureCoords1   )
								IGNORED:
								IGNORED:
								SEQUENCE:BufferUtil.newFloatBuffer   (  textureCoords1   )
										COMPOSITE:BufferUtil.newFloatBuffer   (  textureCoords1   )
												COMPOSITE:BufferUtil.newFloatBuffer  
														NAME:BufferUtil.newFloatBuffer
														IGNORED:
														IGNORED:
												KEYWORD:(
												SEQUENCE: textureCoords1  
														EXPRESSION: textureCoords1  
																COMPOSITE: textureCoords1  
																		IGNORED:
																		VARIABLE:textureCoords1  
																				NAME:textureCoords1
																				IGNORED:
																				IGNORED:
												KEYWORD:)
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ STATIC_DRAW
						OPENGL_CONSTANT:GL2 .GL_ STATIC_DRAW
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pyramidVertexTextureCoordBuffer  [ 1 ]  = 2
NAME:pyramidVertexTextureCoordBuffer  [ 1 ]
		NAME:pyramidVertexTextureCoordBuffer
		IGNORED:
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:2
		VALUE:2


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pyramidVertexTextureCoordBuffer  [ 2 ]  = 6
NAME:pyramidVertexTextureCoordBuffer  [ 2 ]
		NAME:pyramidVertexTextureCoordBuffer
		IGNORED:
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:6
		VALUE:6


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl GenBuffers ( 1,  cubeVertexPositionBuffer  , 0 )
OPENGL_CALL: gl . gl GenBuffers ( 1,  cubeVertexPositionBuffer  , 0 )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:GenBuffers
		KEYWORD:(
		SEQUENCE:1,  cubeVertexPositionBuffer  , 0
				EXPRESSION:1
						VALUE:1
				KEYWORD:, 
				EXPRESSION: cubeVertexPositionBuffer  
						COMPOSITE: cubeVertexPositionBuffer  
								IGNORED:
								VARIABLE:cubeVertexPositionBuffer  
										NAME:cubeVertexPositionBuffer
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  cubeVertexPositionBuffer  [ 0 ] )
OPENGL_CALL: gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  cubeVertexPositionBuffer  [ 0 ] )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BindBuffer
		KEYWORD:(
		SEQUENCE:GL2 .GL_ ARRAY_BUFFER,  cubeVertexPositionBuffer  [ 0 ]
				EXPRESSION:GL2 .GL_ ARRAY_BUFFER
						OPENGL_CONSTANT:GL2 .GL_ ARRAY_BUFFER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION: cubeVertexPositionBuffer  [ 0 ]
						COMPOSITE: cubeVertexPositionBuffer  [ 0 ]
								IGNORED:
								VARIABLE:cubeVertexPositionBuffer  [ 0 ]
										NAME:cubeVertexPositionBuffer
										IGNORED:
										COMPOSITE:[ 0 ]
												KEYWORD:[
												EXPRESSION:0
														VALUE:0
												KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> float[] vertices2   = { -1.0f,-1.0f,1.0f,1.0f,-1.0f,1.0f,1.0f,1.0f,1.0f,-1.0f,1.0f,1.0f,-1.0f,-1.0f,-1.0f,-1.0f,1.0f,-1.0f,1.0f,1.0f,-1.0f,1.0f,-1.0f,-1.0f,1.0f,-1.0f,-1.0f,1.0f,1.0f,-1.0f,1.0f,1.0f,1.0f,1.0f,-1.0f,1.0f,-1.0f,-1.0f,-1.0f,-1.0f,-1.0f,1.0f,-1.0f,1.0f,1.0f,-1.0f,1.0f,-1.0f }
VARIABLE:float[] vertices2  
		TYPE:float[]
		NAME:vertices2  
				NAME:vertices2
				IGNORED:
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:{ -1.0f,-1.0f,1.0f,1.0f,-1.0f,1.0f,1.0f,1.0f,1.0f,-1.0f,1.0f,1.0f,-1.0f,-1.0f,-1.0f,-1.0f,1.0f,-1.0f,1.0f,1.0f,-1.0f,1.0f,-1.0f,-1.0f,1.0f,-1.0f,-1.0f,1.0f,1.0f,-1.0f,1.0f,1.0f,1.0f,1.0f,-1.0f,1.0f,-1.0f,-1.0f,-1.0f,-1.0f,-1.0f,1.0f,-1.0f,1.0f,1.0f,-1.0f,1.0f,-1.0f }
		KEYWORD:{
		SEQUENCE:-1.0f,-1.0f,1.0f,1.0f,-1.0f,1.0f,1.0f,1.0f,1.0f,-1.0f,1.0f,1.0f,-1.0f,-1.0f,-1.0f,-1.0f,1.0f,-1.0f,1.0f,1.0f,-1.0f,1.0f,-1.0f,-1.0f,1.0f,-1.0f,-1.0f,1.0f,1.0f,-1.0f,1.0f,1.0f,1.0f,1.0f,-1.0f,1.0f,-1.0f,-1.0f,-1.0f,-1.0f,-1.0f,1.0f,-1.0f,1.0f,1.0f,-1.0f,1.0f,-1.0f
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
		KEYWORD:}


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BufferData ( GL2 .GL_ ARRAY_BUFFER,  vertices2.length  * BufferUtil.SIZEOF_FLOAT  ,   BufferUtil.newFloatBuffer   (  vertices2   ), GL2 .GL_ STATIC_DRAW )
OPENGL_CALL: gl . gl BufferData ( GL2 .GL_ ARRAY_BUFFER,  vertices2.length  * BufferUtil.SIZEOF_FLOAT  ,   BufferUtil.newFloatBuffer   (  vertices2   ), GL2 .GL_ STATIC_DRAW )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BufferData
		KEYWORD:(
		SEQUENCE:GL2 .GL_ ARRAY_BUFFER,  vertices2.length  * BufferUtil.SIZEOF_FLOAT  ,   BufferUtil.newFloatBuffer   (  vertices2   ), GL2 .GL_ STATIC_DRAW
				EXPRESSION:GL2 .GL_ ARRAY_BUFFER
						OPENGL_CONSTANT:GL2 .GL_ ARRAY_BUFFER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION: vertices2.length  * BufferUtil.SIZEOF_FLOAT  
						COMPOSITE: vertices2.length  
								IGNORED:
								VARIABLE:vertices2.length  
										NAME:vertices2.length
										IGNORED:
										IGNORED:
						OPERATOR:*
						COMPOSITE: BufferUtil.SIZEOF_FLOAT  
								IGNORED:
								VARIABLE:BufferUtil.SIZEOF_FLOAT  
										NAME:BufferUtil.SIZEOF_FLOAT
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:  BufferUtil.newFloatBuffer   (  vertices2   )
						CALL:  BufferUtil.newFloatBuffer   (  vertices2   )
								IGNORED:
								IGNORED:
								SEQUENCE:BufferUtil.newFloatBuffer   (  vertices2   )
										COMPOSITE:BufferUtil.newFloatBuffer   (  vertices2   )
												COMPOSITE:BufferUtil.newFloatBuffer  
														NAME:BufferUtil.newFloatBuffer
														IGNORED:
														IGNORED:
												KEYWORD:(
												SEQUENCE: vertices2  
														EXPRESSION: vertices2  
																COMPOSITE: vertices2  
																		IGNORED:
																		VARIABLE:vertices2  
																				NAME:vertices2
																				IGNORED:
																				IGNORED:
												KEYWORD:)
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ STATIC_DRAW
						OPENGL_CONSTANT:GL2 .GL_ STATIC_DRAW
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexPositionBuffer  [ 1 ]  = 3
NAME:cubeVertexPositionBuffer  [ 1 ]
		NAME:cubeVertexPositionBuffer
		IGNORED:
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:3
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexPositionBuffer  [ 2 ]  = 16
NAME:cubeVertexPositionBuffer  [ 2 ]
		NAME:cubeVertexPositionBuffer
		IGNORED:
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:16
		VALUE:16


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl GenBuffers ( 1,  cubeVertexTextureCoordBuffer  , 0 )
OPENGL_CALL: gl . gl GenBuffers ( 1,  cubeVertexTextureCoordBuffer  , 0 )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:GenBuffers
		KEYWORD:(
		SEQUENCE:1,  cubeVertexTextureCoordBuffer  , 0
				EXPRESSION:1
						VALUE:1
				KEYWORD:, 
				EXPRESSION: cubeVertexTextureCoordBuffer  
						COMPOSITE: cubeVertexTextureCoordBuffer  
								IGNORED:
								VARIABLE:cubeVertexTextureCoordBuffer  
										NAME:cubeVertexTextureCoordBuffer
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  cubeVertexTextureCoordBuffer  [ 0 ] )
OPENGL_CALL: gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  cubeVertexTextureCoordBuffer  [ 0 ] )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BindBuffer
		KEYWORD:(
		SEQUENCE:GL2 .GL_ ARRAY_BUFFER,  cubeVertexTextureCoordBuffer  [ 0 ]
				EXPRESSION:GL2 .GL_ ARRAY_BUFFER
						OPENGL_CONSTANT:GL2 .GL_ ARRAY_BUFFER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION: cubeVertexTextureCoordBuffer  [ 0 ]
						COMPOSITE: cubeVertexTextureCoordBuffer  [ 0 ]
								IGNORED:
								VARIABLE:cubeVertexTextureCoordBuffer  [ 0 ]
										NAME:cubeVertexTextureCoordBuffer
										IGNORED:
										COMPOSITE:[ 0 ]
												KEYWORD:[
												EXPRESSION:0
														VALUE:0
												KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> float[] textureCoords2   = { 0.0f,0.0f,10.0f,0.0f,10.0f,10.0f,0.0f,10.0f,10.0f,0.0f,10.0f,10.0f,0.0f,10.0f,0.0f,0.0f,10.0f,0.0f,10.0f,10.0f,0.0f,10.0f,0.0f,0.0f,0.0f,0.0f,10.0f,0.0f,10.0f,10.0f,0.0f,10.0f }
VARIABLE:float[] textureCoords2  
		TYPE:float[]
		NAME:textureCoords2  
				NAME:textureCoords2
				IGNORED:
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:{ 0.0f,0.0f,10.0f,0.0f,10.0f,10.0f,0.0f,10.0f,10.0f,0.0f,10.0f,10.0f,0.0f,10.0f,0.0f,0.0f,10.0f,0.0f,10.0f,10.0f,0.0f,10.0f,0.0f,0.0f,0.0f,0.0f,10.0f,0.0f,10.0f,10.0f,0.0f,10.0f }
		KEYWORD:{
		SEQUENCE:0.0f,0.0f,10.0f,0.0f,10.0f,10.0f,0.0f,10.0f,10.0f,0.0f,10.0f,10.0f,0.0f,10.0f,0.0f,0.0f,10.0f,0.0f,10.0f,10.0f,0.0f,10.0f,0.0f,0.0f,0.0f,0.0f,10.0f,0.0f,10.0f,10.0f,0.0f,10.0f
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:,
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:,
				EXPRESSION:10.0f
						VALUE:10.0f
				KEYWORD:,
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:,
				EXPRESSION:10.0f
						VALUE:10.0f
				KEYWORD:,
				EXPRESSION:10.0f
						VALUE:10.0f
				KEYWORD:,
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:,
				EXPRESSION:10.0f
						VALUE:10.0f
				KEYWORD:,
				EXPRESSION:10.0f
						VALUE:10.0f
				KEYWORD:,
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:,
				EXPRESSION:10.0f
						VALUE:10.0f
				KEYWORD:,
				EXPRESSION:10.0f
						VALUE:10.0f
				KEYWORD:,
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:,
				EXPRESSION:10.0f
						VALUE:10.0f
				KEYWORD:,
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:,
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:,
				EXPRESSION:10.0f
						VALUE:10.0f
				KEYWORD:,
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:,
				EXPRESSION:10.0f
						VALUE:10.0f
				KEYWORD:,
				EXPRESSION:10.0f
						VALUE:10.0f
				KEYWORD:,
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:,
				EXPRESSION:10.0f
						VALUE:10.0f
				KEYWORD:,
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:,
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:,
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:,
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:,
				EXPRESSION:10.0f
						VALUE:10.0f
				KEYWORD:,
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:,
				EXPRESSION:10.0f
						VALUE:10.0f
				KEYWORD:,
				EXPRESSION:10.0f
						VALUE:10.0f
				KEYWORD:,
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:,
				EXPRESSION:10.0f
						VALUE:10.0f
		KEYWORD:}


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BufferData ( GL2 .GL_ ARRAY_BUFFER,  textureCoords2.length  * BufferUtil.SIZEOF_FLOAT  ,   BufferUtil.newFloatBuffer   (  textureCoords2   ), GL2 .GL_ STATIC_DRAW )
OPENGL_CALL: gl . gl BufferData ( GL2 .GL_ ARRAY_BUFFER,  textureCoords2.length  * BufferUtil.SIZEOF_FLOAT  ,   BufferUtil.newFloatBuffer   (  textureCoords2   ), GL2 .GL_ STATIC_DRAW )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BufferData
		KEYWORD:(
		SEQUENCE:GL2 .GL_ ARRAY_BUFFER,  textureCoords2.length  * BufferUtil.SIZEOF_FLOAT  ,   BufferUtil.newFloatBuffer   (  textureCoords2   ), GL2 .GL_ STATIC_DRAW
				EXPRESSION:GL2 .GL_ ARRAY_BUFFER
						OPENGL_CONSTANT:GL2 .GL_ ARRAY_BUFFER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION: textureCoords2.length  * BufferUtil.SIZEOF_FLOAT  
						COMPOSITE: textureCoords2.length  
								IGNORED:
								VARIABLE:textureCoords2.length  
										NAME:textureCoords2.length
										IGNORED:
										IGNORED:
						OPERATOR:*
						COMPOSITE: BufferUtil.SIZEOF_FLOAT  
								IGNORED:
								VARIABLE:BufferUtil.SIZEOF_FLOAT  
										NAME:BufferUtil.SIZEOF_FLOAT
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:  BufferUtil.newFloatBuffer   (  textureCoords2   )
						CALL:  BufferUtil.newFloatBuffer   (  textureCoords2   )
								IGNORED:
								IGNORED:
								SEQUENCE:BufferUtil.newFloatBuffer   (  textureCoords2   )
										COMPOSITE:BufferUtil.newFloatBuffer   (  textureCoords2   )
												COMPOSITE:BufferUtil.newFloatBuffer  
														NAME:BufferUtil.newFloatBuffer
														IGNORED:
														IGNORED:
												KEYWORD:(
												SEQUENCE: textureCoords2  
														EXPRESSION: textureCoords2  
																COMPOSITE: textureCoords2  
																		IGNORED:
																		VARIABLE:textureCoords2  
																				NAME:textureCoords2
																				IGNORED:
																				IGNORED:
												KEYWORD:)
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ STATIC_DRAW
						OPENGL_CONSTANT:GL2 .GL_ STATIC_DRAW
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexTextureCoordBuffer  [ 1 ]  = 2
NAME:cubeVertexTextureCoordBuffer  [ 1 ]
		NAME:cubeVertexTextureCoordBuffer
		IGNORED:
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:2
		VALUE:2


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexTextureCoordBuffer  [ 2 ]  = 16
NAME:cubeVertexTextureCoordBuffer  [ 2 ]
		NAME:cubeVertexTextureCoordBuffer
		IGNORED:
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:16
		VALUE:16


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl GenBuffers ( 1,  cubeVertexIndexBuffer  , 0 )
OPENGL_CALL: gl . gl GenBuffers ( 1,  cubeVertexIndexBuffer  , 0 )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:GenBuffers
		KEYWORD:(
		SEQUENCE:1,  cubeVertexIndexBuffer  , 0
				EXPRESSION:1
						VALUE:1
				KEYWORD:, 
				EXPRESSION: cubeVertexIndexBuffer  
						COMPOSITE: cubeVertexIndexBuffer  
								IGNORED:
								VARIABLE:cubeVertexIndexBuffer  
										NAME:cubeVertexIndexBuffer
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BindBuffer ( GL2 .GL_ ELEMENT_ARRAY_BUFFER,  cubeVertexIndexBuffer  [ 0 ] )
OPENGL_CALL: gl . gl BindBuffer ( GL2 .GL_ ELEMENT_ARRAY_BUFFER,  cubeVertexIndexBuffer  [ 0 ] )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BindBuffer
		KEYWORD:(
		SEQUENCE:GL2 .GL_ ELEMENT_ARRAY_BUFFER,  cubeVertexIndexBuffer  [ 0 ]
				EXPRESSION:GL2 .GL_ ELEMENT_ARRAY_BUFFER
						OPENGL_CONSTANT:GL2 .GL_ ELEMENT_ARRAY_BUFFER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:ELEMENT_ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION: cubeVertexIndexBuffer  [ 0 ]
						COMPOSITE: cubeVertexIndexBuffer  [ 0 ]
								IGNORED:
								VARIABLE:cubeVertexIndexBuffer  [ 0 ]
										NAME:cubeVertexIndexBuffer
										IGNORED:
										COMPOSITE:[ 0 ]
												KEYWORD:[
												EXPRESSION:0
														VALUE:0
												KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> short[] cubeVertexIndices   = { 0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15 }
VARIABLE:short[] cubeVertexIndices  
		TYPE:short[]
		NAME:cubeVertexIndices  
				NAME:cubeVertexIndices
				IGNORED:
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:{ 0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15 }
		KEYWORD:{
		SEQUENCE:0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15
				EXPRESSION:0
						VALUE:0
				KEYWORD:,
				EXPRESSION:1
						VALUE:1
				KEYWORD:,
				EXPRESSION:2
						VALUE:2
				KEYWORD:,
				EXPRESSION:0
						VALUE:0
				KEYWORD:,
				EXPRESSION:2
						VALUE:2
				KEYWORD:,
				EXPRESSION:3
						VALUE:3
				KEYWORD:,
				EXPRESSION:4
						VALUE:4
				KEYWORD:,
				EXPRESSION:5
						VALUE:5
				KEYWORD:,
				EXPRESSION:6
						VALUE:6
				KEYWORD:,
				EXPRESSION:4
						VALUE:4
				KEYWORD:,
				EXPRESSION:6
						VALUE:6
				KEYWORD:,
				EXPRESSION:7
						VALUE:7
				KEYWORD:,
				EXPRESSION:8
						VALUE:8
				KEYWORD:,
				EXPRESSION:9
						VALUE:9
				KEYWORD:,
				EXPRESSION:10
						VALUE:10
				KEYWORD:,
				EXPRESSION:8
						VALUE:8
				KEYWORD:,
				EXPRESSION:10
						VALUE:10
				KEYWORD:,
				EXPRESSION:11
						VALUE:11
				KEYWORD:,
				EXPRESSION:12
						VALUE:12
				KEYWORD:,
				EXPRESSION:13
						VALUE:13
				KEYWORD:,
				EXPRESSION:14
						VALUE:14
				KEYWORD:,
				EXPRESSION:12
						VALUE:12
				KEYWORD:,
				EXPRESSION:14
						VALUE:14
				KEYWORD:,
				EXPRESSION:15
						VALUE:15
		KEYWORD:}


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BufferData ( GL2 .GL_ ELEMENT_ARRAY_BUFFER,  cubeVertexIndices.length  * BufferUtil.SIZEOF_SHORT  ,   BufferUtil.newShortBuffer   (  cubeVertexIndices   ), GL2 .GL_ STATIC_DRAW )
OPENGL_CALL: gl . gl BufferData ( GL2 .GL_ ELEMENT_ARRAY_BUFFER,  cubeVertexIndices.length  * BufferUtil.SIZEOF_SHORT  ,   BufferUtil.newShortBuffer   (  cubeVertexIndices   ), GL2 .GL_ STATIC_DRAW )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BufferData
		KEYWORD:(
		SEQUENCE:GL2 .GL_ ELEMENT_ARRAY_BUFFER,  cubeVertexIndices.length  * BufferUtil.SIZEOF_SHORT  ,   BufferUtil.newShortBuffer   (  cubeVertexIndices   ), GL2 .GL_ STATIC_DRAW
				EXPRESSION:GL2 .GL_ ELEMENT_ARRAY_BUFFER
						OPENGL_CONSTANT:GL2 .GL_ ELEMENT_ARRAY_BUFFER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:ELEMENT_ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION: cubeVertexIndices.length  * BufferUtil.SIZEOF_SHORT  
						COMPOSITE: cubeVertexIndices.length  
								IGNORED:
								VARIABLE:cubeVertexIndices.length  
										NAME:cubeVertexIndices.length
										IGNORED:
										IGNORED:
						OPERATOR:*
						COMPOSITE: BufferUtil.SIZEOF_SHORT  
								IGNORED:
								VARIABLE:BufferUtil.SIZEOF_SHORT  
										NAME:BufferUtil.SIZEOF_SHORT
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:  BufferUtil.newShortBuffer   (  cubeVertexIndices   )
						CALL:  BufferUtil.newShortBuffer   (  cubeVertexIndices   )
								IGNORED:
								IGNORED:
								SEQUENCE:BufferUtil.newShortBuffer   (  cubeVertexIndices   )
										COMPOSITE:BufferUtil.newShortBuffer   (  cubeVertexIndices   )
												COMPOSITE:BufferUtil.newShortBuffer  
														NAME:BufferUtil.newShortBuffer
														IGNORED:
														IGNORED:
												KEYWORD:(
												SEQUENCE: cubeVertexIndices  
														EXPRESSION: cubeVertexIndices  
																COMPOSITE: cubeVertexIndices  
																		IGNORED:
																		VARIABLE:cubeVertexIndices  
																				NAME:cubeVertexIndices
																				IGNORED:
																				IGNORED:
												KEYWORD:)
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ STATIC_DRAW
						OPENGL_CONSTANT:GL2 .GL_ STATIC_DRAW
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexIndexBuffer  [ 1 ]  = 1
NAME:cubeVertexIndexBuffer  [ 1 ]
		NAME:cubeVertexIndexBuffer
		IGNORED:
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:1
		VALUE:1


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> cubeVertexIndexBuffer  [ 2 ]  = 24
NAME:cubeVertexIndexBuffer  [ 2 ]
		NAME:cubeVertexIndexBuffer
		IGNORED:
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:24
		VALUE:24


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl GenBuffers ( 1,  greenVertexPositionBuffer  , 0 )
OPENGL_CALL: gl . gl GenBuffers ( 1,  greenVertexPositionBuffer  , 0 )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:GenBuffers
		KEYWORD:(
		SEQUENCE:1,  greenVertexPositionBuffer  , 0
				EXPRESSION:1
						VALUE:1
				KEYWORD:, 
				EXPRESSION: greenVertexPositionBuffer  
						COMPOSITE: greenVertexPositionBuffer  
								IGNORED:
								VARIABLE:greenVertexPositionBuffer  
										NAME:greenVertexPositionBuffer
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  greenVertexPositionBuffer  [ 0 ] )
OPENGL_CALL: gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  greenVertexPositionBuffer  [ 0 ] )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BindBuffer
		KEYWORD:(
		SEQUENCE:GL2 .GL_ ARRAY_BUFFER,  greenVertexPositionBuffer  [ 0 ]
				EXPRESSION:GL2 .GL_ ARRAY_BUFFER
						OPENGL_CONSTANT:GL2 .GL_ ARRAY_BUFFER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION: greenVertexPositionBuffer  [ 0 ]
						COMPOSITE: greenVertexPositionBuffer  [ 0 ]
								IGNORED:
								VARIABLE:greenVertexPositionBuffer  [ 0 ]
										NAME:greenVertexPositionBuffer
										IGNORED:
										COMPOSITE:[ 0 ]
												KEYWORD:[
												EXPRESSION:0
														VALUE:0
												KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> float[] vertices3   = { -1.0f,-1.0f,-1.0f,-1.0f,-1.0f,1.0f,1.0f,-1.0f,-1.0f,1.0f,-1.0f,1.0f }
VARIABLE:float[] vertices3  
		TYPE:float[]
		NAME:vertices3  
				NAME:vertices3
				IGNORED:
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:{ -1.0f,-1.0f,-1.0f,-1.0f,-1.0f,1.0f,1.0f,-1.0f,-1.0f,1.0f,-1.0f,1.0f }
		KEYWORD:{
		SEQUENCE:-1.0f,-1.0f,-1.0f,-1.0f,-1.0f,1.0f,1.0f,-1.0f,-1.0f,1.0f,-1.0f,1.0f
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
		KEYWORD:}


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BufferData ( GL2 .GL_ ARRAY_BUFFER,  vertices3.length  * BufferUtil.SIZEOF_FLOAT  ,   BufferUtil.newFloatBuffer   (  vertices3   ), GL2 .GL_ STATIC_DRAW )
OPENGL_CALL: gl . gl BufferData ( GL2 .GL_ ARRAY_BUFFER,  vertices3.length  * BufferUtil.SIZEOF_FLOAT  ,   BufferUtil.newFloatBuffer   (  vertices3   ), GL2 .GL_ STATIC_DRAW )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BufferData
		KEYWORD:(
		SEQUENCE:GL2 .GL_ ARRAY_BUFFER,  vertices3.length  * BufferUtil.SIZEOF_FLOAT  ,   BufferUtil.newFloatBuffer   (  vertices3   ), GL2 .GL_ STATIC_DRAW
				EXPRESSION:GL2 .GL_ ARRAY_BUFFER
						OPENGL_CONSTANT:GL2 .GL_ ARRAY_BUFFER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION: vertices3.length  * BufferUtil.SIZEOF_FLOAT  
						COMPOSITE: vertices3.length  
								IGNORED:
								VARIABLE:vertices3.length  
										NAME:vertices3.length
										IGNORED:
										IGNORED:
						OPERATOR:*
						COMPOSITE: BufferUtil.SIZEOF_FLOAT  
								IGNORED:
								VARIABLE:BufferUtil.SIZEOF_FLOAT  
										NAME:BufferUtil.SIZEOF_FLOAT
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:  BufferUtil.newFloatBuffer   (  vertices3   )
						CALL:  BufferUtil.newFloatBuffer   (  vertices3   )
								IGNORED:
								IGNORED:
								SEQUENCE:BufferUtil.newFloatBuffer   (  vertices3   )
										COMPOSITE:BufferUtil.newFloatBuffer   (  vertices3   )
												COMPOSITE:BufferUtil.newFloatBuffer  
														NAME:BufferUtil.newFloatBuffer
														IGNORED:
														IGNORED:
												KEYWORD:(
												SEQUENCE: vertices3  
														EXPRESSION: vertices3  
																COMPOSITE: vertices3  
																		IGNORED:
																		VARIABLE:vertices3  
																				NAME:vertices3
																				IGNORED:
																				IGNORED:
												KEYWORD:)
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ STATIC_DRAW
						OPENGL_CONSTANT:GL2 .GL_ STATIC_DRAW
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> greenVertexPositionBuffer  [ 1 ]  = 3
NAME:greenVertexPositionBuffer  [ 1 ]
		NAME:greenVertexPositionBuffer
		IGNORED:
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:3
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> greenVertexPositionBuffer  [ 2 ]  = 4
NAME:greenVertexPositionBuffer  [ 2 ]
		NAME:greenVertexPositionBuffer
		IGNORED:
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:4
		VALUE:4


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl GenBuffers ( 1,  greenVertexTextureCoordBuffer  , 0 )
OPENGL_CALL: gl . gl GenBuffers ( 1,  greenVertexTextureCoordBuffer  , 0 )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:GenBuffers
		KEYWORD:(
		SEQUENCE:1,  greenVertexTextureCoordBuffer  , 0
				EXPRESSION:1
						VALUE:1
				KEYWORD:, 
				EXPRESSION: greenVertexTextureCoordBuffer  
						COMPOSITE: greenVertexTextureCoordBuffer  
								IGNORED:
								VARIABLE:greenVertexTextureCoordBuffer  
										NAME:greenVertexTextureCoordBuffer
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  greenVertexTextureCoordBuffer  [ 0 ] )
OPENGL_CALL: gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  greenVertexTextureCoordBuffer  [ 0 ] )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BindBuffer
		KEYWORD:(
		SEQUENCE:GL2 .GL_ ARRAY_BUFFER,  greenVertexTextureCoordBuffer  [ 0 ]
				EXPRESSION:GL2 .GL_ ARRAY_BUFFER
						OPENGL_CONSTANT:GL2 .GL_ ARRAY_BUFFER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION: greenVertexTextureCoordBuffer  [ 0 ]
						COMPOSITE: greenVertexTextureCoordBuffer  [ 0 ]
								IGNORED:
								VARIABLE:greenVertexTextureCoordBuffer  [ 0 ]
										NAME:greenVertexTextureCoordBuffer
										IGNORED:
										COMPOSITE:[ 0 ]
												KEYWORD:[
												EXPRESSION:0
														VALUE:0
												KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> float[] textureCoords3   = { 0.0f,10.0f,0.0f,0.0f,10.0f,0.0f,10.0f,10.0f }
VARIABLE:float[] textureCoords3  
		TYPE:float[]
		NAME:textureCoords3  
				NAME:textureCoords3
				IGNORED:
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:{ 0.0f,10.0f,0.0f,0.0f,10.0f,0.0f,10.0f,10.0f }
		KEYWORD:{
		SEQUENCE:0.0f,10.0f,0.0f,0.0f,10.0f,0.0f,10.0f,10.0f
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:,
				EXPRESSION:10.0f
						VALUE:10.0f
				KEYWORD:,
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:,
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:,
				EXPRESSION:10.0f
						VALUE:10.0f
				KEYWORD:,
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:,
				EXPRESSION:10.0f
						VALUE:10.0f
				KEYWORD:,
				EXPRESSION:10.0f
						VALUE:10.0f
		KEYWORD:}


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BufferData ( GL2 .GL_ ARRAY_BUFFER,  textureCoords3.length  * BufferUtil.SIZEOF_FLOAT  ,   BufferUtil.newFloatBuffer   (  textureCoords3   ), GL2 .GL_ STATIC_DRAW )
OPENGL_CALL: gl . gl BufferData ( GL2 .GL_ ARRAY_BUFFER,  textureCoords3.length  * BufferUtil.SIZEOF_FLOAT  ,   BufferUtil.newFloatBuffer   (  textureCoords3   ), GL2 .GL_ STATIC_DRAW )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BufferData
		KEYWORD:(
		SEQUENCE:GL2 .GL_ ARRAY_BUFFER,  textureCoords3.length  * BufferUtil.SIZEOF_FLOAT  ,   BufferUtil.newFloatBuffer   (  textureCoords3   ), GL2 .GL_ STATIC_DRAW
				EXPRESSION:GL2 .GL_ ARRAY_BUFFER
						OPENGL_CONSTANT:GL2 .GL_ ARRAY_BUFFER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION: textureCoords3.length  * BufferUtil.SIZEOF_FLOAT  
						COMPOSITE: textureCoords3.length  
								IGNORED:
								VARIABLE:textureCoords3.length  
										NAME:textureCoords3.length
										IGNORED:
										IGNORED:
						OPERATOR:*
						COMPOSITE: BufferUtil.SIZEOF_FLOAT  
								IGNORED:
								VARIABLE:BufferUtil.SIZEOF_FLOAT  
										NAME:BufferUtil.SIZEOF_FLOAT
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:  BufferUtil.newFloatBuffer   (  textureCoords3   )
						CALL:  BufferUtil.newFloatBuffer   (  textureCoords3   )
								IGNORED:
								IGNORED:
								SEQUENCE:BufferUtil.newFloatBuffer   (  textureCoords3   )
										COMPOSITE:BufferUtil.newFloatBuffer   (  textureCoords3   )
												COMPOSITE:BufferUtil.newFloatBuffer  
														NAME:BufferUtil.newFloatBuffer
														IGNORED:
														IGNORED:
												KEYWORD:(
												SEQUENCE: textureCoords3  
														EXPRESSION: textureCoords3  
																COMPOSITE: textureCoords3  
																		IGNORED:
																		VARIABLE:textureCoords3  
																				NAME:textureCoords3
																				IGNORED:
																				IGNORED:
												KEYWORD:)
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ STATIC_DRAW
						OPENGL_CONSTANT:GL2 .GL_ STATIC_DRAW
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> greenVertexTextureCoordBuffer  [ 1 ]  = 2
NAME:greenVertexTextureCoordBuffer  [ 1 ]
		NAME:greenVertexTextureCoordBuffer
		IGNORED:
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:2
		VALUE:2


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> greenVertexTextureCoordBuffer  [ 2 ]  = 4
NAME:greenVertexTextureCoordBuffer  [ 2 ]
		NAME:greenVertexTextureCoordBuffer
		IGNORED:
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:4
		VALUE:4


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl GenBuffers ( 1,  doorVertexPositionBuffer  , 0 )
OPENGL_CALL: gl . gl GenBuffers ( 1,  doorVertexPositionBuffer  , 0 )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:GenBuffers
		KEYWORD:(
		SEQUENCE:1,  doorVertexPositionBuffer  , 0
				EXPRESSION:1
						VALUE:1
				KEYWORD:, 
				EXPRESSION: doorVertexPositionBuffer  
						COMPOSITE: doorVertexPositionBuffer  
								IGNORED:
								VARIABLE:doorVertexPositionBuffer  
										NAME:doorVertexPositionBuffer
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  doorVertexPositionBuffer  [ 0 ] )
OPENGL_CALL: gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  doorVertexPositionBuffer  [ 0 ] )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BindBuffer
		KEYWORD:(
		SEQUENCE:GL2 .GL_ ARRAY_BUFFER,  doorVertexPositionBuffer  [ 0 ]
				EXPRESSION:GL2 .GL_ ARRAY_BUFFER
						OPENGL_CONSTANT:GL2 .GL_ ARRAY_BUFFER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION: doorVertexPositionBuffer  [ 0 ]
						COMPOSITE: doorVertexPositionBuffer  [ 0 ]
								IGNORED:
								VARIABLE:doorVertexPositionBuffer  [ 0 ]
										NAME:doorVertexPositionBuffer
										IGNORED:
										COMPOSITE:[ 0 ]
												KEYWORD:[
												EXPRESSION:0
														VALUE:0
												KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> float[] vertices4   = { -0.2f,-1.0f,1.001f,0.2f,-1.0f,1.001f,-0.2f,0.0f,1.001f,0.2f,0.0f,1.001f }
VARIABLE:float[] vertices4  
		TYPE:float[]
		NAME:vertices4  
				NAME:vertices4
				IGNORED:
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:{ -0.2f,-1.0f,1.001f,0.2f,-1.0f,1.001f,-0.2f,0.0f,1.001f,0.2f,0.0f,1.001f }
		KEYWORD:{
		SEQUENCE:-0.2f,-1.0f,1.001f,0.2f,-1.0f,1.001f,-0.2f,0.0f,1.001f,0.2f,0.0f,1.001f
				EXPRESSION:-0.2f
						VALUE:-0.2f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:1.001f
						VALUE:1.001f
				KEYWORD:,
				EXPRESSION:0.2f
						VALUE:0.2f
				KEYWORD:,
				EXPRESSION:-1.0f
						VALUE:-1.0f
				KEYWORD:,
				EXPRESSION:1.001f
						VALUE:1.001f
				KEYWORD:,
				EXPRESSION:-0.2f
						VALUE:-0.2f
				KEYWORD:,
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:,
				EXPRESSION:1.001f
						VALUE:1.001f
				KEYWORD:,
				EXPRESSION:0.2f
						VALUE:0.2f
				KEYWORD:,
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:,
				EXPRESSION:1.001f
						VALUE:1.001f
		KEYWORD:}


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BufferData ( GL2 .GL_ ARRAY_BUFFER,  vertices4.length  * BufferUtil.SIZEOF_FLOAT  ,   BufferUtil.newFloatBuffer   (  vertices4   ), GL2 .GL_ STATIC_DRAW )
OPENGL_CALL: gl . gl BufferData ( GL2 .GL_ ARRAY_BUFFER,  vertices4.length  * BufferUtil.SIZEOF_FLOAT  ,   BufferUtil.newFloatBuffer   (  vertices4   ), GL2 .GL_ STATIC_DRAW )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BufferData
		KEYWORD:(
		SEQUENCE:GL2 .GL_ ARRAY_BUFFER,  vertices4.length  * BufferUtil.SIZEOF_FLOAT  ,   BufferUtil.newFloatBuffer   (  vertices4   ), GL2 .GL_ STATIC_DRAW
				EXPRESSION:GL2 .GL_ ARRAY_BUFFER
						OPENGL_CONSTANT:GL2 .GL_ ARRAY_BUFFER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION: vertices4.length  * BufferUtil.SIZEOF_FLOAT  
						COMPOSITE: vertices4.length  
								IGNORED:
								VARIABLE:vertices4.length  
										NAME:vertices4.length
										IGNORED:
										IGNORED:
						OPERATOR:*
						COMPOSITE: BufferUtil.SIZEOF_FLOAT  
								IGNORED:
								VARIABLE:BufferUtil.SIZEOF_FLOAT  
										NAME:BufferUtil.SIZEOF_FLOAT
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:  BufferUtil.newFloatBuffer   (  vertices4   )
						CALL:  BufferUtil.newFloatBuffer   (  vertices4   )
								IGNORED:
								IGNORED:
								SEQUENCE:BufferUtil.newFloatBuffer   (  vertices4   )
										COMPOSITE:BufferUtil.newFloatBuffer   (  vertices4   )
												COMPOSITE:BufferUtil.newFloatBuffer  
														NAME:BufferUtil.newFloatBuffer
														IGNORED:
														IGNORED:
												KEYWORD:(
												SEQUENCE: vertices4  
														EXPRESSION: vertices4  
																COMPOSITE: vertices4  
																		IGNORED:
																		VARIABLE:vertices4  
																				NAME:vertices4
																				IGNORED:
																				IGNORED:
												KEYWORD:)
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ STATIC_DRAW
						OPENGL_CONSTANT:GL2 .GL_ STATIC_DRAW
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> doorVertexPositionBuffer  [ 1 ]  = 3
NAME:doorVertexPositionBuffer  [ 1 ]
		NAME:doorVertexPositionBuffer
		IGNORED:
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:3
		VALUE:3


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> doorVertexPositionBuffer  [ 2 ]  = 4
NAME:doorVertexPositionBuffer  [ 2 ]
		NAME:doorVertexPositionBuffer
		IGNORED:
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:4
		VALUE:4


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl GenBuffers ( 1,  doorVertexTextureCoordBuffer  , 0 )
OPENGL_CALL: gl . gl GenBuffers ( 1,  doorVertexTextureCoordBuffer  , 0 )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:GenBuffers
		KEYWORD:(
		SEQUENCE:1,  doorVertexTextureCoordBuffer  , 0
				EXPRESSION:1
						VALUE:1
				KEYWORD:, 
				EXPRESSION: doorVertexTextureCoordBuffer  
						COMPOSITE: doorVertexTextureCoordBuffer  
								IGNORED:
								VARIABLE:doorVertexTextureCoordBuffer  
										NAME:doorVertexTextureCoordBuffer
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  doorVertexTextureCoordBuffer  [ 0 ] )
OPENGL_CALL: gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  doorVertexTextureCoordBuffer  [ 0 ] )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BindBuffer
		KEYWORD:(
		SEQUENCE:GL2 .GL_ ARRAY_BUFFER,  doorVertexTextureCoordBuffer  [ 0 ]
				EXPRESSION:GL2 .GL_ ARRAY_BUFFER
						OPENGL_CONSTANT:GL2 .GL_ ARRAY_BUFFER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION: doorVertexTextureCoordBuffer  [ 0 ]
						COMPOSITE: doorVertexTextureCoordBuffer  [ 0 ]
								IGNORED:
								VARIABLE:doorVertexTextureCoordBuffer  [ 0 ]
										NAME:doorVertexTextureCoordBuffer
										IGNORED:
										COMPOSITE:[ 0 ]
												KEYWORD:[
												EXPRESSION:0
														VALUE:0
												KEYWORD:]
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> float[] textureCoords4   = { 0.0f,1.0f,1.0f,1.0f,0.0f,0.0f,1.0f,0.0f }
VARIABLE:float[] textureCoords4  
		TYPE:float[]
		NAME:textureCoords4  
				NAME:textureCoords4
				IGNORED:
				IGNORED:
KEYWORD:=
ARRAY_CONTENT:{ 0.0f,1.0f,1.0f,1.0f,0.0f,0.0f,1.0f,0.0f }
		KEYWORD:{
		SEQUENCE:0.0f,1.0f,1.0f,1.0f,0.0f,0.0f,1.0f,0.0f
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:,
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:,
				EXPRESSION:1.0f
						VALUE:1.0f
				KEYWORD:,
				EXPRESSION:0.0f
						VALUE:0.0f
		KEYWORD:}


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BufferData ( GL2 .GL_ ARRAY_BUFFER,  textureCoords4.length  * BufferUtil.SIZEOF_FLOAT  ,   BufferUtil.newFloatBuffer   (  textureCoords4   ), GL2 .GL_ STATIC_DRAW )
OPENGL_CALL: gl . gl BufferData ( GL2 .GL_ ARRAY_BUFFER,  textureCoords4.length  * BufferUtil.SIZEOF_FLOAT  ,   BufferUtil.newFloatBuffer   (  textureCoords4   ), GL2 .GL_ STATIC_DRAW )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BufferData
		KEYWORD:(
		SEQUENCE:GL2 .GL_ ARRAY_BUFFER,  textureCoords4.length  * BufferUtil.SIZEOF_FLOAT  ,   BufferUtil.newFloatBuffer   (  textureCoords4   ), GL2 .GL_ STATIC_DRAW
				EXPRESSION:GL2 .GL_ ARRAY_BUFFER
						OPENGL_CONSTANT:GL2 .GL_ ARRAY_BUFFER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION: textureCoords4.length  * BufferUtil.SIZEOF_FLOAT  
						COMPOSITE: textureCoords4.length  
								IGNORED:
								VARIABLE:textureCoords4.length  
										NAME:textureCoords4.length
										IGNORED:
										IGNORED:
						OPERATOR:*
						COMPOSITE: BufferUtil.SIZEOF_FLOAT  
								IGNORED:
								VARIABLE:BufferUtil.SIZEOF_FLOAT  
										NAME:BufferUtil.SIZEOF_FLOAT
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:  BufferUtil.newFloatBuffer   (  textureCoords4   )
						CALL:  BufferUtil.newFloatBuffer   (  textureCoords4   )
								IGNORED:
								IGNORED:
								SEQUENCE:BufferUtil.newFloatBuffer   (  textureCoords4   )
										COMPOSITE:BufferUtil.newFloatBuffer   (  textureCoords4   )
												COMPOSITE:BufferUtil.newFloatBuffer  
														NAME:BufferUtil.newFloatBuffer
														IGNORED:
														IGNORED:
												KEYWORD:(
												SEQUENCE: textureCoords4  
														EXPRESSION: textureCoords4  
																COMPOSITE: textureCoords4  
																		IGNORED:
																		VARIABLE:textureCoords4  
																				NAME:textureCoords4
																				IGNORED:
																				IGNORED:
												KEYWORD:)
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ STATIC_DRAW
						OPENGL_CONSTANT:GL2 .GL_ STATIC_DRAW
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:STATIC_DRAW
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> doorVertexTextureCoordBuffer  [ 1 ]  = 2
NAME:doorVertexTextureCoordBuffer  [ 1 ]
		NAME:doorVertexTextureCoordBuffer
		IGNORED:
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:2
		VALUE:2


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> doorVertexTextureCoordBuffer  [ 2 ]  = 4
NAME:doorVertexTextureCoordBuffer  [ 2 ]
		NAME:doorVertexTextureCoordBuffer
		IGNORED:
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION:4
		VALUE:4


[METHOD_DECLARATION] ------->  public void initTexture   ( GL2 gl   ) throws IOException  
IGNORED:
SEQUENCE:public
		KEYWORD:public
VARIABLE:void initTexture  
		TYPE:void
		NAME:initTexture  
				NAME:initTexture
				IGNORED:
				IGNORED:
KEYWORD:(
METHOD_VARIABLES:GL2 gl  
		VARIABLE:GL2 gl  
				TYPE:GL2
				NAME:gl  
						NAME:gl
						IGNORED:
						IGNORED:
KEYWORD:)
COMPOSITE:throws IOException  
		KEYWORD:throws
		SEQUENCE:IOException  
				VARIABLE:IOException  
						NAME:IOException
						IGNORED:
						IGNORED:


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl GenTextures ( 4,  textures  , 0 )
OPENGL_CALL: gl . gl GenTextures ( 4,  textures  , 0 )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:GenTextures
		KEYWORD:(
		SEQUENCE:4,  textures  , 0
				EXPRESSION:4
						VALUE:4
				KEYWORD:, 
				EXPRESSION: textures  
						COMPOSITE: textures  
								IGNORED:
								VARIABLE:textures  
										NAME:textures
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> TextureData tex1   =   TextureIO.newTextureData   ( new  File   (  "images  / muro.gif"   ),  false  ,  null   )
VARIABLE:TextureData tex1  
		TYPE:TextureData
		NAME:tex1  
				NAME:tex1
				IGNORED:
				IGNORED:
KEYWORD:=
CALL:  TextureIO.newTextureData   ( new  File   (  "images  / muro.gif"   ),  false  ,  null   )
		IGNORED:
		IGNORED:
		SEQUENCE:TextureIO.newTextureData   ( new  File   (  "images  / muro.gif"   ),  false  ,  null   )
				COMPOSITE:TextureIO.newTextureData   ( new  File   (  "images  / muro.gif"   ),  false  ,  null   )
						COMPOSITE:TextureIO.newTextureData  
								NAME:TextureIO.newTextureData
								IGNORED:
								IGNORED:
						KEYWORD:(
						SEQUENCE:new  File   (  "images  / muro.gif"   ),  false  ,  null  
								EXPRESSION:new  File   (  "images  / muro.gif"   )
										NEW_STATEMENT:new  File   (  "images  / muro.gif"   )
												KEYWORD:new 
												VARIABLE:File  
														NAME:File
														IGNORED:
														IGNORED:
												COMPOSITE:(  "images  / muro.gif"   )
														KEYWORD:(
														SEQUENCE: "images  / muro.gif"  
																EXPRESSION: "images  / muro.gif"  
																		COMPOSITE: "images  
																				IGNORED:
																				VARIABLE:"images  
																						NAME:"images
																						IGNORED:
																						IGNORED:
																		OPERATOR:/
																		COMPOSITE: muro.gif"  
																				IGNORED:
																				VARIABLE:muro.gif"  
																						NAME:muro.gif"
																						IGNORED:
																						IGNORED:
														KEYWORD:)
								KEYWORD:, 
								EXPRESSION: false  
										COMPOSITE: false  
												IGNORED:
												VARIABLE:false  
														NAME:false
														IGNORED:
														IGNORED:
								KEYWORD:, 
								EXPRESSION: null  
										COMPOSITE: null  
												IGNORED:
												VARIABLE:null  
														NAME:null
														IGNORED:
														IGNORED:
						KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BindTexture ( GL2 .GL_ TEXTURE_2D,  textures  [ 0 ] )
OPENGL_CALL: gl . gl BindTexture ( GL2 .GL_ TEXTURE_2D,  textures  [ 0 ] )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BindTexture
		KEYWORD:(
		SEQUENCE:GL2 .GL_ TEXTURE_2D,  textures  [ 0 ]
				EXPRESSION:GL2 .GL_ TEXTURE_2D
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_2D
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION: textures  [ 0 ]
						COMPOSITE: textures  [ 0 ]
								IGNORED:
								VARIABLE:textures  [ 0 ]
										NAME:textures
										IGNORED:
										COMPOSITE:[ 0 ]
												KEYWORD:[
												EXPRESSION:0
														VALUE:0
												KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl TexImage2D ( GL2 .GL_ TEXTURE_2D, 0, GL2 .GL_ RGB,   tex1.getWidth   (  ),   tex1.getHeight   (  ), 0, GL2 .GL_ RGB, GL2 .GL_ UNSIGNED_BYTE,   tex1.getBuffer   (  ) )
OPENGL_CALL: gl . gl TexImage2D ( GL2 .GL_ TEXTURE_2D, 0, GL2 .GL_ RGB,   tex1.getWidth   (  ),   tex1.getHeight   (  ), 0, GL2 .GL_ RGB, GL2 .GL_ UNSIGNED_BYTE,   tex1.getBuffer   (  ) )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:TexImage2D
		KEYWORD:(
		SEQUENCE:GL2 .GL_ TEXTURE_2D, 0, GL2 .GL_ RGB,   tex1.getWidth   (  ),   tex1.getHeight   (  ), 0, GL2 .GL_ RGB, GL2 .GL_ UNSIGNED_BYTE,   tex1.getBuffer   (  )
				EXPRESSION:GL2 .GL_ TEXTURE_2D
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_2D
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ RGB
						OPENGL_CONSTANT:GL2 .GL_ RGB
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:  tex1.getWidth   (  )
						CALL:  tex1.getWidth   (  )
								IGNORED:
								IGNORED:
								SEQUENCE:tex1.getWidth   (  )
										COMPOSITE:tex1.getWidth   (  )
												COMPOSITE:tex1.getWidth  
														NAME:tex1.getWidth
														IGNORED:
														IGNORED:
												KEYWORD:(
												SEQUENCE:
												KEYWORD:)
				KEYWORD:, 
				EXPRESSION:  tex1.getHeight   (  )
						CALL:  tex1.getHeight   (  )
								IGNORED:
								IGNORED:
								SEQUENCE:tex1.getHeight   (  )
										COMPOSITE:tex1.getHeight   (  )
												COMPOSITE:tex1.getHeight  
														NAME:tex1.getHeight
														IGNORED:
														IGNORED:
												KEYWORD:(
												SEQUENCE:
												KEYWORD:)
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ RGB
						OPENGL_CONSTANT:GL2 .GL_ RGB
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ UNSIGNED_BYTE
						OPENGL_CONSTANT:GL2 .GL_ UNSIGNED_BYTE
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:UNSIGNED_BYTE
				KEYWORD:, 
				EXPRESSION:  tex1.getBuffer   (  )
						CALL:  tex1.getBuffer   (  )
								IGNORED:
								IGNORED:
								SEQUENCE:tex1.getBuffer   (  )
										COMPOSITE:tex1.getBuffer   (  )
												COMPOSITE:tex1.getBuffer  
														NAME:tex1.getBuffer
														IGNORED:
														IGNORED:
												KEYWORD:(
												SEQUENCE:
												KEYWORD:)
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl TexParameteri ( GL2 .GL_ TEXTURE_2D, GL2 .GL_ TEXTURE_MAG_FILTER, GL2 .GL_ LINEAR )
OPENGL_CALL: gl . gl TexParameteri ( GL2 .GL_ TEXTURE_2D, GL2 .GL_ TEXTURE_MAG_FILTER, GL2 .GL_ LINEAR )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:TexParameteri
		KEYWORD:(
		SEQUENCE:GL2 .GL_ TEXTURE_2D, GL2 .GL_ TEXTURE_MAG_FILTER, GL2 .GL_ LINEAR
				EXPRESSION:GL2 .GL_ TEXTURE_2D
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_2D
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ TEXTURE_MAG_FILTER
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_MAG_FILTER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_MAG_FILTER
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ LINEAR
						OPENGL_CONSTANT:GL2 .GL_ LINEAR
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl TexParameteri ( GL2 .GL_ TEXTURE_2D, GL2 .GL_ TEXTURE_MIN_FILTER, GL2 .GL_ LINEAR_MIPMAP_LINEAR )
OPENGL_CALL: gl . gl TexParameteri ( GL2 .GL_ TEXTURE_2D, GL2 .GL_ TEXTURE_MIN_FILTER, GL2 .GL_ LINEAR_MIPMAP_LINEAR )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:TexParameteri
		KEYWORD:(
		SEQUENCE:GL2 .GL_ TEXTURE_2D, GL2 .GL_ TEXTURE_MIN_FILTER, GL2 .GL_ LINEAR_MIPMAP_LINEAR
				EXPRESSION:GL2 .GL_ TEXTURE_2D
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_2D
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ TEXTURE_MIN_FILTER
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_MIN_FILTER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_MIN_FILTER
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ LINEAR_MIPMAP_LINEAR
						OPENGL_CONSTANT:GL2 .GL_ LINEAR_MIPMAP_LINEAR
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:LINEAR_MIPMAP_LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl TexParameteri ( GL2 .GL_ TEXTURE_2D, GL2 .GL_ TEXTURE_WRAP_S, GL2 .GL_ REPEAT )
OPENGL_CALL: gl . gl TexParameteri ( GL2 .GL_ TEXTURE_2D, GL2 .GL_ TEXTURE_WRAP_S, GL2 .GL_ REPEAT )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:TexParameteri
		KEYWORD:(
		SEQUENCE:GL2 .GL_ TEXTURE_2D, GL2 .GL_ TEXTURE_WRAP_S, GL2 .GL_ REPEAT
				EXPRESSION:GL2 .GL_ TEXTURE_2D
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_2D
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ TEXTURE_WRAP_S
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_WRAP_S
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_WRAP_S
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ REPEAT
						OPENGL_CONSTANT:GL2 .GL_ REPEAT
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:REPEAT
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl TexParameteri ( GL2 .GL_ TEXTURE_2D, GL2 .GL_ TEXTURE_WRAP_T, GL2 .GL_ REPEAT )
OPENGL_CALL: gl . gl TexParameteri ( GL2 .GL_ TEXTURE_2D, GL2 .GL_ TEXTURE_WRAP_T, GL2 .GL_ REPEAT )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:TexParameteri
		KEYWORD:(
		SEQUENCE:GL2 .GL_ TEXTURE_2D, GL2 .GL_ TEXTURE_WRAP_T, GL2 .GL_ REPEAT
				EXPRESSION:GL2 .GL_ TEXTURE_2D
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_2D
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ TEXTURE_WRAP_T
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_WRAP_T
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_WRAP_T
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ REPEAT
						OPENGL_CONSTANT:GL2 .GL_ REPEAT
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:REPEAT
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl GenerateMipmap ( GL2 .GL_ TEXTURE_2D )
OPENGL_CALL: gl . gl GenerateMipmap ( GL2 .GL_ TEXTURE_2D )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:GenerateMipmap
		KEYWORD:(
		SEQUENCE:GL2 .GL_ TEXTURE_2D
				EXPRESSION:GL2 .GL_ TEXTURE_2D
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_2D
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_2D
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> TextureData tex2   =   TextureIO.newTextureData   ( new  File   (  "images  / roof.gif"   ),  false  ,  null   )
VARIABLE:TextureData tex2  
		TYPE:TextureData
		NAME:tex2  
				NAME:tex2
				IGNORED:
				IGNORED:
KEYWORD:=
CALL:  TextureIO.newTextureData   ( new  File   (  "images  / roof.gif"   ),  false  ,  null   )
		IGNORED:
		IGNORED:
		SEQUENCE:TextureIO.newTextureData   ( new  File   (  "images  / roof.gif"   ),  false  ,  null   )
				COMPOSITE:TextureIO.newTextureData   ( new  File   (  "images  / roof.gif"   ),  false  ,  null   )
						COMPOSITE:TextureIO.newTextureData  
								NAME:TextureIO.newTextureData
								IGNORED:
								IGNORED:
						KEYWORD:(
						SEQUENCE:new  File   (  "images  / roof.gif"   ),  false  ,  null  
								EXPRESSION:new  File   (  "images  / roof.gif"   )
										NEW_STATEMENT:new  File   (  "images  / roof.gif"   )
												KEYWORD:new 
												VARIABLE:File  
														NAME:File
														IGNORED:
														IGNORED:
												COMPOSITE:(  "images  / roof.gif"   )
														KEYWORD:(
														SEQUENCE: "images  / roof.gif"  
																EXPRESSION: "images  / roof.gif"  
																		COMPOSITE: "images  
																				IGNORED:
																				VARIABLE:"images  
																						NAME:"images
																						IGNORED:
																						IGNORED:
																		OPERATOR:/
																		COMPOSITE: roof.gif"  
																				IGNORED:
																				VARIABLE:roof.gif"  
																						NAME:roof.gif"
																						IGNORED:
																						IGNORED:
														KEYWORD:)
								KEYWORD:, 
								EXPRESSION: false  
										COMPOSITE: false  
												IGNORED:
												VARIABLE:false  
														NAME:false
														IGNORED:
														IGNORED:
								KEYWORD:, 
								EXPRESSION: null  
										COMPOSITE: null  
												IGNORED:
												VARIABLE:null  
														NAME:null
														IGNORED:
														IGNORED:
						KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BindTexture ( GL2 .GL_ TEXTURE_2D,  textures  [ 1 ] )
OPENGL_CALL: gl . gl BindTexture ( GL2 .GL_ TEXTURE_2D,  textures  [ 1 ] )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BindTexture
		KEYWORD:(
		SEQUENCE:GL2 .GL_ TEXTURE_2D,  textures  [ 1 ]
				EXPRESSION:GL2 .GL_ TEXTURE_2D
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_2D
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION: textures  [ 1 ]
						COMPOSITE: textures  [ 1 ]
								IGNORED:
								VARIABLE:textures  [ 1 ]
										NAME:textures
										IGNORED:
										COMPOSITE:[ 1 ]
												KEYWORD:[
												EXPRESSION:1
														VALUE:1
												KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl TexImage2D ( GL2 .GL_ TEXTURE_2D, 0, GL2 .GL_ RGB,   tex2.getWidth   (  ),   tex2.getHeight   (  ), 0, GL2 .GL_ RGB, GL2 .GL_ UNSIGNED_BYTE,   tex2.getBuffer   (  ) )
OPENGL_CALL: gl . gl TexImage2D ( GL2 .GL_ TEXTURE_2D, 0, GL2 .GL_ RGB,   tex2.getWidth   (  ),   tex2.getHeight   (  ), 0, GL2 .GL_ RGB, GL2 .GL_ UNSIGNED_BYTE,   tex2.getBuffer   (  ) )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:TexImage2D
		KEYWORD:(
		SEQUENCE:GL2 .GL_ TEXTURE_2D, 0, GL2 .GL_ RGB,   tex2.getWidth   (  ),   tex2.getHeight   (  ), 0, GL2 .GL_ RGB, GL2 .GL_ UNSIGNED_BYTE,   tex2.getBuffer   (  )
				EXPRESSION:GL2 .GL_ TEXTURE_2D
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_2D
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ RGB
						OPENGL_CONSTANT:GL2 .GL_ RGB
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:  tex2.getWidth   (  )
						CALL:  tex2.getWidth   (  )
								IGNORED:
								IGNORED:
								SEQUENCE:tex2.getWidth   (  )
										COMPOSITE:tex2.getWidth   (  )
												COMPOSITE:tex2.getWidth  
														NAME:tex2.getWidth
														IGNORED:
														IGNORED:
												KEYWORD:(
												SEQUENCE:
												KEYWORD:)
				KEYWORD:, 
				EXPRESSION:  tex2.getHeight   (  )
						CALL:  tex2.getHeight   (  )
								IGNORED:
								IGNORED:
								SEQUENCE:tex2.getHeight   (  )
										COMPOSITE:tex2.getHeight   (  )
												COMPOSITE:tex2.getHeight  
														NAME:tex2.getHeight
														IGNORED:
														IGNORED:
												KEYWORD:(
												SEQUENCE:
												KEYWORD:)
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ RGB
						OPENGL_CONSTANT:GL2 .GL_ RGB
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ UNSIGNED_BYTE
						OPENGL_CONSTANT:GL2 .GL_ UNSIGNED_BYTE
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:UNSIGNED_BYTE
				KEYWORD:, 
				EXPRESSION:  tex2.getBuffer   (  )
						CALL:  tex2.getBuffer   (  )
								IGNORED:
								IGNORED:
								SEQUENCE:tex2.getBuffer   (  )
										COMPOSITE:tex2.getBuffer   (  )
												COMPOSITE:tex2.getBuffer  
														NAME:tex2.getBuffer
														IGNORED:
														IGNORED:
												KEYWORD:(
												SEQUENCE:
												KEYWORD:)
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl TexParameteri ( GL2 .GL_ TEXTURE_2D, GL2 .GL_ TEXTURE_MAG_FILTER, GL2 .GL_ LINEAR )
OPENGL_CALL: gl . gl TexParameteri ( GL2 .GL_ TEXTURE_2D, GL2 .GL_ TEXTURE_MAG_FILTER, GL2 .GL_ LINEAR )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:TexParameteri
		KEYWORD:(
		SEQUENCE:GL2 .GL_ TEXTURE_2D, GL2 .GL_ TEXTURE_MAG_FILTER, GL2 .GL_ LINEAR
				EXPRESSION:GL2 .GL_ TEXTURE_2D
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_2D
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ TEXTURE_MAG_FILTER
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_MAG_FILTER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_MAG_FILTER
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ LINEAR
						OPENGL_CONSTANT:GL2 .GL_ LINEAR
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl TexParameteri ( GL2 .GL_ TEXTURE_2D, GL2 .GL_ TEXTURE_MIN_FILTER, GL2 .GL_ LINEAR_MIPMAP_LINEAR )
OPENGL_CALL: gl . gl TexParameteri ( GL2 .GL_ TEXTURE_2D, GL2 .GL_ TEXTURE_MIN_FILTER, GL2 .GL_ LINEAR_MIPMAP_LINEAR )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:TexParameteri
		KEYWORD:(
		SEQUENCE:GL2 .GL_ TEXTURE_2D, GL2 .GL_ TEXTURE_MIN_FILTER, GL2 .GL_ LINEAR_MIPMAP_LINEAR
				EXPRESSION:GL2 .GL_ TEXTURE_2D
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_2D
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ TEXTURE_MIN_FILTER
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_MIN_FILTER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_MIN_FILTER
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ LINEAR_MIPMAP_LINEAR
						OPENGL_CONSTANT:GL2 .GL_ LINEAR_MIPMAP_LINEAR
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:LINEAR_MIPMAP_LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl TexParameteri ( GL2 .GL_ TEXTURE_2D, GL2 .GL_ TEXTURE_WRAP_S, GL2 .GL_ REPEAT )
OPENGL_CALL: gl . gl TexParameteri ( GL2 .GL_ TEXTURE_2D, GL2 .GL_ TEXTURE_WRAP_S, GL2 .GL_ REPEAT )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:TexParameteri
		KEYWORD:(
		SEQUENCE:GL2 .GL_ TEXTURE_2D, GL2 .GL_ TEXTURE_WRAP_S, GL2 .GL_ REPEAT
				EXPRESSION:GL2 .GL_ TEXTURE_2D
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_2D
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ TEXTURE_WRAP_S
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_WRAP_S
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_WRAP_S
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ REPEAT
						OPENGL_CONSTANT:GL2 .GL_ REPEAT
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:REPEAT
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl TexParameteri ( GL2 .GL_ TEXTURE_2D, GL2 .GL_ TEXTURE_WRAP_T, GL2 .GL_ REPEAT )
OPENGL_CALL: gl . gl TexParameteri ( GL2 .GL_ TEXTURE_2D, GL2 .GL_ TEXTURE_WRAP_T, GL2 .GL_ REPEAT )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:TexParameteri
		KEYWORD:(
		SEQUENCE:GL2 .GL_ TEXTURE_2D, GL2 .GL_ TEXTURE_WRAP_T, GL2 .GL_ REPEAT
				EXPRESSION:GL2 .GL_ TEXTURE_2D
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_2D
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ TEXTURE_WRAP_T
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_WRAP_T
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_WRAP_T
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ REPEAT
						OPENGL_CONSTANT:GL2 .GL_ REPEAT
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:REPEAT
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl GenerateMipmap ( GL2 .GL_ TEXTURE_2D )
OPENGL_CALL: gl . gl GenerateMipmap ( GL2 .GL_ TEXTURE_2D )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:GenerateMipmap
		KEYWORD:(
		SEQUENCE:GL2 .GL_ TEXTURE_2D
				EXPRESSION:GL2 .GL_ TEXTURE_2D
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_2D
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_2D
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> TextureData tex3   =   TextureIO.newTextureData   ( new  File   (  "images  / grass.gif"   ),  false  ,  null   )
VARIABLE:TextureData tex3  
		TYPE:TextureData
		NAME:tex3  
				NAME:tex3
				IGNORED:
				IGNORED:
KEYWORD:=
CALL:  TextureIO.newTextureData   ( new  File   (  "images  / grass.gif"   ),  false  ,  null   )
		IGNORED:
		IGNORED:
		SEQUENCE:TextureIO.newTextureData   ( new  File   (  "images  / grass.gif"   ),  false  ,  null   )
				COMPOSITE:TextureIO.newTextureData   ( new  File   (  "images  / grass.gif"   ),  false  ,  null   )
						COMPOSITE:TextureIO.newTextureData  
								NAME:TextureIO.newTextureData
								IGNORED:
								IGNORED:
						KEYWORD:(
						SEQUENCE:new  File   (  "images  / grass.gif"   ),  false  ,  null  
								EXPRESSION:new  File   (  "images  / grass.gif"   )
										NEW_STATEMENT:new  File   (  "images  / grass.gif"   )
												KEYWORD:new 
												VARIABLE:File  
														NAME:File
														IGNORED:
														IGNORED:
												COMPOSITE:(  "images  / grass.gif"   )
														KEYWORD:(
														SEQUENCE: "images  / grass.gif"  
																EXPRESSION: "images  / grass.gif"  
																		COMPOSITE: "images  
																				IGNORED:
																				VARIABLE:"images  
																						NAME:"images
																						IGNORED:
																						IGNORED:
																		OPERATOR:/
																		COMPOSITE: grass.gif"  
																				IGNORED:
																				VARIABLE:grass.gif"  
																						NAME:grass.gif"
																						IGNORED:
																						IGNORED:
														KEYWORD:)
								KEYWORD:, 
								EXPRESSION: false  
										COMPOSITE: false  
												IGNORED:
												VARIABLE:false  
														NAME:false
														IGNORED:
														IGNORED:
								KEYWORD:, 
								EXPRESSION: null  
										COMPOSITE: null  
												IGNORED:
												VARIABLE:null  
														NAME:null
														IGNORED:
														IGNORED:
						KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BindTexture ( GL2 .GL_ TEXTURE_2D,  textures  [ 2 ] )
OPENGL_CALL: gl . gl BindTexture ( GL2 .GL_ TEXTURE_2D,  textures  [ 2 ] )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BindTexture
		KEYWORD:(
		SEQUENCE:GL2 .GL_ TEXTURE_2D,  textures  [ 2 ]
				EXPRESSION:GL2 .GL_ TEXTURE_2D
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_2D
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION: textures  [ 2 ]
						COMPOSITE: textures  [ 2 ]
								IGNORED:
								VARIABLE:textures  [ 2 ]
										NAME:textures
										IGNORED:
										COMPOSITE:[ 2 ]
												KEYWORD:[
												EXPRESSION:2
														VALUE:2
												KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl TexImage2D ( GL2 .GL_ TEXTURE_2D, 0, GL2 .GL_ RGB,   tex3.getWidth   (  ),   tex3.getHeight   (  ), 0, GL2 .GL_ RGB, GL2 .GL_ UNSIGNED_BYTE,   tex3.getBuffer   (  ) )
OPENGL_CALL: gl . gl TexImage2D ( GL2 .GL_ TEXTURE_2D, 0, GL2 .GL_ RGB,   tex3.getWidth   (  ),   tex3.getHeight   (  ), 0, GL2 .GL_ RGB, GL2 .GL_ UNSIGNED_BYTE,   tex3.getBuffer   (  ) )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:TexImage2D
		KEYWORD:(
		SEQUENCE:GL2 .GL_ TEXTURE_2D, 0, GL2 .GL_ RGB,   tex3.getWidth   (  ),   tex3.getHeight   (  ), 0, GL2 .GL_ RGB, GL2 .GL_ UNSIGNED_BYTE,   tex3.getBuffer   (  )
				EXPRESSION:GL2 .GL_ TEXTURE_2D
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_2D
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ RGB
						OPENGL_CONSTANT:GL2 .GL_ RGB
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:  tex3.getWidth   (  )
						CALL:  tex3.getWidth   (  )
								IGNORED:
								IGNORED:
								SEQUENCE:tex3.getWidth   (  )
										COMPOSITE:tex3.getWidth   (  )
												COMPOSITE:tex3.getWidth  
														NAME:tex3.getWidth
														IGNORED:
														IGNORED:
												KEYWORD:(
												SEQUENCE:
												KEYWORD:)
				KEYWORD:, 
				EXPRESSION:  tex3.getHeight   (  )
						CALL:  tex3.getHeight   (  )
								IGNORED:
								IGNORED:
								SEQUENCE:tex3.getHeight   (  )
										COMPOSITE:tex3.getHeight   (  )
												COMPOSITE:tex3.getHeight  
														NAME:tex3.getHeight
														IGNORED:
														IGNORED:
												KEYWORD:(
												SEQUENCE:
												KEYWORD:)
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ RGB
						OPENGL_CONSTANT:GL2 .GL_ RGB
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ UNSIGNED_BYTE
						OPENGL_CONSTANT:GL2 .GL_ UNSIGNED_BYTE
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:UNSIGNED_BYTE
				KEYWORD:, 
				EXPRESSION:  tex3.getBuffer   (  )
						CALL:  tex3.getBuffer   (  )
								IGNORED:
								IGNORED:
								SEQUENCE:tex3.getBuffer   (  )
										COMPOSITE:tex3.getBuffer   (  )
												COMPOSITE:tex3.getBuffer  
														NAME:tex3.getBuffer
														IGNORED:
														IGNORED:
												KEYWORD:(
												SEQUENCE:
												KEYWORD:)
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl TexParameteri ( GL2 .GL_ TEXTURE_2D, GL2 .GL_ TEXTURE_MAG_FILTER, GL2 .GL_ LINEAR )
OPENGL_CALL: gl . gl TexParameteri ( GL2 .GL_ TEXTURE_2D, GL2 .GL_ TEXTURE_MAG_FILTER, GL2 .GL_ LINEAR )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:TexParameteri
		KEYWORD:(
		SEQUENCE:GL2 .GL_ TEXTURE_2D, GL2 .GL_ TEXTURE_MAG_FILTER, GL2 .GL_ LINEAR
				EXPRESSION:GL2 .GL_ TEXTURE_2D
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_2D
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ TEXTURE_MAG_FILTER
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_MAG_FILTER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_MAG_FILTER
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ LINEAR
						OPENGL_CONSTANT:GL2 .GL_ LINEAR
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl TexParameteri ( GL2 .GL_ TEXTURE_2D, GL2 .GL_ TEXTURE_MIN_FILTER, GL2 .GL_ LINEAR_MIPMAP_LINEAR )
OPENGL_CALL: gl . gl TexParameteri ( GL2 .GL_ TEXTURE_2D, GL2 .GL_ TEXTURE_MIN_FILTER, GL2 .GL_ LINEAR_MIPMAP_LINEAR )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:TexParameteri
		KEYWORD:(
		SEQUENCE:GL2 .GL_ TEXTURE_2D, GL2 .GL_ TEXTURE_MIN_FILTER, GL2 .GL_ LINEAR_MIPMAP_LINEAR
				EXPRESSION:GL2 .GL_ TEXTURE_2D
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_2D
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ TEXTURE_MIN_FILTER
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_MIN_FILTER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_MIN_FILTER
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ LINEAR_MIPMAP_LINEAR
						OPENGL_CONSTANT:GL2 .GL_ LINEAR_MIPMAP_LINEAR
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:LINEAR_MIPMAP_LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl TexParameteri ( GL2 .GL_ TEXTURE_2D, GL2 .GL_ TEXTURE_WRAP_S, GL2 .GL_ REPEAT )
OPENGL_CALL: gl . gl TexParameteri ( GL2 .GL_ TEXTURE_2D, GL2 .GL_ TEXTURE_WRAP_S, GL2 .GL_ REPEAT )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:TexParameteri
		KEYWORD:(
		SEQUENCE:GL2 .GL_ TEXTURE_2D, GL2 .GL_ TEXTURE_WRAP_S, GL2 .GL_ REPEAT
				EXPRESSION:GL2 .GL_ TEXTURE_2D
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_2D
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ TEXTURE_WRAP_S
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_WRAP_S
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_WRAP_S
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ REPEAT
						OPENGL_CONSTANT:GL2 .GL_ REPEAT
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:REPEAT
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl TexParameteri ( GL2 .GL_ TEXTURE_2D, GL2 .GL_ TEXTURE_WRAP_T, GL2 .GL_ REPEAT )
OPENGL_CALL: gl . gl TexParameteri ( GL2 .GL_ TEXTURE_2D, GL2 .GL_ TEXTURE_WRAP_T, GL2 .GL_ REPEAT )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:TexParameteri
		KEYWORD:(
		SEQUENCE:GL2 .GL_ TEXTURE_2D, GL2 .GL_ TEXTURE_WRAP_T, GL2 .GL_ REPEAT
				EXPRESSION:GL2 .GL_ TEXTURE_2D
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_2D
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ TEXTURE_WRAP_T
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_WRAP_T
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_WRAP_T
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ REPEAT
						OPENGL_CONSTANT:GL2 .GL_ REPEAT
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:REPEAT
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl GenerateMipmap ( GL2 .GL_ TEXTURE_2D )
OPENGL_CALL: gl . gl GenerateMipmap ( GL2 .GL_ TEXTURE_2D )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:GenerateMipmap
		KEYWORD:(
		SEQUENCE:GL2 .GL_ TEXTURE_2D
				EXPRESSION:GL2 .GL_ TEXTURE_2D
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_2D
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_2D
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> TextureData tex4   =   TextureIO.newTextureData   ( new  File   (  "images  / door.gif"   ),  false  ,  null   )
VARIABLE:TextureData tex4  
		TYPE:TextureData
		NAME:tex4  
				NAME:tex4
				IGNORED:
				IGNORED:
KEYWORD:=
CALL:  TextureIO.newTextureData   ( new  File   (  "images  / door.gif"   ),  false  ,  null   )
		IGNORED:
		IGNORED:
		SEQUENCE:TextureIO.newTextureData   ( new  File   (  "images  / door.gif"   ),  false  ,  null   )
				COMPOSITE:TextureIO.newTextureData   ( new  File   (  "images  / door.gif"   ),  false  ,  null   )
						COMPOSITE:TextureIO.newTextureData  
								NAME:TextureIO.newTextureData
								IGNORED:
								IGNORED:
						KEYWORD:(
						SEQUENCE:new  File   (  "images  / door.gif"   ),  false  ,  null  
								EXPRESSION:new  File   (  "images  / door.gif"   )
										NEW_STATEMENT:new  File   (  "images  / door.gif"   )
												KEYWORD:new 
												VARIABLE:File  
														NAME:File
														IGNORED:
														IGNORED:
												COMPOSITE:(  "images  / door.gif"   )
														KEYWORD:(
														SEQUENCE: "images  / door.gif"  
																EXPRESSION: "images  / door.gif"  
																		COMPOSITE: "images  
																				IGNORED:
																				VARIABLE:"images  
																						NAME:"images
																						IGNORED:
																						IGNORED:
																		OPERATOR:/
																		COMPOSITE: door.gif"  
																				IGNORED:
																				VARIABLE:door.gif"  
																						NAME:door.gif"
																						IGNORED:
																						IGNORED:
														KEYWORD:)
								KEYWORD:, 
								EXPRESSION: false  
										COMPOSITE: false  
												IGNORED:
												VARIABLE:false  
														NAME:false
														IGNORED:
														IGNORED:
								KEYWORD:, 
								EXPRESSION: null  
										COMPOSITE: null  
												IGNORED:
												VARIABLE:null  
														NAME:null
														IGNORED:
														IGNORED:
						KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BindTexture ( GL2 .GL_ TEXTURE_2D,  textures  [ 3 ] )
OPENGL_CALL: gl . gl BindTexture ( GL2 .GL_ TEXTURE_2D,  textures  [ 3 ] )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BindTexture
		KEYWORD:(
		SEQUENCE:GL2 .GL_ TEXTURE_2D,  textures  [ 3 ]
				EXPRESSION:GL2 .GL_ TEXTURE_2D
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_2D
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION: textures  [ 3 ]
						COMPOSITE: textures  [ 3 ]
								IGNORED:
								VARIABLE:textures  [ 3 ]
										NAME:textures
										IGNORED:
										COMPOSITE:[ 3 ]
												KEYWORD:[
												EXPRESSION:3
														VALUE:3
												KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl TexImage2D ( GL2 .GL_ TEXTURE_2D, 0, GL2 .GL_ RGB,   tex4.getWidth   (  ),   tex4.getHeight   (  ), 0, GL2 .GL_ RGB, GL2 .GL_ UNSIGNED_BYTE,   tex4.getBuffer   (  ) )
OPENGL_CALL: gl . gl TexImage2D ( GL2 .GL_ TEXTURE_2D, 0, GL2 .GL_ RGB,   tex4.getWidth   (  ),   tex4.getHeight   (  ), 0, GL2 .GL_ RGB, GL2 .GL_ UNSIGNED_BYTE,   tex4.getBuffer   (  ) )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:TexImage2D
		KEYWORD:(
		SEQUENCE:GL2 .GL_ TEXTURE_2D, 0, GL2 .GL_ RGB,   tex4.getWidth   (  ),   tex4.getHeight   (  ), 0, GL2 .GL_ RGB, GL2 .GL_ UNSIGNED_BYTE,   tex4.getBuffer   (  )
				EXPRESSION:GL2 .GL_ TEXTURE_2D
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_2D
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ RGB
						OPENGL_CONSTANT:GL2 .GL_ RGB
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:  tex4.getWidth   (  )
						CALL:  tex4.getWidth   (  )
								IGNORED:
								IGNORED:
								SEQUENCE:tex4.getWidth   (  )
										COMPOSITE:tex4.getWidth   (  )
												COMPOSITE:tex4.getWidth  
														NAME:tex4.getWidth
														IGNORED:
														IGNORED:
												KEYWORD:(
												SEQUENCE:
												KEYWORD:)
				KEYWORD:, 
				EXPRESSION:  tex4.getHeight   (  )
						CALL:  tex4.getHeight   (  )
								IGNORED:
								IGNORED:
								SEQUENCE:tex4.getHeight   (  )
										COMPOSITE:tex4.getHeight   (  )
												COMPOSITE:tex4.getHeight  
														NAME:tex4.getHeight
														IGNORED:
														IGNORED:
												KEYWORD:(
												SEQUENCE:
												KEYWORD:)
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ RGB
						OPENGL_CONSTANT:GL2 .GL_ RGB
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:RGB
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ UNSIGNED_BYTE
						OPENGL_CONSTANT:GL2 .GL_ UNSIGNED_BYTE
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:UNSIGNED_BYTE
				KEYWORD:, 
				EXPRESSION:  tex4.getBuffer   (  )
						CALL:  tex4.getBuffer   (  )
								IGNORED:
								IGNORED:
								SEQUENCE:tex4.getBuffer   (  )
										COMPOSITE:tex4.getBuffer   (  )
												COMPOSITE:tex4.getBuffer  
														NAME:tex4.getBuffer
														IGNORED:
														IGNORED:
												KEYWORD:(
												SEQUENCE:
												KEYWORD:)
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl TexParameteri ( GL2 .GL_ TEXTURE_2D, GL2 .GL_ TEXTURE_MAG_FILTER, GL2 .GL_ LINEAR )
OPENGL_CALL: gl . gl TexParameteri ( GL2 .GL_ TEXTURE_2D, GL2 .GL_ TEXTURE_MAG_FILTER, GL2 .GL_ LINEAR )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:TexParameteri
		KEYWORD:(
		SEQUENCE:GL2 .GL_ TEXTURE_2D, GL2 .GL_ TEXTURE_MAG_FILTER, GL2 .GL_ LINEAR
				EXPRESSION:GL2 .GL_ TEXTURE_2D
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_2D
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ TEXTURE_MAG_FILTER
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_MAG_FILTER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_MAG_FILTER
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ LINEAR
						OPENGL_CONSTANT:GL2 .GL_ LINEAR
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl TexParameteri ( GL2 .GL_ TEXTURE_2D, GL2 .GL_ TEXTURE_MIN_FILTER, GL2 .GL_ LINEAR_MIPMAP_LINEAR )
OPENGL_CALL: gl . gl TexParameteri ( GL2 .GL_ TEXTURE_2D, GL2 .GL_ TEXTURE_MIN_FILTER, GL2 .GL_ LINEAR_MIPMAP_LINEAR )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:TexParameteri
		KEYWORD:(
		SEQUENCE:GL2 .GL_ TEXTURE_2D, GL2 .GL_ TEXTURE_MIN_FILTER, GL2 .GL_ LINEAR_MIPMAP_LINEAR
				EXPRESSION:GL2 .GL_ TEXTURE_2D
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_2D
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ TEXTURE_MIN_FILTER
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_MIN_FILTER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_MIN_FILTER
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ LINEAR_MIPMAP_LINEAR
						OPENGL_CONSTANT:GL2 .GL_ LINEAR_MIPMAP_LINEAR
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:LINEAR_MIPMAP_LINEAR
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl GenerateMipmap ( GL2 .GL_ TEXTURE_2D )
OPENGL_CALL: gl . gl GenerateMipmap ( GL2 .GL_ TEXTURE_2D )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:GenerateMipmap
		KEYWORD:(
		SEQUENCE:GL2 .GL_ TEXTURE_2D
				EXPRESSION:GL2 .GL_ TEXTURE_2D
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_2D
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_2D
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BindTexture ( GL2 .GL_ TEXTURE_2D, 0 )
OPENGL_CALL: gl . gl BindTexture ( GL2 .GL_ TEXTURE_2D, 0 )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BindTexture
		KEYWORD:(
		SEQUENCE:GL2 .GL_ TEXTURE_2D, 0
				EXPRESSION:GL2 .GL_ TEXTURE_2D
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_2D
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[METHOD_DECLARATION] ------->  public void drawScene   ( GL2 gl   )
IGNORED:
SEQUENCE:public
		KEYWORD:public
VARIABLE:void drawScene  
		TYPE:void
		NAME:drawScene  
				NAME:drawScene
				IGNORED:
				IGNORED:
KEYWORD:(
METHOD_VARIABLES:GL2 gl  
		VARIABLE:GL2 gl  
				TYPE:GL2
				NAME:gl  
						NAME:gl
						IGNORED:
						IGNORED:
KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl ClearColor ( 0.0f, 0.71f, 0.91f, 1.0f )
OPENGL_CALL: gl . gl ClearColor ( 0.0f, 0.71f, 0.91f, 1.0f )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:ClearColor
		KEYWORD:(
		SEQUENCE:0.0f, 0.71f, 0.91f, 1.0f
				EXPRESSION:0.0f
						VALUE:0.0f
				KEYWORD:, 
				EXPRESSION:0.71f
						VALUE:0.71f
				KEYWORD:, 
				EXPRESSION:0.91f
						VALUE:0.91f
				KEYWORD:, 
				EXPRESSION:1.0f
						VALUE:1.0f
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl Enable ( GL2 .GL_ DEPTH_TEST )
OPENGL_CALL: gl . gl Enable ( GL2 .GL_ DEPTH_TEST )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:Enable
		KEYWORD:(
		SEQUENCE:GL2 .GL_ DEPTH_TEST
				EXPRESSION:GL2 .GL_ DEPTH_TEST
						OPENGL_CONSTANT:GL2 .GL_ DEPTH_TEST
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:DEPTH_TEST
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl CullFace ( GL2 .GL_ BACK )
OPENGL_CALL: gl . gl CullFace ( GL2 .GL_ BACK )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:CullFace
		KEYWORD:(
		SEQUENCE:GL2 .GL_ BACK
				EXPRESSION:GL2 .GL_ BACK
						OPENGL_CONSTANT:GL2 .GL_ BACK
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:BACK
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl Enable ( GL2 .GL_ CULL_FACE )
OPENGL_CALL: gl . gl Enable ( GL2 .GL_ CULL_FACE )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:Enable
		KEYWORD:(
		SEQUENCE:GL2 .GL_ CULL_FACE
				EXPRESSION:GL2 .GL_ CULL_FACE
						OPENGL_CONSTANT:GL2 .GL_ CULL_FACE
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:CULL_FACE
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->   handleKeys   (  )
CALL:  handleKeys   (  )
		IGNORED:
		IGNORED:
		SEQUENCE:handleKeys   (  )
				COMPOSITE:handleKeys   (  )
						COMPOSITE:handleKeys  
								NAME:handleKeys
								IGNORED:
								IGNORED:
						KEYWORD:(
						SEQUENCE:
						KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl Viewport ( 0, 0, 500, 500 )
OPENGL_CALL: gl . gl Viewport ( 0, 0, 500, 500 )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:Viewport
		KEYWORD:(
		SEQUENCE:0, 0, 500, 500
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:500
						VALUE:500
				KEYWORD:, 
				EXPRESSION:500
						VALUE:500
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl Clear ( GL2 .GL_ COLOR_BUFFER_BIT|GL2 .GL_ DEPTH_BUFFER_BIT )
OPENGL_CALL: gl . gl Clear ( GL2 .GL_ COLOR_BUFFER_BIT|GL2 .GL_ DEPTH_BUFFER_BIT )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:Clear
		KEYWORD:(
		SEQUENCE:GL2 .GL_ COLOR_BUFFER_BIT|GL2 .GL_ DEPTH_BUFFER_BIT
				EXPRESSION:GL2 .GL_ COLOR_BUFFER_BIT|GL2 .GL_ DEPTH_BUFFER_BIT
						OPENGL_CONSTANT:GL2 .GL_ COLOR_BUFFER_BIT
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:COLOR_BUFFER_BIT
						OPERATOR:|
						OPENGL_CONSTANT:GL2 .GL_ DEPTH_BUFFER_BIT
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:DEPTH_BUFFER_BIT
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> float cx   = ( float )  Math.cos   (  rAnglex   )
VARIABLE:float cx  
		TYPE:float
		NAME:cx  
				NAME:cx
				IGNORED:
				IGNORED:
KEYWORD:=
CALL:( float )  Math.cos   (  rAnglex   )
		COMPOSITE:( float )
				KEYWORD:(
				TYPE:float
				KEYWORD:)
		IGNORED:
		SEQUENCE:Math.cos   (  rAnglex   )
				COMPOSITE:Math.cos   (  rAnglex   )
						COMPOSITE:Math.cos  
								NAME:Math.cos
								IGNORED:
								IGNORED:
						KEYWORD:(
						SEQUENCE: rAnglex  
								EXPRESSION: rAnglex  
										COMPOSITE: rAnglex  
												IGNORED:
												VARIABLE:rAnglex  
														NAME:rAnglex
														IGNORED:
														IGNORED:
						KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> float sx   = ( float )  Math.sin   (  rAnglex   )
VARIABLE:float sx  
		TYPE:float
		NAME:sx  
				NAME:sx
				IGNORED:
				IGNORED:
KEYWORD:=
CALL:( float )  Math.sin   (  rAnglex   )
		COMPOSITE:( float )
				KEYWORD:(
				TYPE:float
				KEYWORD:)
		IGNORED:
		SEQUENCE:Math.sin   (  rAnglex   )
				COMPOSITE:Math.sin   (  rAnglex   )
						COMPOSITE:Math.sin  
								NAME:Math.sin
								IGNORED:
								IGNORED:
						KEYWORD:(
						SEQUENCE: rAnglex  
								EXPRESSION: rAnglex  
										COMPOSITE: rAnglex  
												IGNORED:
												VARIABLE:rAnglex  
														NAME:rAnglex
														IGNORED:
														IGNORED:
						KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> float cy   = ( float )  Math.cos   (  rAngley   )
VARIABLE:float cy  
		TYPE:float
		NAME:cy  
				NAME:cy
				IGNORED:
				IGNORED:
KEYWORD:=
CALL:( float )  Math.cos   (  rAngley   )
		COMPOSITE:( float )
				KEYWORD:(
				TYPE:float
				KEYWORD:)
		IGNORED:
		SEQUENCE:Math.cos   (  rAngley   )
				COMPOSITE:Math.cos   (  rAngley   )
						COMPOSITE:Math.cos  
								NAME:Math.cos
								IGNORED:
								IGNORED:
						KEYWORD:(
						SEQUENCE: rAngley  
								EXPRESSION: rAngley  
										COMPOSITE: rAngley  
												IGNORED:
												VARIABLE:rAngley  
														NAME:rAngley
														IGNORED:
														IGNORED:
						KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> float sy   = ( float )  Math.sin   (  rAngley   )
VARIABLE:float sy  
		TYPE:float
		NAME:sy  
				NAME:sy
				IGNORED:
				IGNORED:
KEYWORD:=
CALL:( float )  Math.sin   (  rAngley   )
		COMPOSITE:( float )
				KEYWORD:(
				TYPE:float
				KEYWORD:)
		IGNORED:
		SEQUENCE:Math.sin   (  rAngley   )
				COMPOSITE:Math.sin   (  rAngley   )
						COMPOSITE:Math.sin  
								NAME:Math.sin
								IGNORED:
								IGNORED:
						KEYWORD:(
						SEQUENCE: rAngley  
								EXPRESSION: rAngley  
										COMPOSITE: rAngley  
												IGNORED:
												VARIABLE:rAngley  
														NAME:rAngley
														IGNORED:
														IGNORED:
						KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> float[] pMatrixv   = new  float  [  ]  { 2.4142136573791504f,0,0,0,0,2.4142136573791504f,0,0,0,0,-1.0020020008087158f,-1,0,0,-0.20020020008087158f,0 }
VARIABLE:float[] pMatrixv  
		TYPE:float[]
		NAME:pMatrixv  
				NAME:pMatrixv
				IGNORED:
				IGNORED:
KEYWORD:=
ARRAY_DECLARATION:new  float  [  ]  { 2.4142136573791504f,0,0,0,0,2.4142136573791504f,0,0,0,0,-1.0020020008087158f,-1,0,0,-0.20020020008087158f,0 }
		NEW_STATEMENT:new  float  [  ] 
				KEYWORD:new 
				TYPE:float  [  ]
						TYPE:float
						IGNORED:
						COMPOSITE:[  ]
								KEYWORD:[
								EXPRESSION:
										IGNORED:
								KEYWORD:]
				IGNORED:
		ARRAY_CONTENT:{ 2.4142136573791504f,0,0,0,0,2.4142136573791504f,0,0,0,0,-1.0020020008087158f,-1,0,0,-0.20020020008087158f,0 }
				KEYWORD:{
				SEQUENCE:2.4142136573791504f,0,0,0,0,2.4142136573791504f,0,0,0,0,-1.0020020008087158f,-1,0,0,-0.20020020008087158f,0
						EXPRESSION:2.4142136573791504f
								VALUE:2.4142136573791504f
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:2.4142136573791504f
								VALUE:2.4142136573791504f
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:-1.0020020008087158f
								VALUE:-1.0020020008087158f
						KEYWORD:,
						EXPRESSION:-1
								VALUE:-1
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:-0.20020020008087158f
								VALUE:-0.20020020008087158f
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
				KEYWORD:}


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> pMatrix    =   BufferUtil.newFloatBuffer   (  pMatrixv   )
NAME:pMatrix  
		NAME:pMatrix
		IGNORED:
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:  BufferUtil.newFloatBuffer   (  pMatrixv   )
		CALL:  BufferUtil.newFloatBuffer   (  pMatrixv   )
				IGNORED:
				IGNORED:
				SEQUENCE:BufferUtil.newFloatBuffer   (  pMatrixv   )
						COMPOSITE:BufferUtil.newFloatBuffer   (  pMatrixv   )
								COMPOSITE:BufferUtil.newFloatBuffer  
										NAME:BufferUtil.newFloatBuffer
										IGNORED:
										IGNORED:
								KEYWORD:(
								SEQUENCE: pMatrixv  
										EXPRESSION: pMatrixv  
												COMPOSITE: pMatrixv  
														IGNORED:
														VARIABLE:pMatrixv  
																NAME:pMatrixv
																IGNORED:
																IGNORED:
								KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> float[] mvMatrixv   = new  float  [  ]  {  cy  , sx  * sy  ,-cx* sy  ,0,0, cx  , sx  ,0, sy  ,-cy* sx  , cx  * cy  ,0,0,-cx, zoom  - sx  ,1 }
VARIABLE:float[] mvMatrixv  
		TYPE:float[]
		NAME:mvMatrixv  
				NAME:mvMatrixv
				IGNORED:
				IGNORED:
KEYWORD:=
ARRAY_DECLARATION:new  float  [  ]  {  cy  , sx  * sy  ,-cx* sy  ,0,0, cx  , sx  ,0, sy  ,-cy* sx  , cx  * cy  ,0,0,-cx, zoom  - sx  ,1 }
		NEW_STATEMENT:new  float  [  ] 
				KEYWORD:new 
				TYPE:float  [  ]
						TYPE:float
						IGNORED:
						COMPOSITE:[  ]
								KEYWORD:[
								EXPRESSION:
										IGNORED:
								KEYWORD:]
				IGNORED:
		ARRAY_CONTENT:{  cy  , sx  * sy  ,-cx* sy  ,0,0, cx  , sx  ,0, sy  ,-cy* sx  , cx  * cy  ,0,0,-cx, zoom  - sx  ,1 }
				KEYWORD:{
				SEQUENCE: cy  , sx  * sy  ,-cx* sy  ,0,0, cx  , sx  ,0, sy  ,-cy* sx  , cx  * cy  ,0,0,-cx, zoom  - sx  ,1
						EXPRESSION: cy  
								COMPOSITE: cy  
										IGNORED:
										VARIABLE:cy  
												NAME:cy
												IGNORED:
												IGNORED:
						KEYWORD:,
						EXPRESSION: sx  * sy  
								COMPOSITE: sx  
										IGNORED:
										VARIABLE:sx  
												NAME:sx
												IGNORED:
												IGNORED:
								OPERATOR:*
								COMPOSITE: sy  
										IGNORED:
										VARIABLE:sy  
												NAME:sy
												IGNORED:
												IGNORED:
						KEYWORD:,
						EXPRESSION:-cx* sy  
								VALUE:-cx
								OPERATOR:*
								COMPOSITE: sy  
										IGNORED:
										VARIABLE:sy  
												NAME:sy
												IGNORED:
												IGNORED:
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION: cx  
								COMPOSITE: cx  
										IGNORED:
										VARIABLE:cx  
												NAME:cx
												IGNORED:
												IGNORED:
						KEYWORD:,
						EXPRESSION: sx  
								COMPOSITE: sx  
										IGNORED:
										VARIABLE:sx  
												NAME:sx
												IGNORED:
												IGNORED:
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION: sy  
								COMPOSITE: sy  
										IGNORED:
										VARIABLE:sy  
												NAME:sy
												IGNORED:
												IGNORED:
						KEYWORD:,
						EXPRESSION:-cy* sx  
								VALUE:-cy
								OPERATOR:*
								COMPOSITE: sx  
										IGNORED:
										VARIABLE:sx  
												NAME:sx
												IGNORED:
												IGNORED:
						KEYWORD:,
						EXPRESSION: cx  * cy  
								COMPOSITE: cx  
										IGNORED:
										VARIABLE:cx  
												NAME:cx
												IGNORED:
												IGNORED:
								OPERATOR:*
								COMPOSITE: cy  
										IGNORED:
										VARIABLE:cy  
												NAME:cy
												IGNORED:
												IGNORED:
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:0
								VALUE:0
						KEYWORD:,
						EXPRESSION:-cx
								VALUE:-cx
						KEYWORD:,
						EXPRESSION: zoom  - sx  
								COMPOSITE: zoom  
										IGNORED:
										VARIABLE:zoom  
												NAME:zoom
												IGNORED:
												IGNORED:
								OPERATOR:-
								COMPOSITE: sx  
										IGNORED:
										VARIABLE:sx  
												NAME:sx
												IGNORED:
												IGNORED:
						KEYWORD:,
						EXPRESSION:1
								VALUE:1
				KEYWORD:}


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix    =   BufferUtil.newFloatBuffer   (  mvMatrixv   )
NAME:mvMatrix  
		NAME:mvMatrix
		IGNORED:
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:  BufferUtil.newFloatBuffer   (  mvMatrixv   )
		CALL:  BufferUtil.newFloatBuffer   (  mvMatrixv   )
				IGNORED:
				IGNORED:
				SEQUENCE:BufferUtil.newFloatBuffer   (  mvMatrixv   )
						COMPOSITE:BufferUtil.newFloatBuffer   (  mvMatrixv   )
								COMPOSITE:BufferUtil.newFloatBuffer  
										NAME:BufferUtil.newFloatBuffer
										IGNORED:
										IGNORED:
								KEYWORD:(
								SEQUENCE: mvMatrixv  
										EXPRESSION: mvMatrixv  
												COMPOSITE: mvMatrixv  
														IGNORED:
														VARIABLE:mvMatrixv  
																NAME:mvMatrixv
																IGNORED:
																IGNORED:
								KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl FrontFace ( GL2 .GL_ CCW )
OPENGL_CALL: gl . gl FrontFace ( GL2 .GL_ CCW )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:FrontFace
		KEYWORD:(
		SEQUENCE:GL2 .GL_ CCW
				EXPRESSION:GL2 .GL_ CCW
						OPENGL_CONSTANT:GL2 .GL_ CCW
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:CCW
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  cubeVertexPositionBuffer  [ 0 ] )
OPENGL_CALL: gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  cubeVertexPositionBuffer  [ 0 ] )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BindBuffer
		KEYWORD:(
		SEQUENCE:GL2 .GL_ ARRAY_BUFFER,  cubeVertexPositionBuffer  [ 0 ]
				EXPRESSION:GL2 .GL_ ARRAY_BUFFER
						OPENGL_CONSTANT:GL2 .GL_ ARRAY_BUFFER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION: cubeVertexPositionBuffer  [ 0 ]
						COMPOSITE: cubeVertexPositionBuffer  [ 0 ]
								IGNORED:
								VARIABLE:cubeVertexPositionBuffer  [ 0 ]
										NAME:cubeVertexPositionBuffer
										IGNORED:
										COMPOSITE:[ 0 ]
												KEYWORD:[
												EXPRESSION:0
														VALUE:0
												KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl VertexAttribPointer (  vertexPositionAttribute  ,  cubeVertexPositionBuffer  [ 1 ], GL2 .GL_ FLOAT,  false  , 0, 0 )
OPENGL_CALL: gl . gl VertexAttribPointer (  vertexPositionAttribute  ,  cubeVertexPositionBuffer  [ 1 ], GL2 .GL_ FLOAT,  false  , 0, 0 )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:VertexAttribPointer
		KEYWORD:(
		SEQUENCE: vertexPositionAttribute  ,  cubeVertexPositionBuffer  [ 1 ], GL2 .GL_ FLOAT,  false  , 0, 0
				EXPRESSION: vertexPositionAttribute  
						COMPOSITE: vertexPositionAttribute  
								IGNORED:
								VARIABLE:vertexPositionAttribute  
										NAME:vertexPositionAttribute
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION: cubeVertexPositionBuffer  [ 1 ]
						COMPOSITE: cubeVertexPositionBuffer  [ 1 ]
								IGNORED:
								VARIABLE:cubeVertexPositionBuffer  [ 1 ]
										NAME:cubeVertexPositionBuffer
										IGNORED:
										COMPOSITE:[ 1 ]
												KEYWORD:[
												EXPRESSION:1
														VALUE:1
												KEYWORD:]
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ FLOAT
						OPENGL_CONSTANT:GL2 .GL_ FLOAT
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION: false  
						COMPOSITE: false  
								IGNORED:
								VARIABLE:false  
										NAME:false
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  cubeVertexTextureCoordBuffer  [ 0 ] )
OPENGL_CALL: gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  cubeVertexTextureCoordBuffer  [ 0 ] )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BindBuffer
		KEYWORD:(
		SEQUENCE:GL2 .GL_ ARRAY_BUFFER,  cubeVertexTextureCoordBuffer  [ 0 ]
				EXPRESSION:GL2 .GL_ ARRAY_BUFFER
						OPENGL_CONSTANT:GL2 .GL_ ARRAY_BUFFER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION: cubeVertexTextureCoordBuffer  [ 0 ]
						COMPOSITE: cubeVertexTextureCoordBuffer  [ 0 ]
								IGNORED:
								VARIABLE:cubeVertexTextureCoordBuffer  [ 0 ]
										NAME:cubeVertexTextureCoordBuffer
										IGNORED:
										COMPOSITE:[ 0 ]
												KEYWORD:[
												EXPRESSION:0
														VALUE:0
												KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl VertexAttribPointer (  textureCoordAttribute  ,  cubeVertexTextureCoordBuffer  [ 1 ], GL2 .GL_ FLOAT,  false  , 0, 0 )
OPENGL_CALL: gl . gl VertexAttribPointer (  textureCoordAttribute  ,  cubeVertexTextureCoordBuffer  [ 1 ], GL2 .GL_ FLOAT,  false  , 0, 0 )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:VertexAttribPointer
		KEYWORD:(
		SEQUENCE: textureCoordAttribute  ,  cubeVertexTextureCoordBuffer  [ 1 ], GL2 .GL_ FLOAT,  false  , 0, 0
				EXPRESSION: textureCoordAttribute  
						COMPOSITE: textureCoordAttribute  
								IGNORED:
								VARIABLE:textureCoordAttribute  
										NAME:textureCoordAttribute
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION: cubeVertexTextureCoordBuffer  [ 1 ]
						COMPOSITE: cubeVertexTextureCoordBuffer  [ 1 ]
								IGNORED:
								VARIABLE:cubeVertexTextureCoordBuffer  [ 1 ]
										NAME:cubeVertexTextureCoordBuffer
										IGNORED:
										COMPOSITE:[ 1 ]
												KEYWORD:[
												EXPRESSION:1
														VALUE:1
												KEYWORD:]
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ FLOAT
						OPENGL_CONSTANT:GL2 .GL_ FLOAT
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION: false  
						COMPOSITE: false  
								IGNORED:
								VARIABLE:false  
										NAME:false
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl ActiveTexture ( GL2 .GL_ TEXTURE0 )
OPENGL_CALL: gl . gl ActiveTexture ( GL2 .GL_ TEXTURE0 )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:ActiveTexture
		KEYWORD:(
		SEQUENCE:GL2 .GL_ TEXTURE0
				EXPRESSION:GL2 .GL_ TEXTURE0
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE0
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BindTexture ( GL2 .GL_ TEXTURE_2D,  textures  [ 0 ] )
OPENGL_CALL: gl . gl BindTexture ( GL2 .GL_ TEXTURE_2D,  textures  [ 0 ] )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BindTexture
		KEYWORD:(
		SEQUENCE:GL2 .GL_ TEXTURE_2D,  textures  [ 0 ]
				EXPRESSION:GL2 .GL_ TEXTURE_2D
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_2D
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION: textures  [ 0 ]
						COMPOSITE: textures  [ 0 ]
								IGNORED:
								VARIABLE:textures  [ 0 ]
										NAME:textures
										IGNORED:
										COMPOSITE:[ 0 ]
												KEYWORD:[
												EXPRESSION:0
														VALUE:0
												KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl Uniform1i (  samplerUniform  , 0 )
OPENGL_CALL: gl . gl Uniform1i (  samplerUniform  , 0 )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:Uniform1i
		KEYWORD:(
		SEQUENCE: samplerUniform  , 0
				EXPRESSION: samplerUniform  
						COMPOSITE: samplerUniform  
								IGNORED:
								VARIABLE:samplerUniform  
										NAME:samplerUniform
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BindBuffer ( GL2 .GL_ ELEMENT_ARRAY_BUFFER,  cubeVertexIndexBuffer  [ 0 ] )
OPENGL_CALL: gl . gl BindBuffer ( GL2 .GL_ ELEMENT_ARRAY_BUFFER,  cubeVertexIndexBuffer  [ 0 ] )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BindBuffer
		KEYWORD:(
		SEQUENCE:GL2 .GL_ ELEMENT_ARRAY_BUFFER,  cubeVertexIndexBuffer  [ 0 ]
				EXPRESSION:GL2 .GL_ ELEMENT_ARRAY_BUFFER
						OPENGL_CONSTANT:GL2 .GL_ ELEMENT_ARRAY_BUFFER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:ELEMENT_ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION: cubeVertexIndexBuffer  [ 0 ]
						COMPOSITE: cubeVertexIndexBuffer  [ 0 ]
								IGNORED:
								VARIABLE:cubeVertexIndexBuffer  [ 0 ]
										NAME:cubeVertexIndexBuffer
										IGNORED:
										COMPOSITE:[ 0 ]
												KEYWORD:[
												EXPRESSION:0
														VALUE:0
												KEYWORD:]
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->   setMatrixUniforms   (  gl   )
CALL:  setMatrixUniforms   (  gl   )
		IGNORED:
		IGNORED:
		SEQUENCE:setMatrixUniforms   (  gl   )
				COMPOSITE:setMatrixUniforms   (  gl   )
						COMPOSITE:setMatrixUniforms  
								NAME:setMatrixUniforms
								IGNORED:
								IGNORED:
						KEYWORD:(
						SEQUENCE: gl  
								EXPRESSION: gl  
										COMPOSITE: gl  
												IGNORED:
												VARIABLE:gl  
														NAME:gl
														IGNORED:
														IGNORED:
						KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl DrawElements ( GL2 .GL_ TRIANGLES,  cubeVertexIndexBuffer  [ 2 ], GL2 .GL_ UNSIGNED_SHORT, 0 )
OPENGL_CALL: gl . gl DrawElements ( GL2 .GL_ TRIANGLES,  cubeVertexIndexBuffer  [ 2 ], GL2 .GL_ UNSIGNED_SHORT, 0 )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:DrawElements
		KEYWORD:(
		SEQUENCE:GL2 .GL_ TRIANGLES,  cubeVertexIndexBuffer  [ 2 ], GL2 .GL_ UNSIGNED_SHORT, 0
				EXPRESSION:GL2 .GL_ TRIANGLES
						OPENGL_CONSTANT:GL2 .GL_ TRIANGLES
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TRIANGLES
				KEYWORD:, 
				EXPRESSION: cubeVertexIndexBuffer  [ 2 ]
						COMPOSITE: cubeVertexIndexBuffer  [ 2 ]
								IGNORED:
								VARIABLE:cubeVertexIndexBuffer  [ 2 ]
										NAME:cubeVertexIndexBuffer
										IGNORED:
										COMPOSITE:[ 2 ]
												KEYWORD:[
												EXPRESSION:2
														VALUE:2
												KEYWORD:]
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ UNSIGNED_SHORT
						OPENGL_CONSTANT:GL2 .GL_ UNSIGNED_SHORT
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:UNSIGNED_SHORT
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  doorVertexPositionBuffer  [ 0 ] )
OPENGL_CALL: gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  doorVertexPositionBuffer  [ 0 ] )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BindBuffer
		KEYWORD:(
		SEQUENCE:GL2 .GL_ ARRAY_BUFFER,  doorVertexPositionBuffer  [ 0 ]
				EXPRESSION:GL2 .GL_ ARRAY_BUFFER
						OPENGL_CONSTANT:GL2 .GL_ ARRAY_BUFFER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION: doorVertexPositionBuffer  [ 0 ]
						COMPOSITE: doorVertexPositionBuffer  [ 0 ]
								IGNORED:
								VARIABLE:doorVertexPositionBuffer  [ 0 ]
										NAME:doorVertexPositionBuffer
										IGNORED:
										COMPOSITE:[ 0 ]
												KEYWORD:[
												EXPRESSION:0
														VALUE:0
												KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl VertexAttribPointer (  vertexPositionAttribute  ,  doorVertexPositionBuffer  [ 1 ], GL2 .GL_ FLOAT,  false  , 0, 0 )
OPENGL_CALL: gl . gl VertexAttribPointer (  vertexPositionAttribute  ,  doorVertexPositionBuffer  [ 1 ], GL2 .GL_ FLOAT,  false  , 0, 0 )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:VertexAttribPointer
		KEYWORD:(
		SEQUENCE: vertexPositionAttribute  ,  doorVertexPositionBuffer  [ 1 ], GL2 .GL_ FLOAT,  false  , 0, 0
				EXPRESSION: vertexPositionAttribute  
						COMPOSITE: vertexPositionAttribute  
								IGNORED:
								VARIABLE:vertexPositionAttribute  
										NAME:vertexPositionAttribute
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION: doorVertexPositionBuffer  [ 1 ]
						COMPOSITE: doorVertexPositionBuffer  [ 1 ]
								IGNORED:
								VARIABLE:doorVertexPositionBuffer  [ 1 ]
										NAME:doorVertexPositionBuffer
										IGNORED:
										COMPOSITE:[ 1 ]
												KEYWORD:[
												EXPRESSION:1
														VALUE:1
												KEYWORD:]
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ FLOAT
						OPENGL_CONSTANT:GL2 .GL_ FLOAT
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION: false  
						COMPOSITE: false  
								IGNORED:
								VARIABLE:false  
										NAME:false
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  doorVertexTextureCoordBuffer  [ 0 ] )
OPENGL_CALL: gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  doorVertexTextureCoordBuffer  [ 0 ] )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BindBuffer
		KEYWORD:(
		SEQUENCE:GL2 .GL_ ARRAY_BUFFER,  doorVertexTextureCoordBuffer  [ 0 ]
				EXPRESSION:GL2 .GL_ ARRAY_BUFFER
						OPENGL_CONSTANT:GL2 .GL_ ARRAY_BUFFER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION: doorVertexTextureCoordBuffer  [ 0 ]
						COMPOSITE: doorVertexTextureCoordBuffer  [ 0 ]
								IGNORED:
								VARIABLE:doorVertexTextureCoordBuffer  [ 0 ]
										NAME:doorVertexTextureCoordBuffer
										IGNORED:
										COMPOSITE:[ 0 ]
												KEYWORD:[
												EXPRESSION:0
														VALUE:0
												KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl VertexAttribPointer (  textureCoordAttribute  ,  doorVertexTextureCoordBuffer  [ 1 ], GL2 .GL_ FLOAT,  false  , 0, 0 )
OPENGL_CALL: gl . gl VertexAttribPointer (  textureCoordAttribute  ,  doorVertexTextureCoordBuffer  [ 1 ], GL2 .GL_ FLOAT,  false  , 0, 0 )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:VertexAttribPointer
		KEYWORD:(
		SEQUENCE: textureCoordAttribute  ,  doorVertexTextureCoordBuffer  [ 1 ], GL2 .GL_ FLOAT,  false  , 0, 0
				EXPRESSION: textureCoordAttribute  
						COMPOSITE: textureCoordAttribute  
								IGNORED:
								VARIABLE:textureCoordAttribute  
										NAME:textureCoordAttribute
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION: doorVertexTextureCoordBuffer  [ 1 ]
						COMPOSITE: doorVertexTextureCoordBuffer  [ 1 ]
								IGNORED:
								VARIABLE:doorVertexTextureCoordBuffer  [ 1 ]
										NAME:doorVertexTextureCoordBuffer
										IGNORED:
										COMPOSITE:[ 1 ]
												KEYWORD:[
												EXPRESSION:1
														VALUE:1
												KEYWORD:]
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ FLOAT
						OPENGL_CONSTANT:GL2 .GL_ FLOAT
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION: false  
						COMPOSITE: false  
								IGNORED:
								VARIABLE:false  
										NAME:false
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BindTexture ( GL2 .GL_ TEXTURE_2D,  textures  [ 3 ] )
OPENGL_CALL: gl . gl BindTexture ( GL2 .GL_ TEXTURE_2D,  textures  [ 3 ] )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BindTexture
		KEYWORD:(
		SEQUENCE:GL2 .GL_ TEXTURE_2D,  textures  [ 3 ]
				EXPRESSION:GL2 .GL_ TEXTURE_2D
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_2D
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION: textures  [ 3 ]
						COMPOSITE: textures  [ 3 ]
								IGNORED:
								VARIABLE:textures  [ 3 ]
										NAME:textures
										IGNORED:
										COMPOSITE:[ 3 ]
												KEYWORD:[
												EXPRESSION:3
														VALUE:3
												KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl Uniform1i (  samplerUniform  , 0 )
OPENGL_CALL: gl . gl Uniform1i (  samplerUniform  , 0 )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:Uniform1i
		KEYWORD:(
		SEQUENCE: samplerUniform  , 0
				EXPRESSION: samplerUniform  
						COMPOSITE: samplerUniform  
								IGNORED:
								VARIABLE:samplerUniform  
										NAME:samplerUniform
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->   setMatrixUniforms   (  gl   )
CALL:  setMatrixUniforms   (  gl   )
		IGNORED:
		IGNORED:
		SEQUENCE:setMatrixUniforms   (  gl   )
				COMPOSITE:setMatrixUniforms   (  gl   )
						COMPOSITE:setMatrixUniforms  
								NAME:setMatrixUniforms
								IGNORED:
								IGNORED:
						KEYWORD:(
						SEQUENCE: gl  
								EXPRESSION: gl  
										COMPOSITE: gl  
												IGNORED:
												VARIABLE:gl  
														NAME:gl
														IGNORED:
														IGNORED:
						KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl DrawArrays ( GL2 .GL_ TRIANGLE_STRIP, 0,  doorVertexPositionBuffer  [ 2 ] )
OPENGL_CALL: gl . gl DrawArrays ( GL2 .GL_ TRIANGLE_STRIP, 0,  doorVertexPositionBuffer  [ 2 ] )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:DrawArrays
		KEYWORD:(
		SEQUENCE:GL2 .GL_ TRIANGLE_STRIP, 0,  doorVertexPositionBuffer  [ 2 ]
				EXPRESSION:GL2 .GL_ TRIANGLE_STRIP
						OPENGL_CONSTANT:GL2 .GL_ TRIANGLE_STRIP
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TRIANGLE_STRIP
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION: doorVertexPositionBuffer  [ 2 ]
						COMPOSITE: doorVertexPositionBuffer  [ 2 ]
								IGNORED:
								VARIABLE:doorVertexPositionBuffer  [ 2 ]
										NAME:doorVertexPositionBuffer
										IGNORED:
										COMPOSITE:[ 2 ]
												KEYWORD:[
												EXPRESSION:2
														VALUE:2
												KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl Disable ( GL2 .GL_ CULL_FACE )
OPENGL_CALL: gl . gl Disable ( GL2 .GL_ CULL_FACE )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:Disable
		KEYWORD:(
		SEQUENCE:GL2 .GL_ CULL_FACE
				EXPRESSION:GL2 .GL_ CULL_FACE
						OPENGL_CONSTANT:GL2 .GL_ CULL_FACE
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:CULL_FACE
		KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> float[] mvMatrixv2   =   Arrays.copyOf   (  mvMatrixv  ,  mvMatrixv.length   )
VARIABLE:float[] mvMatrixv2  
		TYPE:float[]
		NAME:mvMatrixv2  
				NAME:mvMatrixv2
				IGNORED:
				IGNORED:
KEYWORD:=
CALL:  Arrays.copyOf   (  mvMatrixv  ,  mvMatrixv.length   )
		IGNORED:
		IGNORED:
		SEQUENCE:Arrays.copyOf   (  mvMatrixv  ,  mvMatrixv.length   )
				COMPOSITE:Arrays.copyOf   (  mvMatrixv  ,  mvMatrixv.length   )
						COMPOSITE:Arrays.copyOf  
								NAME:Arrays.copyOf
								IGNORED:
								IGNORED:
						KEYWORD:(
						SEQUENCE: mvMatrixv  ,  mvMatrixv.length  
								EXPRESSION: mvMatrixv  
										COMPOSITE: mvMatrixv  
												IGNORED:
												VARIABLE:mvMatrixv  
														NAME:mvMatrixv
														IGNORED:
														IGNORED:
								KEYWORD:, 
								EXPRESSION: mvMatrixv.length  
										COMPOSITE: mvMatrixv.length  
												IGNORED:
												VARIABLE:mvMatrixv.length  
														NAME:mvMatrixv.length
														IGNORED:
														IGNORED:
						KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrixv  [ 0 ] * = 10
NAME:mvMatrixv  [ 0 ]
		NAME:mvMatrixv
		IGNORED:
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
KEYWORD:*
KEYWORD:=
EXPRESSION:10
		VALUE:10


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrixv  [ 1 ] * = 10
NAME:mvMatrixv  [ 1 ]
		NAME:mvMatrixv
		IGNORED:
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
KEYWORD:*
KEYWORD:=
EXPRESSION:10
		VALUE:10


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrixv  [ 2 ] * = 10
NAME:mvMatrixv  [ 2 ]
		NAME:mvMatrixv
		IGNORED:
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
KEYWORD:*
KEYWORD:=
EXPRESSION:10
		VALUE:10


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrixv  [ 8 ] * = 10
NAME:mvMatrixv  [ 8 ]
		NAME:mvMatrixv
		IGNORED:
		COMPOSITE:[ 8 ]
				KEYWORD:[
				EXPRESSION:8
						VALUE:8
				KEYWORD:]
KEYWORD:*
KEYWORD:=
EXPRESSION:10
		VALUE:10


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrixv  [ 9 ] * = 10
NAME:mvMatrixv  [ 9 ]
		NAME:mvMatrixv
		IGNORED:
		COMPOSITE:[ 9 ]
				KEYWORD:[
				EXPRESSION:9
						VALUE:9
				KEYWORD:]
KEYWORD:*
KEYWORD:=
EXPRESSION:10
		VALUE:10


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrixv  [ 10 ] * = 10
NAME:mvMatrixv  [ 10 ]
		NAME:mvMatrixv
		IGNORED:
		COMPOSITE:[ 10 ]
				KEYWORD:[
				EXPRESSION:10
						VALUE:10
				KEYWORD:]
KEYWORD:*
KEYWORD:=
EXPRESSION:10
		VALUE:10


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix    =   BufferUtil.newFloatBuffer   (  mvMatrixv   )
NAME:mvMatrix  
		NAME:mvMatrix
		IGNORED:
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:  BufferUtil.newFloatBuffer   (  mvMatrixv   )
		CALL:  BufferUtil.newFloatBuffer   (  mvMatrixv   )
				IGNORED:
				IGNORED:
				SEQUENCE:BufferUtil.newFloatBuffer   (  mvMatrixv   )
						COMPOSITE:BufferUtil.newFloatBuffer   (  mvMatrixv   )
								COMPOSITE:BufferUtil.newFloatBuffer  
										NAME:BufferUtil.newFloatBuffer
										IGNORED:
										IGNORED:
								KEYWORD:(
								SEQUENCE: mvMatrixv  
										EXPRESSION: mvMatrixv  
												COMPOSITE: mvMatrixv  
														IGNORED:
														VARIABLE:mvMatrixv  
																NAME:mvMatrixv
																IGNORED:
																IGNORED:
								KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  greenVertexPositionBuffer  [ 0 ] )
OPENGL_CALL: gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  greenVertexPositionBuffer  [ 0 ] )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BindBuffer
		KEYWORD:(
		SEQUENCE:GL2 .GL_ ARRAY_BUFFER,  greenVertexPositionBuffer  [ 0 ]
				EXPRESSION:GL2 .GL_ ARRAY_BUFFER
						OPENGL_CONSTANT:GL2 .GL_ ARRAY_BUFFER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION: greenVertexPositionBuffer  [ 0 ]
						COMPOSITE: greenVertexPositionBuffer  [ 0 ]
								IGNORED:
								VARIABLE:greenVertexPositionBuffer  [ 0 ]
										NAME:greenVertexPositionBuffer
										IGNORED:
										COMPOSITE:[ 0 ]
												KEYWORD:[
												EXPRESSION:0
														VALUE:0
												KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl VertexAttribPointer (  vertexPositionAttribute  ,  greenVertexPositionBuffer  [ 1 ], GL2 .GL_ FLOAT,  false  , 0, 0 )
OPENGL_CALL: gl . gl VertexAttribPointer (  vertexPositionAttribute  ,  greenVertexPositionBuffer  [ 1 ], GL2 .GL_ FLOAT,  false  , 0, 0 )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:VertexAttribPointer
		KEYWORD:(
		SEQUENCE: vertexPositionAttribute  ,  greenVertexPositionBuffer  [ 1 ], GL2 .GL_ FLOAT,  false  , 0, 0
				EXPRESSION: vertexPositionAttribute  
						COMPOSITE: vertexPositionAttribute  
								IGNORED:
								VARIABLE:vertexPositionAttribute  
										NAME:vertexPositionAttribute
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION: greenVertexPositionBuffer  [ 1 ]
						COMPOSITE: greenVertexPositionBuffer  [ 1 ]
								IGNORED:
								VARIABLE:greenVertexPositionBuffer  [ 1 ]
										NAME:greenVertexPositionBuffer
										IGNORED:
										COMPOSITE:[ 1 ]
												KEYWORD:[
												EXPRESSION:1
														VALUE:1
												KEYWORD:]
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ FLOAT
						OPENGL_CONSTANT:GL2 .GL_ FLOAT
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION: false  
						COMPOSITE: false  
								IGNORED:
								VARIABLE:false  
										NAME:false
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  greenVertexTextureCoordBuffer  [ 0 ] )
OPENGL_CALL: gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  greenVertexTextureCoordBuffer  [ 0 ] )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BindBuffer
		KEYWORD:(
		SEQUENCE:GL2 .GL_ ARRAY_BUFFER,  greenVertexTextureCoordBuffer  [ 0 ]
				EXPRESSION:GL2 .GL_ ARRAY_BUFFER
						OPENGL_CONSTANT:GL2 .GL_ ARRAY_BUFFER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION: greenVertexTextureCoordBuffer  [ 0 ]
						COMPOSITE: greenVertexTextureCoordBuffer  [ 0 ]
								IGNORED:
								VARIABLE:greenVertexTextureCoordBuffer  [ 0 ]
										NAME:greenVertexTextureCoordBuffer
										IGNORED:
										COMPOSITE:[ 0 ]
												KEYWORD:[
												EXPRESSION:0
														VALUE:0
												KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl VertexAttribPointer (  textureCoordAttribute  ,  greenVertexTextureCoordBuffer  [ 1 ], GL2 .GL_ FLOAT,  false  , 0, 0 )
OPENGL_CALL: gl . gl VertexAttribPointer (  textureCoordAttribute  ,  greenVertexTextureCoordBuffer  [ 1 ], GL2 .GL_ FLOAT,  false  , 0, 0 )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:VertexAttribPointer
		KEYWORD:(
		SEQUENCE: textureCoordAttribute  ,  greenVertexTextureCoordBuffer  [ 1 ], GL2 .GL_ FLOAT,  false  , 0, 0
				EXPRESSION: textureCoordAttribute  
						COMPOSITE: textureCoordAttribute  
								IGNORED:
								VARIABLE:textureCoordAttribute  
										NAME:textureCoordAttribute
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION: greenVertexTextureCoordBuffer  [ 1 ]
						COMPOSITE: greenVertexTextureCoordBuffer  [ 1 ]
								IGNORED:
								VARIABLE:greenVertexTextureCoordBuffer  [ 1 ]
										NAME:greenVertexTextureCoordBuffer
										IGNORED:
										COMPOSITE:[ 1 ]
												KEYWORD:[
												EXPRESSION:1
														VALUE:1
												KEYWORD:]
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ FLOAT
						OPENGL_CONSTANT:GL2 .GL_ FLOAT
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION: false  
						COMPOSITE: false  
								IGNORED:
								VARIABLE:false  
										NAME:false
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BindTexture ( GL2 .GL_ TEXTURE_2D,  textures  [ 2 ] )
OPENGL_CALL: gl . gl BindTexture ( GL2 .GL_ TEXTURE_2D,  textures  [ 2 ] )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BindTexture
		KEYWORD:(
		SEQUENCE:GL2 .GL_ TEXTURE_2D,  textures  [ 2 ]
				EXPRESSION:GL2 .GL_ TEXTURE_2D
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_2D
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION: textures  [ 2 ]
						COMPOSITE: textures  [ 2 ]
								IGNORED:
								VARIABLE:textures  [ 2 ]
										NAME:textures
										IGNORED:
										COMPOSITE:[ 2 ]
												KEYWORD:[
												EXPRESSION:2
														VALUE:2
												KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl Uniform1i (  samplerUniform  , 0 )
OPENGL_CALL: gl . gl Uniform1i (  samplerUniform  , 0 )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:Uniform1i
		KEYWORD:(
		SEQUENCE: samplerUniform  , 0
				EXPRESSION: samplerUniform  
						COMPOSITE: samplerUniform  
								IGNORED:
								VARIABLE:samplerUniform  
										NAME:samplerUniform
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->   setMatrixUniforms   (  gl   )
CALL:  setMatrixUniforms   (  gl   )
		IGNORED:
		IGNORED:
		SEQUENCE:setMatrixUniforms   (  gl   )
				COMPOSITE:setMatrixUniforms   (  gl   )
						COMPOSITE:setMatrixUniforms  
								NAME:setMatrixUniforms
								IGNORED:
								IGNORED:
						KEYWORD:(
						SEQUENCE: gl  
								EXPRESSION: gl  
										COMPOSITE: gl  
												IGNORED:
												VARIABLE:gl  
														NAME:gl
														IGNORED:
														IGNORED:
						KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl DrawArrays ( GL2 .GL_ TRIANGLE_STRIP, 0,  greenVertexPositionBuffer  [ 2 ] )
OPENGL_CALL: gl . gl DrawArrays ( GL2 .GL_ TRIANGLE_STRIP, 0,  greenVertexPositionBuffer  [ 2 ] )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:DrawArrays
		KEYWORD:(
		SEQUENCE:GL2 .GL_ TRIANGLE_STRIP, 0,  greenVertexPositionBuffer  [ 2 ]
				EXPRESSION:GL2 .GL_ TRIANGLE_STRIP
						OPENGL_CONSTANT:GL2 .GL_ TRIANGLE_STRIP
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TRIANGLE_STRIP
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION: greenVertexPositionBuffer  [ 2 ]
						COMPOSITE: greenVertexPositionBuffer  [ 2 ]
								IGNORED:
								VARIABLE:greenVertexPositionBuffer  [ 2 ]
										NAME:greenVertexPositionBuffer
										IGNORED:
										COMPOSITE:[ 2 ]
												KEYWORD:[
												EXPRESSION:2
														VALUE:2
												KEYWORD:]
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrixv    =  mvMatrixv2  
NAME:mvMatrixv  
		NAME:mvMatrixv
		IGNORED:
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION: mvMatrixv2  
		COMPOSITE: mvMatrixv2  
				IGNORED:
				VARIABLE:mvMatrixv2  
						NAME:mvMatrixv2
						IGNORED:
						IGNORED:


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl Enable ( GL2 .GL_ CULL_FACE )
OPENGL_CALL: gl . gl Enable ( GL2 .GL_ CULL_FACE )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:Enable
		KEYWORD:(
		SEQUENCE:GL2 .GL_ CULL_FACE
				EXPRESSION:GL2 .GL_ CULL_FACE
						OPENGL_CONSTANT:GL2 .GL_ CULL_FACE
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:CULL_FACE
		KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrixv  [ 13 ] + = 2* cx  
NAME:mvMatrixv  [ 13 ]
		NAME:mvMatrixv
		IGNORED:
		COMPOSITE:[ 13 ]
				KEYWORD:[
				EXPRESSION:13
						VALUE:13
				KEYWORD:]
KEYWORD:+
KEYWORD:=
EXPRESSION:2* cx  
		VALUE:2
		OPERATOR:*
		COMPOSITE: cx  
				IGNORED:
				VARIABLE:cx  
						NAME:cx
						IGNORED:
						IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrixv  [ 14 ] + = 2* sx  
NAME:mvMatrixv  [ 14 ]
		NAME:mvMatrixv
		IGNORED:
		COMPOSITE:[ 14 ]
				KEYWORD:[
				EXPRESSION:14
						VALUE:14
				KEYWORD:]
KEYWORD:+
KEYWORD:=
EXPRESSION:2* sx  
		VALUE:2
		OPERATOR:*
		COMPOSITE: sx  
				IGNORED:
				VARIABLE:sx  
						NAME:sx
						IGNORED:
						IGNORED:


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> mvMatrix    =   BufferUtil.newFloatBuffer   (  mvMatrixv   )
NAME:mvMatrix  
		NAME:mvMatrix
		IGNORED:
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION:  BufferUtil.newFloatBuffer   (  mvMatrixv   )
		CALL:  BufferUtil.newFloatBuffer   (  mvMatrixv   )
				IGNORED:
				IGNORED:
				SEQUENCE:BufferUtil.newFloatBuffer   (  mvMatrixv   )
						COMPOSITE:BufferUtil.newFloatBuffer   (  mvMatrixv   )
								COMPOSITE:BufferUtil.newFloatBuffer  
										NAME:BufferUtil.newFloatBuffer
										IGNORED:
										IGNORED:
								KEYWORD:(
								SEQUENCE: mvMatrixv  
										EXPRESSION: mvMatrixv  
												COMPOSITE: mvMatrixv  
														IGNORED:
														VARIABLE:mvMatrixv  
																NAME:mvMatrixv
																IGNORED:
																IGNORED:
								KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  pyramidVertexPositionBuffer  [ 0 ] )
OPENGL_CALL: gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  pyramidVertexPositionBuffer  [ 0 ] )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BindBuffer
		KEYWORD:(
		SEQUENCE:GL2 .GL_ ARRAY_BUFFER,  pyramidVertexPositionBuffer  [ 0 ]
				EXPRESSION:GL2 .GL_ ARRAY_BUFFER
						OPENGL_CONSTANT:GL2 .GL_ ARRAY_BUFFER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION: pyramidVertexPositionBuffer  [ 0 ]
						COMPOSITE: pyramidVertexPositionBuffer  [ 0 ]
								IGNORED:
								VARIABLE:pyramidVertexPositionBuffer  [ 0 ]
										NAME:pyramidVertexPositionBuffer
										IGNORED:
										COMPOSITE:[ 0 ]
												KEYWORD:[
												EXPRESSION:0
														VALUE:0
												KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl VertexAttribPointer (  vertexPositionAttribute  ,  pyramidVertexPositionBuffer  [ 1 ], GL2 .GL_ FLOAT,  false  , 0, 0 )
OPENGL_CALL: gl . gl VertexAttribPointer (  vertexPositionAttribute  ,  pyramidVertexPositionBuffer  [ 1 ], GL2 .GL_ FLOAT,  false  , 0, 0 )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:VertexAttribPointer
		KEYWORD:(
		SEQUENCE: vertexPositionAttribute  ,  pyramidVertexPositionBuffer  [ 1 ], GL2 .GL_ FLOAT,  false  , 0, 0
				EXPRESSION: vertexPositionAttribute  
						COMPOSITE: vertexPositionAttribute  
								IGNORED:
								VARIABLE:vertexPositionAttribute  
										NAME:vertexPositionAttribute
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION: pyramidVertexPositionBuffer  [ 1 ]
						COMPOSITE: pyramidVertexPositionBuffer  [ 1 ]
								IGNORED:
								VARIABLE:pyramidVertexPositionBuffer  [ 1 ]
										NAME:pyramidVertexPositionBuffer
										IGNORED:
										COMPOSITE:[ 1 ]
												KEYWORD:[
												EXPRESSION:1
														VALUE:1
												KEYWORD:]
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ FLOAT
						OPENGL_CONSTANT:GL2 .GL_ FLOAT
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION: false  
						COMPOSITE: false  
								IGNORED:
								VARIABLE:false  
										NAME:false
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  pyramidVertexTextureCoordBuffer  [ 0 ] )
OPENGL_CALL: gl . gl BindBuffer ( GL2 .GL_ ARRAY_BUFFER,  pyramidVertexTextureCoordBuffer  [ 0 ] )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BindBuffer
		KEYWORD:(
		SEQUENCE:GL2 .GL_ ARRAY_BUFFER,  pyramidVertexTextureCoordBuffer  [ 0 ]
				EXPRESSION:GL2 .GL_ ARRAY_BUFFER
						OPENGL_CONSTANT:GL2 .GL_ ARRAY_BUFFER
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:ARRAY_BUFFER
				KEYWORD:, 
				EXPRESSION: pyramidVertexTextureCoordBuffer  [ 0 ]
						COMPOSITE: pyramidVertexTextureCoordBuffer  [ 0 ]
								IGNORED:
								VARIABLE:pyramidVertexTextureCoordBuffer  [ 0 ]
										NAME:pyramidVertexTextureCoordBuffer
										IGNORED:
										COMPOSITE:[ 0 ]
												KEYWORD:[
												EXPRESSION:0
														VALUE:0
												KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl VertexAttribPointer (  textureCoordAttribute  ,  pyramidVertexTextureCoordBuffer  [ 1 ], GL2 .GL_ FLOAT,  false  , 0, 0 )
OPENGL_CALL: gl . gl VertexAttribPointer (  textureCoordAttribute  ,  pyramidVertexTextureCoordBuffer  [ 1 ], GL2 .GL_ FLOAT,  false  , 0, 0 )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:VertexAttribPointer
		KEYWORD:(
		SEQUENCE: textureCoordAttribute  ,  pyramidVertexTextureCoordBuffer  [ 1 ], GL2 .GL_ FLOAT,  false  , 0, 0
				EXPRESSION: textureCoordAttribute  
						COMPOSITE: textureCoordAttribute  
								IGNORED:
								VARIABLE:textureCoordAttribute  
										NAME:textureCoordAttribute
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION: pyramidVertexTextureCoordBuffer  [ 1 ]
						COMPOSITE: pyramidVertexTextureCoordBuffer  [ 1 ]
								IGNORED:
								VARIABLE:pyramidVertexTextureCoordBuffer  [ 1 ]
										NAME:pyramidVertexTextureCoordBuffer
										IGNORED:
										COMPOSITE:[ 1 ]
												KEYWORD:[
												EXPRESSION:1
														VALUE:1
												KEYWORD:]
				KEYWORD:, 
				EXPRESSION:GL2 .GL_ FLOAT
						OPENGL_CONSTANT:GL2 .GL_ FLOAT
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:FLOAT
				KEYWORD:, 
				EXPRESSION: false  
						COMPOSITE: false  
								IGNORED:
								VARIABLE:false  
										NAME:false
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl BindTexture ( GL2 .GL_ TEXTURE_2D,  textures  [ 1 ] )
OPENGL_CALL: gl . gl BindTexture ( GL2 .GL_ TEXTURE_2D,  textures  [ 1 ] )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:BindTexture
		KEYWORD:(
		SEQUENCE:GL2 .GL_ TEXTURE_2D,  textures  [ 1 ]
				EXPRESSION:GL2 .GL_ TEXTURE_2D
						OPENGL_CONSTANT:GL2 .GL_ TEXTURE_2D
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TEXTURE_2D
				KEYWORD:, 
				EXPRESSION: textures  [ 1 ]
						COMPOSITE: textures  [ 1 ]
								IGNORED:
								VARIABLE:textures  [ 1 ]
										NAME:textures
										IGNORED:
										COMPOSITE:[ 1 ]
												KEYWORD:[
												EXPRESSION:1
														VALUE:1
												KEYWORD:]
		KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl Uniform1i (  samplerUniform  , 0 )
OPENGL_CALL: gl . gl Uniform1i (  samplerUniform  , 0 )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:Uniform1i
		KEYWORD:(
		SEQUENCE: samplerUniform  , 0
				EXPRESSION: samplerUniform  
						COMPOSITE: samplerUniform  
								IGNORED:
								VARIABLE:samplerUniform  
										NAME:samplerUniform
										IGNORED:
										IGNORED:
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->   setMatrixUniforms   (  gl   )
CALL:  setMatrixUniforms   (  gl   )
		IGNORED:
		IGNORED:
		SEQUENCE:setMatrixUniforms   (  gl   )
				COMPOSITE:setMatrixUniforms   (  gl   )
						COMPOSITE:setMatrixUniforms  
								NAME:setMatrixUniforms
								IGNORED:
								IGNORED:
						KEYWORD:(
						SEQUENCE: gl  
								EXPRESSION: gl  
										COMPOSITE: gl  
												IGNORED:
												VARIABLE:gl  
														NAME:gl
														IGNORED:
														IGNORED:
						KEYWORD:)


[OPENGL_CALL, LINE_OF_CODE] ------->  gl . gl DrawArrays ( GL2 .GL_ TRIANGLE_FAN, 0,  pyramidVertexPositionBuffer  [ 2 ] )
OPENGL_CALL: gl . gl DrawArrays ( GL2 .GL_ TRIANGLE_FAN, 0,  pyramidVertexPositionBuffer  [ 2 ] )
		IGNORED:
		COMPOSITE:gl .
				VALUE:gl
				KEYWORD:.
		KEYWORD:gl
		NAME:DrawArrays
		KEYWORD:(
		SEQUENCE:GL2 .GL_ TRIANGLE_FAN, 0,  pyramidVertexPositionBuffer  [ 2 ]
				EXPRESSION:GL2 .GL_ TRIANGLE_FAN
						OPENGL_CONSTANT:GL2 .GL_ TRIANGLE_FAN
								KEYWORD:GL2
								KEYWORD:.GL_
								NAME:TRIANGLE_FAN
				KEYWORD:, 
				EXPRESSION:0
						VALUE:0
				KEYWORD:, 
				EXPRESSION: pyramidVertexPositionBuffer  [ 2 ]
						COMPOSITE: pyramidVertexPositionBuffer  [ 2 ]
								IGNORED:
								VARIABLE:pyramidVertexPositionBuffer  [ 2 ]
										NAME:pyramidVertexPositionBuffer
										IGNORED:
										COMPOSITE:[ 2 ]
												KEYWORD:[
												EXPRESSION:2
														VALUE:2
												KEYWORD:]
		KEYWORD:)


[CALL, LINE_OF_CODE] ------->   animate   (  )
CALL:  animate   (  )
		IGNORED:
		IGNORED:
		SEQUENCE:animate   (  )
				COMPOSITE:animate   (  )
						COMPOSITE:animate  
								NAME:animate
								IGNORED:
								IGNORED:
						KEYWORD:(
						SEQUENCE:
						KEYWORD:)


[METHOD_DECLARATION] ------->  private void animate   (  )
IGNORED:
SEQUENCE:private
		KEYWORD:private
VARIABLE:void animate  
		TYPE:void
		NAME:animate  
				NAME:animate
				IGNORED:
				IGNORED:
KEYWORD:(
METHOD_VARIABLES:
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> long timeNow   =   System.currentTimeMillis   (  )
VARIABLE:long timeNow  
		TYPE:long
		NAME:timeNow  
				NAME:timeNow
				IGNORED:
				IGNORED:
KEYWORD:=
CALL:  System.currentTimeMillis   (  )
		IGNORED:
		IGNORED:
		SEQUENCE:System.currentTimeMillis   (  )
				COMPOSITE:System.currentTimeMillis   (  )
						COMPOSITE:System.currentTimeMillis  
								NAME:System.currentTimeMillis
								IGNORED:
								IGNORED:
						KEYWORD:(
						SEQUENCE:
						KEYWORD:)


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( lastTime  !=0 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:lastTime  !=0
		VARIABLE:lastTime  
				NAME:lastTime
				IGNORED:
				IGNORED:
		OPERATOR:!=
		VALUE:0
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> rAnglex   + =  speedx  * elapsed  *0.001
NAME:rAnglex  
		NAME:rAnglex
		IGNORED:
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION: speedx  * elapsed  *0.001
		COMPOSITE: speedx  
				IGNORED:
				VARIABLE:speedx  
						NAME:speedx
						IGNORED:
						IGNORED:
		OPERATOR:*
		COMPOSITE: elapsed  
				IGNORED:
				VARIABLE:elapsed  
						NAME:elapsed
						IGNORED:
						IGNORED:
		OPERATOR:*
		VALUE:0.001


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> rAngley   + =  speedy  * elapsed  *0.001
NAME:rAngley  
		NAME:rAngley
		IGNORED:
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION: speedy  * elapsed  *0.001
		COMPOSITE: speedy  
				IGNORED:
				VARIABLE:speedy  
						NAME:speedy
						IGNORED:
						IGNORED:
		OPERATOR:*
		COMPOSITE: elapsed  
				IGNORED:
				VARIABLE:elapsed  
						NAME:elapsed
						IGNORED:
						IGNORED:
		OPERATOR:*
		VALUE:0.001


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> lastTime    =  timeNow  
NAME:lastTime  
		NAME:lastTime
		IGNORED:
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION: timeNow  
		COMPOSITE: timeNow  
				IGNORED:
				VARIABLE:timeNow  
						NAME:timeNow
						IGNORED:
						IGNORED:


[METHOD_DECLARATION] ------->  private void handleKeys   (  )
IGNORED:
SEQUENCE:private
		KEYWORD:private
VARIABLE:void handleKeys  
		TYPE:void
		NAME:handleKeys  
				NAME:handleKeys
				IGNORED:
				IGNORED:
KEYWORD:(
METHOD_VARIABLES:
KEYWORD:)


[VARIABLE_DECLARATION, VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> long timeNow   =   System.currentTimeMillis   (  )
VARIABLE:long timeNow  
		TYPE:long
		NAME:timeNow  
				NAME:timeNow
				IGNORED:
				IGNORED:
KEYWORD:=
CALL:  System.currentTimeMillis   (  )
		IGNORED:
		IGNORED:
		SEQUENCE:System.currentTimeMillis   (  )
				COMPOSITE:System.currentTimeMillis   (  )
						COMPOSITE:System.currentTimeMillis  
								NAME:System.currentTimeMillis
								IGNORED:
								IGNORED:
						KEYWORD:(
						SEQUENCE:
						KEYWORD:)


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( lastTime2  !=0 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:lastTime2  !=0
		VARIABLE:lastTime2  
				NAME:lastTime2
				IGNORED:
				IGNORED:
		OPERATOR:!=
		VALUE:0
KEYWORD:)


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands  [ 0 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands  [ 0 ]
		VARIABLE:commands  [ 0 ]
				NAME:commands
				IGNORED:
				COMPOSITE:[ 0 ]
						KEYWORD:[
						EXPRESSION:0
								VALUE:0
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> zoom   + = 5* elapsed  *0.001
NAME:zoom  
		NAME:zoom
		IGNORED:
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION:5* elapsed  *0.001
		VALUE:5
		OPERATOR:*
		COMPOSITE: elapsed  
				IGNORED:
				VARIABLE:elapsed  
						NAME:elapsed
						IGNORED:
						IGNORED:
		OPERATOR:*
		VALUE:0.001


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands  [ 1 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands  [ 1 ]
		VARIABLE:commands  [ 1 ]
				NAME:commands
				IGNORED:
				COMPOSITE:[ 1 ]
						KEYWORD:[
						EXPRESSION:1
								VALUE:1
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> zoom   - = 5* elapsed  *0.001
NAME:zoom  
		NAME:zoom
		IGNORED:
		IGNORED:
KEYWORD:-
KEYWORD:=
EXPRESSION:5* elapsed  *0.001
		VALUE:5
		OPERATOR:*
		COMPOSITE: elapsed  
				IGNORED:
				VARIABLE:elapsed  
						NAME:elapsed
						IGNORED:
						IGNORED:
		OPERATOR:*
		VALUE:0.001


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands  [ 2 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands  [ 2 ]
		VARIABLE:commands  [ 2 ]
				NAME:commands
				IGNORED:
				COMPOSITE:[ 2 ]
						KEYWORD:[
						EXPRESSION:2
								VALUE:2
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> speedx   - = 2* elapsed  *0.001
NAME:speedx  
		NAME:speedx
		IGNORED:
		IGNORED:
KEYWORD:-
KEYWORD:=
EXPRESSION:2* elapsed  *0.001
		VALUE:2
		OPERATOR:*
		COMPOSITE: elapsed  
				IGNORED:
				VARIABLE:elapsed  
						NAME:elapsed
						IGNORED:
						IGNORED:
		OPERATOR:*
		VALUE:0.001


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands  [ 3 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands  [ 3 ]
		VARIABLE:commands  [ 3 ]
				NAME:commands
				IGNORED:
				COMPOSITE:[ 3 ]
						KEYWORD:[
						EXPRESSION:3
								VALUE:3
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> speedx   + = 2* elapsed  *0.001
NAME:speedx  
		NAME:speedx
		IGNORED:
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION:2* elapsed  *0.001
		VALUE:2
		OPERATOR:*
		COMPOSITE: elapsed  
				IGNORED:
				VARIABLE:elapsed  
						NAME:elapsed
						IGNORED:
						IGNORED:
		OPERATOR:*
		VALUE:0.001


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands  [ 4 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands  [ 4 ]
		VARIABLE:commands  [ 4 ]
				NAME:commands
				IGNORED:
				COMPOSITE:[ 4 ]
						KEYWORD:[
						EXPRESSION:4
								VALUE:4
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> speedy   - = 2* elapsed  *0.001
NAME:speedy  
		NAME:speedy
		IGNORED:
		IGNORED:
KEYWORD:-
KEYWORD:=
EXPRESSION:2* elapsed  *0.001
		VALUE:2
		OPERATOR:*
		COMPOSITE: elapsed  
				IGNORED:
				VARIABLE:elapsed  
						NAME:elapsed
						IGNORED:
						IGNORED:
		OPERATOR:*
		VALUE:0.001


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if ( commands  [ 5 ] )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:commands  [ 5 ]
		VARIABLE:commands  [ 5 ]
				NAME:commands
				IGNORED:
				COMPOSITE:[ 5 ]
						KEYWORD:[
						EXPRESSION:5
								VALUE:5
						KEYWORD:]
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> speedy   + = 2* elapsed  *0.001
NAME:speedy  
		NAME:speedy
		IGNORED:
		IGNORED:
KEYWORD:+
KEYWORD:=
EXPRESSION:2* elapsed  *0.001
		VALUE:2
		OPERATOR:*
		COMPOSITE: elapsed  
				IGNORED:
				VARIABLE:elapsed  
						NAME:elapsed
						IGNORED:
						IGNORED:
		OPERATOR:*
		VALUE:0.001


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> lastTime2    =  timeNow  
NAME:lastTime2  
		NAME:lastTime2
		IGNORED:
		IGNORED:
IGNORED:
KEYWORD:=
EXPRESSION: timeNow  
		COMPOSITE: timeNow  
				IGNORED:
				VARIABLE:timeNow  
						NAME:timeNow
						IGNORED:
						IGNORED:


[METHOD_DECLARATION] ------->  private void setCommands   ( KeyEvent e  , boolean value   )
IGNORED:
SEQUENCE:private
		KEYWORD:private
VARIABLE:void setCommands  
		TYPE:void
		NAME:setCommands  
				NAME:setCommands
				IGNORED:
				IGNORED:
KEYWORD:(
METHOD_VARIABLES:KeyEvent e  , boolean value  
		VARIABLE:KeyEvent e  
				TYPE:KeyEvent
				NAME:e  
						NAME:e
						IGNORED:
						IGNORED:
		KEYWORD:, 
		VARIABLE:boolean value  
				TYPE:boolean
				NAME:value  
						NAME:value
						IGNORED:
						IGNORED:
KEYWORD:)


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if (   e.getKeyCode   (  )==65 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:  e.getKeyCode   (  )==65
		CALL:  e.getKeyCode   (  )
				IGNORED:
				IGNORED:
				SEQUENCE:e.getKeyCode   (  )
						COMPOSITE:e.getKeyCode   (  )
								COMPOSITE:e.getKeyCode  
										NAME:e.getKeyCode
										IGNORED:
										IGNORED:
								KEYWORD:(
								SEQUENCE:
								KEYWORD:)
		OPERATOR:==
		VALUE:65
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands  [ 0 ]  =  value  
NAME:commands  [ 0 ]
		NAME:commands
		IGNORED:
		COMPOSITE:[ 0 ]
				KEYWORD:[
				EXPRESSION:0
						VALUE:0
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION: value  
		COMPOSITE: value  
				IGNORED:
				VARIABLE:value  
						NAME:value
						IGNORED:
						IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if (   e.getKeyCode   (  )==90 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:  e.getKeyCode   (  )==90
		CALL:  e.getKeyCode   (  )
				IGNORED:
				IGNORED:
				SEQUENCE:e.getKeyCode   (  )
						COMPOSITE:e.getKeyCode   (  )
								COMPOSITE:e.getKeyCode  
										NAME:e.getKeyCode
										IGNORED:
										IGNORED:
								KEYWORD:(
								SEQUENCE:
								KEYWORD:)
		OPERATOR:==
		VALUE:90
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands  [ 1 ]  =  value  
NAME:commands  [ 1 ]
		NAME:commands
		IGNORED:
		COMPOSITE:[ 1 ]
				KEYWORD:[
				EXPRESSION:1
						VALUE:1
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION: value  
		COMPOSITE: value  
				IGNORED:
				VARIABLE:value  
						NAME:value
						IGNORED:
						IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if (   e.getKeyCode   (  )==38 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:  e.getKeyCode   (  )==38
		CALL:  e.getKeyCode   (  )
				IGNORED:
				IGNORED:
				SEQUENCE:e.getKeyCode   (  )
						COMPOSITE:e.getKeyCode   (  )
								COMPOSITE:e.getKeyCode  
										NAME:e.getKeyCode
										IGNORED:
										IGNORED:
								KEYWORD:(
								SEQUENCE:
								KEYWORD:)
		OPERATOR:==
		VALUE:38
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands  [ 2 ]  =  value  
NAME:commands  [ 2 ]
		NAME:commands
		IGNORED:
		COMPOSITE:[ 2 ]
				KEYWORD:[
				EXPRESSION:2
						VALUE:2
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION: value  
		COMPOSITE: value  
				IGNORED:
				VARIABLE:value  
						NAME:value
						IGNORED:
						IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if (   e.getKeyCode   (  )==40 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:  e.getKeyCode   (  )==40
		CALL:  e.getKeyCode   (  )
				IGNORED:
				IGNORED:
				SEQUENCE:e.getKeyCode   (  )
						COMPOSITE:e.getKeyCode   (  )
								COMPOSITE:e.getKeyCode  
										NAME:e.getKeyCode
										IGNORED:
										IGNORED:
								KEYWORD:(
								SEQUENCE:
								KEYWORD:)
		OPERATOR:==
		VALUE:40
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands  [ 3 ]  =  value  
NAME:commands  [ 3 ]
		NAME:commands
		IGNORED:
		COMPOSITE:[ 3 ]
				KEYWORD:[
				EXPRESSION:3
						VALUE:3
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION: value  
		COMPOSITE: value  
				IGNORED:
				VARIABLE:value  
						NAME:value
						IGNORED:
						IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if (   e.getKeyCode   (  )==37 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:  e.getKeyCode   (  )==37
		CALL:  e.getKeyCode   (  )
				IGNORED:
				IGNORED:
				SEQUENCE:e.getKeyCode   (  )
						COMPOSITE:e.getKeyCode   (  )
								COMPOSITE:e.getKeyCode  
										NAME:e.getKeyCode
										IGNORED:
										IGNORED:
								KEYWORD:(
								SEQUENCE:
								KEYWORD:)
		OPERATOR:==
		VALUE:37
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands  [ 4 ]  =  value  
NAME:commands  [ 4 ]
		NAME:commands
		IGNORED:
		COMPOSITE:[ 4 ]
				KEYWORD:[
				EXPRESSION:4
						VALUE:4
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION: value  
		COMPOSITE: value  
				IGNORED:
				VARIABLE:value  
						NAME:value
						IGNORED:
						IGNORED:


[IF, ASSIGNMENT, LINE_OF_CODE] ------->  if (   e.getKeyCode   (  )==39 )
IGNORED:
KEYWORD:if
KEYWORD:(
EXPRESSION:  e.getKeyCode   (  )==39
		CALL:  e.getKeyCode   (  )
				IGNORED:
				IGNORED:
				SEQUENCE:e.getKeyCode   (  )
						COMPOSITE:e.getKeyCode   (  )
								COMPOSITE:e.getKeyCode  
										NAME:e.getKeyCode
										IGNORED:
										IGNORED:
								KEYWORD:(
								SEQUENCE:
								KEYWORD:)
		OPERATOR:==
		VALUE:39
KEYWORD:)


[VARIABLE_ASSIGNMENT, ASSIGNMENT, LINE_OF_CODE] -------> commands  [ 5 ]  =  value  
NAME:commands  [ 5 ]
		NAME:commands
		IGNORED:
		COMPOSITE:[ 5 ]
				KEYWORD:[
				EXPRESSION:5
						VALUE:5
				KEYWORD:]
IGNORED:
KEYWORD:=
EXPRESSION: value  
		COMPOSITE: value  
				IGNORED:
				VARIABLE:value  
						NAME:value
						IGNORED:
						IGNORED:


[METHOD_DECLARATION] ------->  public void keyPressed   ( KeyEvent e   )
IGNORED:
SEQUENCE:public
		KEYWORD:public
VARIABLE:void keyPressed  
		TYPE:void
		NAME:keyPressed  
				NAME:keyPressed
				IGNORED:
				IGNORED:
KEYWORD:(
METHOD_VARIABLES:KeyEvent e  
		VARIABLE:KeyEvent e  
				TYPE:KeyEvent
				NAME:e  
						NAME:e
						IGNORED:
						IGNORED:
KEYWORD:)


[CALL, LINE_OF_CODE] ------->   setCommands   (  e  ,  true   )
CALL:  setCommands   (  e  ,  true   )
		IGNORED:
		IGNORED:
		SEQUENCE:setCommands   (  e  ,  true   )
				COMPOSITE:setCommands   (  e  ,  true   )
						COMPOSITE:setCommands  
								NAME:setCommands
								IGNORED:
								IGNORED:
						KEYWORD:(
						SEQUENCE: e  ,  true  
								EXPRESSION: e  
										COMPOSITE: e  
												IGNORED:
												VARIABLE:e  
														NAME:e
														IGNORED:
														IGNORED:
								KEYWORD:, 
								EXPRESSION: true  
										COMPOSITE: true  
												IGNORED:
												VARIABLE:true  
														NAME:true
														IGNORED:
														IGNORED:
						KEYWORD:)


[METHOD_DECLARATION] ------->  public void keyReleased   ( KeyEvent e   )
IGNORED:
SEQUENCE:public
		KEYWORD:public
VARIABLE:void keyReleased  
		TYPE:void
		NAME:keyReleased  
				NAME:keyReleased
				IGNORED:
				IGNORED:
KEYWORD:(
METHOD_VARIABLES:KeyEvent e  
		VARIABLE:KeyEvent e  
				TYPE:KeyEvent
				NAME:e  
						NAME:e
						IGNORED:
						IGNORED:
KEYWORD:)


[CALL, LINE_OF_CODE] ------->   setCommands   (  e  ,  false   )
CALL:  setCommands   (  e  ,  false   )
		IGNORED:
		IGNORED:
		SEQUENCE:setCommands   (  e  ,  false   )
				COMPOSITE:setCommands   (  e  ,  false   )
						COMPOSITE:setCommands  
								NAME:setCommands
								IGNORED:
								IGNORED:
						KEYWORD:(
						SEQUENCE: e  ,  false  
								EXPRESSION: e  
										COMPOSITE: e  
												IGNORED:
												VARIABLE:e  
														NAME:e
														IGNORED:
														IGNORED:
								KEYWORD:, 
								EXPRESSION: false  
										COMPOSITE: false  
												IGNORED:
												VARIABLE:false  
														NAME:false
														IGNORED:
														IGNORED:
						KEYWORD:)


