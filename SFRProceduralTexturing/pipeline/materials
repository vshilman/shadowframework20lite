

materialComponent BrickMat(){
	vec3 red = vec3(0.5,0.1,0.1);
	vec3 gray = vec3(0.6,0.6,0.6);
	vec2 size = vec2(0.3,0.15);
	vec2 pct = vec2(0.90, 0.85);
	
	vec2 MCpos = vec2(position.xy);
	
	vec2 pos = MCpos/size;
	
	pos.x += 0.5 * step(0.5, fract(pos.y*0.5));
	
	pos = fract(pos);
	
	vec2 useBrick = step(pos, pct);
	
	vec3 color = mix(gray, red, useBrick.x * useBrick.y);
	vec3 matnormal = normal;
}

materialComponent BrickMatTextured(Texture texture0){
	vec3 red = vec3(0.5,0.1,0.1);
	vec3 gray = vec3(0.6,0.6,0.6);
	vec2 size = vec2(0.3,0.15);
	vec2 pct = vec2(0.90, 0.85);
	
	vec2 MCpos = vec2(position.xy);
	
	vec2 pos = MCpos/size;
	
	pos.x += 0.5 * step(0.5, fract(pos.y*0.5));
	
	pos = fract(pos);
	
	vec2 useBrick = step(pos, pct);
	
	vec3 color = mix(gray, red, useBrick.x * useBrick.y)*texture2D(texture0_texture,texCoord0).xyz;
	vec3 matnormal = normal;
}

materialComponent TileMat(){
	vec3 blue = vec3(0.61,0.76,0.76);
	vec3 gray = vec3(0.92,0.92,0.92);
	vec2 size = vec2(0.15,0.15);
	vec2 pct = vec2(0.90, 0.90);
	
	vec2 MCpos = vec2(position.xy);
	
	vec2 pos = fract(MCpos/size);
	
	vec2 useTile = step(pos, pct);
	
	vec3 color = mix(gray, blue, useTile.x * useTile.y);
	vec3 matnormal = normal;
}

materialComponent PaperMat(){
	vec3 red = vec3(0.75,0.0,0.0);
	vec3 white = vec3(0.97,0.97,0.92);
	vec2 size = vec2(0.28,1.0);
	vec2 pct = vec2(0.50, 1.0);
	
	vec2 MCpos = vec2(position.xy);
	
	vec2 pos = fract(MCpos/size);
	
	vec2 usePaper = step(pos, pct);
	
	vec3 color = mix(white, red, usePaper.x * usePaper.y);
	vec3 matnormal = normal;
}